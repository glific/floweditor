{"version":3,"sources":["components/simulator/Simulator.module.scss","components/translator/TranslatorTab.module.scss","components/simulator/LogEvent.module.scss","components/dialog/Dialog.module.scss","components/flow/actions/action/Action.module.scss","components/flow/exit/Exit.module.scss","components/simulator/ContextExplorer.module.scss","components/sticky/Sticky.module.scss","components/flow/node/Node.module.scss","components/shared.module.scss","components/flow/routers/case/CaseElement.module.scss","components/revisions/RevisionExplorer.module.scss","components/flow/actions/sendmsg/SendMsgForm.module.scss","components/flow/routers/webhook/WebhookRouterForm.module.scss","components/flow/routers/result/ResultRouterForm.module.scss","components/titlebar/TitleBar.module.scss","components/poptab/PopTab.module.scss","components/form/FormElement.module.scss","components/issues/IssuesTab.module.scss","components/flow/actions/sendbroadcast/SendBroadcast.module.scss","components/flow/actions/sendbroadcast/SendBroadcastForm.module.scss","components/flow/actions/sendmsg/SendMsg.module.scss","components/flow/routers/sequence/SequenceForm.module.scss","components/mediaplayer/MediaPlayer.module.scss","components/flow/routers/localization/RouterLocalizationForm.module.scss","components/draghelper/DragHelper.module.scss","components/index.module.scss","components/form/checkbox/CheckboxElement.module.scss","components/flow/routers/airtime/currency/CurrencyElement.module.scss","components/flow/routers/random/RandomRouterForm.module.scss","components/flow/routers/subflow/SubflowRouterForm.module.scss","components/button/Button.module.scss","components/pill/Pill.module.scss","components/flow/routers/caselist/CaseList.module.scss","components/flow/routers/menu/MenuRouterForm.module.scss","components/form/timeout/TimeoutControl.module.scss","components/canvas/Canvas.module.scss","components/languageselector/LanguageSelector.module.scss","variables.module.scss","components/flow/actions/sendemail/SendEmailForm.module.scss","components/flow/actions/setrunresult/SetRunResultForm.module.scss","components/flow/actions/startsession/StartSession.module.scss","components/counter/Counter.module.scss","components/mountscroll/MountScroll.module.scss","temba/TembaSelect.module.scss","components/form/textinput/TextInputElement.module.scss","components/flow/actions/addurn/AddURNForm.module.scss","components/flow/actions/saymsg/SayMsg.module.scss","components/flow/actions/transferairtime/TransferAirtime.module.scss","components/form/optionaltext/OptionalTextInput.module.scss","components/form/ValidationFailures.module.scss","components/flow/routers/field/FieldRouterForm.module.scss","components/flow/routers/ticket/TicketRouterForm.module.scss","components/canvas/CanvasDraggable.module.scss","static/images/map.jpg","components/form/assetselector/AssetSelector.module.scss","components/nodeeditor/TypeList.module.scss","components/flow/actions/changegroups/removegroups/RemoveGroupsForm.module.scss","components/loading/Loading.module.scss","components/flow/actions/updatecontact/UpdateContactForm.module.scss","components/flow/routers/airtime/AirtimeRouterForm.module.scss","components/flow/routers/digits/DigitsRouterForm.module.scss","components/flow/routers/resthook/ResthookRouterForm.module.scss","components/flow/routers/wait/WaitRouterForm.module.scss","components/flow/routers/classify/ClassifyRouterForm.module.scss","components/flow/Flow.module.scss","global.module.scss","flowTypes.ts","services/Localization.ts","components/button/Button.tsx","utils/index.tsx","components/dialog/Dialog.tsx","store/constants.ts","components/fixy/Fixy.tsx","store/flowContext.ts","config/interfaces.ts","store/currencies.ts","external/index.ts","components/flow/actions/helpers.tsx","components/flow/props.ts","config/ConfigProvider.tsx","components/flow/actions/addlabels/AddLabels.tsx","components/form/FormElement.tsx","config/i18n/index.js","temba/TembaSelect.tsx","components/form/assetselector/helpers.ts","components/form/assetselector/AssetSelector.tsx","config/helpers.ts","components/nodeeditor/TypeList.tsx","store/validators.ts","store/nodeEditor.ts","components/flow/actions/addlabels/AddLabelsForm.tsx","components/flow/actions/addlabels/helpers.ts","components/flow/actions/addurn/helpers.ts","components/form/textinput/TextInputElement.tsx","components/flow/actions/addurn/AddURN.tsx","components/form/select/SelectElement.tsx","components/form/textinput/helpers.tsx","components/flow/actions/addurn/AddURNForm.tsx","components/flow/actions/callresthook/CallResthook.tsx","components/flow/actions/callwebhook/CallWebhook.tsx","components/flow/actions/changegroups/helpers.ts","components/flow/actions/changegroups/addgroups/AddGroupsForm.tsx","components/flow/actions/changegroups/addgroups/helpers.ts","components/flow/actions/changegroups/ChangeGroups.tsx","components/form/checkbox/CheckboxElement.tsx","components/flow/actions/changegroups/removegroups/RemoveGroupsForm.tsx","components/flow/actions/changegroups/removegroups/helpers.ts","components/flow/helpers.ts","components/flow/actions/localization/KeyLocalizationForm.tsx","components/flow/actions/localization/helpers.ts","components/pill/Pill.tsx","components/uploadbutton/UploadButton.tsx","components/flow/actions/localization/MsgLocalizationForm.tsx","components/flow/actions/missing/Missing.tsx","components/flow/actions/playaudio/PlayAudio.tsx","components/flow/actions/playaudio/PlayAudioForm.tsx","components/flow/actions/playaudio/helpers.ts","components/mediaplayer/MediaPlayer.tsx","components/flow/actions/saymsg/SayMsg.tsx","components/flow/actions/saymsg/SayMsgForm.tsx","components/flow/actions/saymsg/helpers.ts","components/flow/actions/sendbroadcast/SendBroadcast.tsx","components/flow/actions/sendbroadcast/helpers.ts","components/loading/Loading.tsx","components/flow/actions/sendbroadcast/SendBroadcastForm.tsx","components/flow/actions/sendemail/SendEmail.tsx","utils/reactselect.ts","components/form/select/tags/TaggingElement.tsx","components/flow/actions/sendemail/SendEmailForm.tsx","components/flow/actions/sendemail/helpers.ts","components/flow/actions/sendmsg/SendMsg.tsx","components/flow/actions/sendmsg/helpers.ts","components/form/multichoice/MultiChoice.tsx","components/flow/actions/sendmsg/SendMsgForm.tsx","components/flow/actions/setrunresult/SetRunResult.tsx","components/flow/actions/setrunresult/SetRunResultForm.tsx","components/flow/actions/setrunresult/helpers.ts","components/flow/actions/startflow/StartFlow.tsx","components/flow/actions/startsession/StartSession.tsx","components/flow/routers/constants.ts","components/flow/actions/startsession/StartSessionForm.tsx","components/flow/actions/startsession/helpers.ts","components/flow/actions/transferairtime/TransferAirtime.tsx","components/flow/actions/updatecontact/UpdateContact.tsx","components/helpers.ts","components/flow/routers/helpers.ts","components/flow/node/helpers.ts","store/mutators.ts","components/flow/actions/updatecontact/UpdateContactForm.tsx","components/flow/routers/airtime/currency/CurrencyElement.tsx","components/form/optionaltext/OptionalTextInput.tsx","components/flow/routers/widgets.tsx","components/form/ValidationFailures.tsx","components/flow/routers/airtime/helpers.ts","components/flow/routers/airtime/AirtimeRouterForm.tsx","config/operatorConfigs.ts","components/flow/routers/case/helpers.ts","components/flow/routers/case/CaseElement.tsx","components/flow/routers/caselist/helpers.ts","components/flow/routers/caselist/CaseList.tsx","components/flow/routers/expression/ExpressionRouterForm.tsx","components/flow/routers/digits/DigitsRouterForm.tsx","components/flow/routers/digits/helpers.ts","components/nodeeditor/constants.ts","components/flow/routers/field/FieldRouterForm.tsx","components/flow/routers/expression/helpers.ts","components/flow/routers/field/helpers.ts","components/flow/routers/groups/helpers.ts","components/flow/routers/localization/helpers.ts","components/flow/routers/groups/GroupsRouterForm.tsx","components/flow/routers/localization/RouterLocalizationForm.tsx","components/flow/routers/menu/helpers.ts","components/flow/routers/menu/MenuRouterForm.tsx","components/flow/routers/random/helpers.ts","components/flow/routers/random/RandomRouterForm.tsx","components/flow/routers/response/helpers.ts","components/flow/routers/response/ResponseRouterForm.tsx","components/form/timeout/TimeoutControl.tsx","components/flow/routers/resthook/helpers.ts","components/flow/routers/resthook/ResthookRouterForm.tsx","components/flow/routers/result/helpers.ts","components/flow/routers/result/ResultRouterForm.tsx","components/flow/routers/subflow/SubflowRouterForm.tsx","components/flow/routers/subflow/helpers.ts","components/flow/routers/wait/helpers.ts","components/flow/routers/webhook/helpers.ts","components/flow/routers/wait/WaitRouterForm.tsx","components/flow/routers/webhook/header/HeaderElement.tsx","components/flow/routers/webhook/WebhookRouterForm.tsx","components/flow/actions/callclassifier/CallClassifier.tsx","config/index.ts","components/flow/routers/classify/helpers.ts","components/flow/routers/classify/ClassifyRouterForm.tsx","components/flow/routers/scheme/helpers.ts","components/flow/routers/scheme/SchemeRouterForm.tsx","components/flow/routers/ticket/helpers.ts","components/flow/routers/ticket/TicketRouterForm.tsx","components/flow/actions/openticket/OpenTicket.tsx","components/flow/routers/sequence/SequenceForm.tsx","components/flow/routers/sequence/helpers.ts","components/flow/routers/sequence/Sequence.tsx","config/typeConfigs.ts","components/flow/actions/updatecontact/helpers.ts","store/editor.ts","store/thunks.ts","store/helpers.ts","components/canvas/CanvasDraggable.tsx","components/canvas/helpers.ts","components/canvas/Canvas.tsx","components/counter/Counter.tsx","components/titlebar/TitleBar.tsx","components/mountscroll/MountScroll.tsx","components/flow/actions/action/Action.tsx","components/draghelper/DragHelper.tsx","components/flow/exit/helpers.ts","components/Portal.tsx","components/flow/exit/Exit.tsx","components/flow/node/Node.tsx","components/simulator/LogEvent.tsx","components/modal/Modal.tsx","components/nodeeditor/NodeEditor.tsx","components/simulator/helpers.ts","components/simulator/Simulator.tsx","components/simulator/ContextExplorer.tsx","components/sticky/Sticky.tsx","services/Plumber.ts","utils/debug.ts","components/flow/Flow.tsx","components/translator/helpers.ts","components/languageselector/LanguageSelector.tsx","components/poptab/PopTab.tsx","components/revisions/RevisionExplorer.tsx","components/issues/IssuesTab.tsx","store/rootReducer.ts","store/state.ts","store/createStore.ts","components/translator/TranslatorTab.tsx","components/index.tsx","serviceWorker.js","index.js"],"names":["module","exports","DependencyType","FlowIssueType","RouterTypes","WaitTypes","HintTypes","ContactProperties","ValueType","StartFlowArgs","StartFlowExitNames","WebhookExitNames","TransferAirtimeExitNames","SPEC_VERSION","ButtonTypes","LocalizedObject","object","id","name","localizedKeys","localizedObject","localized","iso","language","this","key","value","Object","assign","Array","isArray","length","Localization","translations","uuid","values","keys","forEach","addTranslation","SNAKED_CHARS","GRID_SIZE","parseInt","variables","grid_size","NODE_SPACING","node_spacing","NODE_PADDING","node_padding","snapToGrid","left","top","leftAdjust","topAdjust","Math","max","snapPositionToGrid","position","right","bottom","snakify","toLowerCase","trim","replace","titleCase","str","s","charAt","toUpperCase","substr","hasErrorType","errors","exps","error","exp","match","createClickHandler","onClick","shouldCancelClick","onMouseDown","event","onMouseUp","getLocalization","obj","localization","translate","emphasize","text","className","ellipsize","renderIf","predicate","then","otherwise","isRealValue","undefined","set","val","$set","merge","$merge","unset","$unset","push","arr","$push","splice","$splice","createUUID","generateUUID","range","start","end","from","v","k","hasString","names","find","item","throttle","func","timeout","ready","setTimeout","onNextRender","fn","window","bool","prop","HeaderStyle","Button","props","state","active","bindCallbacks","include","setState","onRef","type","disabled","leftSpacing","topSpacing","iconName","ref","style","marginLeft","marginTop","handleMouseDown","handleMouseUp","styles","btn","paddingRight","React","Constants","Dialog","tabFocus","primaryButton","activeTab","index","foundTab","tabs","tab","hasErrors","console","log","shiftKey","preventDefault","stopPropagation","target","blur","click","focus","document","addEventListener","handleKey","capture","clearTimeout","removeEventListener","rightButtons","buttons","primary","secondary","tertiary","handlePrimaryButton","leftButtons","headerClasses","header","clickable","headerClass","shared","headerIcon","iconed","headerStyle","BARBER","barber","activeClasses","dialog","getButtons","join","map","evt","icon","tab_icon","checked","header_overlay","header_icon","title_container","title","subtitle","noPadding","content","body","children","footer","left_buttons","gutter","right_buttons","Fixy","ele","fixed","scrollY","handleScroll","getBoundingClientRect","AssetType","FlowTypes","ContactStatus","Types","Operators","FeatureFilter","PopTabType","REMOVE_VALUE_ASSET","Remove","DEFAULT_LANGUAGE","Language","initialState","definition","baseLanguage","metadata","dependencies","results","waiting_exit_uuids","parent_refs","issues","contactFields","nodes","assetStore","updateDefinition","UPDATE_DEFINITION","payload","updateNodes","UPDATE_NODES","updateIssues","UPDATE_ISSUES","updateMetadata","UPDATE_METADATA","updateAssets","assets","store","querySelector","setKeyedAssets","items","UPDATE_ASSET_MAP","combineReducers","action","UPDATE_BASE_LANGUAGE","UPDATE_CONTACT_FIELDS","currencies","ARS","Currency","AUD","BIF","BRL","CAD","CDF","CLP","COP","DJF","DOP","DZD","EUR","GBP","GHS","GNF","KES","LBP","LKR","LRD","MWK","MXN","NAD","NPR","NZD","PHP","PKR","RUB","RWF","SDG","SGD","SLL","SOS","SRD","SVC","TND","TRY","TZS","UGX","USD","UYU","UZS","VEF","XCD","YER","ZAR","ZMW","ZWL","HIDDEN","NONE","VOICE","SURVEY","TEXT_TYPES","MESSAGE","ONLINE","axios","defaults","headers","post","responseType","saveRevision","endpoint","csrf","getCookie","patch","release","spec_version","split","Promise","resolve","reject","response","status","data","catch","cookie","idx","indexOf","fetchAsset","getAssets","asset","getAssetPage","url","get","result","resultToAsset","order","next","a","pageUrl","assetPage","concat","idKey","assetType","Flow","label","isMatch","input","shouldExclude","inputLower","includes","createAssetStore","endpoints","channels","getURL","Channel","classifiers","Classifier","languages","flows","fields","Field","globals","Global","groups","Group","revisions","Revision","labels","Label","Result","recipients","Contact","URN","resthooks","Resthook","templates","Template","ticketers","Ticketer","prefetched","validateMedia","ValidateMedia","fetches","storeId","assetListToMap","all","getFunctions","getCompletionSchema","getFlowDetails","revisionToLoad","Error","details","path","endsWith","startsWith","location","protocol","hostname","port","getBaseURL","showHelpArticle","link","open","renderIssues","issueProps","helpArticles","padding","issue","num","node_uuid","action_uuid","margin","display","fontSize","color","marginRight","renderIssue","message","description","MISSING_DEPENDENCY","i18nKey","dependency","INVALID_REGEX","regex","LEGACY_EXTRA","article","issue_help","getActionUUID","nodeSettings","currentType","originalAction","getRecipients","selected","group","contacts","contact","missing","legacy_vars","expression","renderAssetList","reduce","elements","renderAsset","assetBody","node_group","node_label","e","href","editor","rel","node_asset","getAllErrors","entry","validationFailures","getExpressions","filter","getRecipientsByAsset","NAME_PROPERTY","Name","ContactProperty","CHANNEL_PROPERTY","LANGUAGE_PROPERTY","STATUS_PROPERTY","Status","fakePropType","isRequired","ConfigProvider","tembaStore","createElement","completionsEndpoint","config","completion","functionsEndpoint","functions","fieldsEndpoint","globalsEndpoint","appendChild","count","only","childContextTypes","assetService","AddLabelsComp","context","contextTypes","cx","classNames","bind","FormElement","showLabel","helpText","help_text","hideError","getValidationErrors","failure","send_msg_error","sendMsgError","arrow_up","error_list","getName","getHelpText","errorsToDisplay","getErrors","border","invalid","__className","resources","translation","en","es","pt","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","prefix","suffix","TembaSelectStyle","TembaSelect","selectbox","option","nameKey","valueKey","b","getValue","select","createPrefix","createArbitraryOption","options","setOptions","sortFunction","resolved","tags","op","onChange","multi","focused","selectedArray","JSON","stringify","normal","data-testid","onFocus","cacheKey","expressions","hideErrors","placeholder","searchable","clearable","queryParam","sortByName","localeCompare","hasUseableTranslation","template","AssetSelector","lastCreation","defaultOptions","query","additionalOptions","search","matches","searchAssetMap","valueClearable","isLoading","toCreate","arbitrary","handleCreateOption","now","Date","getTime","createAssetFromInput","postNewAsset","onAssetCreated","non_field_errors","fallbackPlaceholder","t","toLocaleLowerCase","handleChanged","nextProps","prevState","existing","isOnlineFlowType","flowType","filterVisibility","filters","visibility","findIndex","ft","excludeTypes","excludeOperators","TypeList","typeConfigs","initialType","handleChangeType","configsToDisplay","type_list","getTypeConfigs","mergeForm","form","toMerge","toRemove","updated","isEntry","hasOwnProperty","existingIdx","mutate","remove","removeKeys","valid","typeConfig","userAddingAction","settings","updateNodeEditorSettings","UPDATE_NODE_EDITOR_SETTINGS","updateUserAddingAction","UPDATE_USER_ADDING_ACTION","UPDATE_TYPE_CONFIG","REGEX_URL","RegExp","fromRegex","inputAsString","test","failures","validate","validators","allFailures","validateFunc","validation","Required","MoreThan","amount","checkName","parseFloat","shouldRequireIf","required","validateIf","HeaderName","headerUtils","MaxOfTenItems","StartIsNonNumeric","ValidURL","Numeric","Alphanumeric","NumOrExp","AddLabelsForm","add_input_labels","formState","handleLabelsChanged","newAction","updateAction","onClose","submitting","updates","handleSave","addAsset","onTypeChange","data-spec","handleCreateAssetFromInput","handleLabelCreated","Count","TextInputStyle","getSchemeObject","scheme","SCHEMES","getSchemeSelectOption","schemeToSelectOption","AddURNComp","schemeObject","schemeName","SelectElement","TextInputElement","initial","currentTarget","charCount","SMS","optional","textarea","counter","wrapper","handleChange","autocomplete","onInput","onBlur","maxLength","session","createTextInput","AddURNForm","add_contact_urn","initializeForm","handlePathChanged","alignItems","scheme_selection","handleSchemeChanged","CallResthookComp","resthook","CallWebhookComp","excludeDynamicGroups","AddGroupsForm","add_contact_groups","name_match","handleGroupsChanged","noOptionsMessage","handleGroupAdded","getContentMarkup","remove_contact_groups","GroupNameMatch","specId","getRemoveAllMarkup","ChangeGroupsComp","getChangeGroupsMarkup","CheckboxElement","checkboxIcon","labelClassName","checkboxClassName","description_solo","LABEL","REMOVE_FROM_ALL","REMOVE_FROM_ALL_DESC","RemoveGroupsForm","removeAll","all_groups","groupValidators","handleUpdate","checkbox","handleRemoveAllUpdate","determineTypeConfig","renderNode","originalNode","node","getTypeConfig","actions","getType","router","hasIssues","translating","KeyLocalizationForm","keyValues","localizations","getObject","localizeableKeys","initializeLocalizedKeyForm","updateLocalizations","base","slice","translate_from","handleKeyUpdate","Pill","substring","pillStyles","pill","large","data-advanced","advanced","UploadButton","filePicker","onUploadChanged","files","FormData","append","handleUploadFile","removeText","handleRemoveUpload","uploadText","TYPE_OPTIONS","MsgLocalizationForm","quickReplies","templateVariables","templating","attachments","audio","send_msg","say_msg","isLocalized","audio_url","quick_replies","attachmentString","splitPoint","attachment","initializeLocalizedForm","handleQuickRepliesUpdate","newQuickReply","newReplies","reply","updatedText","url_attachment","type_choice","small","handleAttachmentRemoved","renderAttachment","emptyOption","renderAttachments","hasLocalizedValue","variable","handleTemplateVariableChanged","audioButton","handleAudioChanged","handleMessageUpdate","MissingComp","PlayAudioComp","PlayAudioForm","play_audio","handleAudioUpdate","MediaPlayer","stroke","radius","radiusNormalized","circumference","PI","durationSeconds","currentSeconds","playing","progress","currentTime","duration","ended","floor","triggered","handleTogglePlay","pause","play","prevProps","strokeDashoffset","player","height","width","handleRef","onTimeUpdate","handleTimeUpdate","src","circles","circle_background","fill","strokeWidth","r","cy","circle_foreground","strokeDasharray","button","PLACEHOLDER","SayMsgComp","recording","SayMsgForm","handleUploadChanged","SendBroadcastComp","to","line","icons","whatsapp","stateToAction","templatingUUID","send_broadcast","hexToRgb","hex","exec","g","Loading","loading","size","units","borderRadius","square","animationDelay","background","SendBroadcastForm","finalState","validAttachment","attachmentError","attachmentValidityCheck","recipientValidate","uploaded","msgTemplate","handleTemplateChanged","is_valid","toString","handleAxios","templateTranslation","variable_count","handleShouldExcludeTemplate","formClearable","template_text","crossIcon","renderTemplateConfig","handleRecipientsChanged","SendEmailComp","subject","tagging","control","borderColor","boxShadow","transition","caretColor","marginBottom","multiValue","maxHeight","minHeight","lineHeight","backgroundColor","TaggingElement","tag","optionsToTags","onCheckValid","tagsToOptions","handleUpdateTags","isMulti","isSearchable","isValidNewOption","handleCheckValid","prompt","formatCreateLabel","createPrompt","Component","EMAIL_PATTERN","SendEmailForm","send_email","addresses","handleSubjectChanged","handleBodyChanged","SendMsgComp","replies","topic","facebook","summary","TOPIC_OPTIONS","all_urns","sendAll","SendMsgForm","quickReplyEntry","stateToForm","upload","remove_upload","renderUpload","handleTopicUpdate","handleSendAllUpdate","hasFeature","HAS_WHATSAPP","class","SetRunResultComp","getSavePlaceholder","getClearPlaceholder","SetRunResultForm","set_run_result","category","snaked","handleNameUpdate","resultFormat","handleValueUpdate","handleCategoryUpdate","StartFlowComp","flow","StartSessionComp","create_contact","contact_query","DefaultExitNames","START_TYPE_ASSETS","START_TYPE_CREATE","START_TYPE_QUERY","START_TYPE_OPTIONS","StartSessionForm","start_session","startType","contactQuery","handleStartTypeChanged","handleContactQueryChanged","handleFlowChanged","TransferAirtimeComp","transfer","amounts","code","require","withEmph","emph","renderSetText","emphasizeName","UpdateContactComp","set_contact_field","field","set_contact_channel","setContactAction","channel","set_contact_language","getLanguageForCode","set_contact_status","set_contact_name","getDraggedFrom","ghostNode","ghost","exitUUIDs","inboundConnections","exitUUID","nodeUUID","ONLINE_PROPERTIES","OFFLINE_PROPERTIES","getContactProperties","WAIT_LABEL","GROUP_LABEL","createRenderNode","exits","uiConfig","ui","hasCases","cases","createCaseProps","categories","getCategories","parse","kase","matchingCategory","category_uuid","isRelativeDate","caseConfig","arguments","categoryName","operatorType","has_date_eq","has_date_gt","has_date_lt","isCategoryMatch","cat","categorizeCases","newCases","originalRouter","previousCategories","newCase","getSwitchRouter","previousCase","previousCategory","previousExit","exit","exit_uuid","switch","getDefaultRoute","defaultCategoryName","defaultCategory","default_category_uuid","defaultExit","getTimeoutRoute","timeoutCategory","timeoutExit","wait","No_Response","resolveRoutes","hasTimeout","resolvedDefaultCategory","Other","All_Responses","createWebhookBasedNode","useCategoryTest","previousRouter","destination_uuid","Success","Failure","has_category","has_only_text","operand","result_name","splitType","split_by_webhook","call_resthook","split_by_resthook","open_ticket","split_by_ticket","transfer_airtime","split_by_airtime","getCategoriesForExit","isGroupSplit","split_by_groups","getResultName","switchRouter","random","call_webhook","uniquifyNode","newNode","removeResultFromStore","resultName","reference","filteredRefs","references","actionUUID","removeResultReference","addResult","addRevision","revision","updateConnection","fromNodeUUID","fromExitUUID","destinationNodeUUID","updatedNodes","fromNode","getNode","exitIdx","getExitIndex","previousDestination","mergeNode","removeNode","spliceInAction","previousNode","otherExit","getDefaultExit","destination","execute_actions","remap","nodeToRemove","detectLoops","updatePosition","snap","adjusted","updateStickyNotePosition","stickyUUID","_ui","stickies","lastPos","updateStickyNote","sticky","CONTACT_STATUS_ACTIVE","ACTIVE","CONTACT_STATUS_BLOCKED","BLOCKED","CONTACT_STATUS_STOPPED","STOPPED","CONTACT_STATUS_ARCHIVED","ARCHIVED","CONTACT_STATUS_OPTIONS","UpdateContactForm","fieldValue","selection","dispatch","getState","flowContext","assetMap","mutators","handlePropertyChange","handleLanguageUpdate","handleChannelUpdate","onUpdated","handleStatusUpdate","handleFieldValueUpdate","value_type","sortFieldsAndProperties","handleFieldAdded","getValueWidget","CurrencyElement","isNaN","Number","currency","amountInput","handleAmountChanged","removeIco","onRemove","form_element","exclude","airtime","handleCurrencyChanged","OptionalTextInput","editing","handleTextChanged","toggle_link","handleEditingChanged","toggleText","optional_text_input","createResultNameInput","ValidationFailures","getOriginalAction","AirtimeRouterForm","nodeToState","updateRouter","stateToNode","handleTransferChanged","handleRemoved","renderAmount","renderAmounts","handleUpdateResultName","intentOperatorList","has_top_intent","verboseName","operands","has_intent","operatorConfigList","has_any_word","has_all_words","has_phrase","has_only_phrase","has_beginning","has_text","has_number","has_number_between","has_number_lt","has_number_lte","has_number_eq","has_number_gte","has_number_gt","has_date","has_time","has_group","has_phone","has_email","has_state","has_district","has_ward","has_error","has_value","has_pattern","has_media","has_location","operatorConfigMap","operatorConfig","getOperatorConfig","pre","validateCase","classifier","exitEdited","exitName","min","argument","district","intentValidators","intents","intent","confidence","categoryNameEdited","getCategoryName","today","inDays","abs","words","firstWord","CaseElement","operators","arg1","arg2","previousProps","filterOperators","getArgumentArray","getCaseProps","handleIntentChanged","handleMinChanged","divider","data-draggable","handleMaxChanged","onMenuOpen","handleIntentMenuOpened","onMenuClose","handleIntentMenuClosed","handleConfidenceChanged","handleStateChanged","handleDistrictChanged","relative_date","handleArgumentChanged","kaseError","dnd_icon","choice","getOperators","handleOperatorChanged","multi_operand","single_operand","renderArguments","categorize_as","handleExitChanged","showInvalid","remove_icon","handleRemoveClicked","DragCursor","SortableItem","SortableElement","row","caseProps","list","handleRemoveCase","handleUpdateCase","CaseList","sortableList","SortableContainer","case_list","currentCases","shouldCancelStart","hasEmptyCase","createEmptyCase","ensureEmptyCase","removeCase","onCasesUpdated","oldIndex","newIndex","arrayMove","case_list_container","scrolling","tabIndex","onSortEnd","handleSortEnd","HTMLElement","dataset","draggable","InputToFocus","DigitsRouterForm","initialCases","wait_for_digits","optionalRouter","msg","hint","digits","wait_for_response","lead_in","handleCasesUpdated","renderEdit","ExpressionRouterForm","split_by_expression","handleOperandUpdated","getRoutableFields","Scheme","FieldRouterForm","split_by_contact_field","operandConfig","field_select","handleFieldChanged","LocalizedType","extractGroups","groupsToCases","GroupsRouterForm","getLocalizedObjects","localizedType","filtered","Case","hasLocalizableCases","original","RouterLocalizationForm","Category","arg","originalCase","orginalArgument","translating_operator_container","translating_operator","translating_from","translating_to","handleUpdateCaseArgument","originalCategory","translating_category","handleUpdateCategoryName","renderCases","renderCategories","menuToCases","menu","previousCases","c","MenuRouterForm","i","wait_for_menu","originalCases","menu_option","digit","handleMenuChanged","renderOption","renderMenu","BUCKET_OPTIONS","getOption","bucketOption","fillOutCategories","buckets","RandomRouterForm","split_by_random","bucketChoice","newExit","bucket_name","handleBucketNameChanged","OPTIONS","bucket_select","handleBucketsChanged","bucket_list","renderBucketNames","TIMEOUT_OPTIONS","DEFAULT_TIMEOUT","TimeoutControl","entries","isChecked","onChanged","timeout_control_container","left_section","getInstructions","handleChecked","drop_down","getSelected","handleTimeoutChanged","ResponseRouterForm","seconds","invalidCase","handleUpdateTimeout","ResthookRouterForm","resthookAsset","handleResthookChanged","FIELD_NUMBER_OPTIONS","DELIMITER_OPTIONS","getDelimiterOption","ResultRouterForm","fieldNumber","delimiter","shouldDelimit","split_by_run_result","split_by_run_result_delimited","handleResultChanged","nodeType","non_delimited","result_select","delimited","field_number","handleFieldNumberChanged","lead_in_sub","result_select_delimited","handleDelimiterChanged","should_delimit","handleShouldDelimitChanged","renderFieldDelimited","renderField","SubflowRouterForm","params","split_by_subflow","enter_flow","setRunResult","hasFieldErrors","startFlowAction","Complete","Expired","setResultAction","info","param","param_name","param_input","handleParamChanged","onFilter","handleFilter","Methods","WaitRouterForm","wait_for_audio","wait_for_image","image","wait_for_location","wait_for_video","video","NAME_PLACEHOLDER","VALUE_PLACEHOLDER","HeaderElement","getHeader","remove_ico","handleRemove","getRemoveIco","header_name","handleChangeName","header_value","handleChangeValue","GET_METHOD","GET","METHOD_OPTIONS","POST","PUT","DELETE","HEAD","PATCH","getDefaultBody","method","isValidJson","o","WebhookRouterForm","sort","ensureEmptyHeader","oldMethod","newMethod","existingContentTypeHeader","lastHeader","removeHeader","needsHeader","handleCreateHeader","headerElements","handleHeaderRemoved","handleHeaderUpdated","body_form","req_body","handleBodyUpdate","handleMethodUpdate","handleUrlUpdate","instructions","example","CallClassifierComp","call_classifier","routes","hiddenCases","route","existingCasePosition","every","existingCase","ensureRoute","routerResultName","actionResultName","split_by_intent","ClassifyRouterForm","showTab","handleClassifierUpdated","getChannelTypeOptions","excludeFromSplit","extractSchemes","schemes","selectOptions","schemesToCases","SchemeRouterForm","split_by_scheme","orginalCases","handleSchemesChanged","TicketRouterForm","ticketer","handleTicketerUpdate","handleSubjectUpdate","handleResultNameUpdate","OpenTicketComp","SequenceForm","delayNode","days","hours","minutes","delay","delayInSeconds","actionToState","wait_for_time","delay_container","Sequence","noOfDays","noOfHours","noOfMinutes","waitForTime","typeConfigList","component","massageForDisplay","aliases","HAS_RESTHOOK","HAS_TICKETER","HAS_AIRTIME","HAS_CLASSIFIER","dedupeTypeConfigs","typeConfigMap","alias","originalType","fieldAction","channelAction","languageAction","statusAction","nameAction","aType","bType","aName","bName","lang","EMPTY_DRAG_STATE","dragStartTime","dragDownPosition","dragActive","dragNodeUUID","dragGroup","dragSelection","completionSchema","types","root","currentRevision","simulating","fetchingFlow","debug","warnings","popped","activity","segments","liveActivity","activityInterval","visible","scrollToNode","scrollToAction","editorState","UPDATE_EDITOR_STATE","markDirty","lastDirtyAttemptTimeout","postingRevision","lastDirtyMillis","lastSuccessfulMillis","NETWORK_ERROR","createSaveMonitor","setInterval","mergeEditorState","modalMessage","saving","createDirty","revisionsEndpoint","quiet","newDefinition","getCurrentDefinition","createFlowIssueMap","updatedAssets","errorMessage","changes","updateEditorState","createNewRevision","loadFlowDefinition","currentTop","guessNodeType","components","getFlowComponents","mergeAssetMaps","renderNodeMap","fetchFlow","forceSave","fetchFlowActivity","triggerActivityUpdate","handleLanguageChange","currentLanguage","isEqual","onUpdateLocalizations","newDef","normalizedTranslations","prev","updateExitDestination","disconnectExit","source","removeAction","actionIdx","getActionIndex","moveActionUp","actionAbove","handleTypeConfigChange","updateTypeConfig","resetNodeEditingState","onUpdateAction","nodeEditor","updateContactFields","onAddToNode","showAdvanced","onRemoveNodes","uuids","updatedDefinition","didNodes","didDef","onUpdateCanvasPositions","positions","updatedNodePosition","updatedStickyPosition","onConnectionDrag","sourceId","resultCount","createEmptyNode","updateSticky","onUpdateRouter","newRouterNode","previousAction","previousPosition","originalResultName","actionToSplice","topNode","bottomNode","topActions","bottomActions","onOpenNodeEditor","actionToTranslate","getLocalizations","updateTranslationFilters","translationFilters","translation_filters","activityTimeout","hasLoopSplit","hasWait","toNodeUUID","toNode","sendMsgAction","nodeMap","includeUI","renderNodes","getOrderedNodes","uiNodes","sorted","diff","suggestedResultNameCount","emptyNode","replyType","replyAction","actionType","pointerMap","groupUUID","groupsToChange","resultAction","pointers","toAdd","previousIssues","issueMap","nodeIssues","activityEndpoint","flowUUID","getActivity","CanvasDraggable","updateDimensions","clientWidth","clientHeight","nativeEvent","which","onDragStop","tagName","onDragStart","pageX","pageY","classes","onTransitionEnd","onAnimated","elementCreator","collides","fudge","getFirstCollision","changed","sortedDraggables","getOrderedDraggables","current","j","other","cascaded","setTop","newTop","Canvas","isScrolling","reflowTimeout","lastX","lastY","justSelected","onDragThrottled","onDragging","onMouseThrottled","handleMouseMove","documentElement","draggables","dragUUID","windowHeight","handleWindowResize","handleKeyDown","onLoaded","updatedPositions","drag","startX","startY","currentX","currentY","drag_selection","mutable","offset","isClickOnCanvas","draggingNew","updateStateWithScroll","clientY","updatePositions","box","collisions","getDraggablesInBox","speed","scrollBy","dimensions","pos","newPosition","markReflow","reflowPositions","newPositions","attempts","collision","cascade","cascadeTop","reflow","onUpdatePositions","doReflow","windowY","otherState","viewportHeight","clearInterval","scrollCanvas","startPosition","xd","yd","lowestNode","delta","addPosition","DRAG_THRESHOLD","getSelectedPositions","onDoubleClick","canvas_container","onMouseMove","handleMouseUpCapture","handleDoubleClick","canvas_background","canvas","newDragElement","handleAnimated","handleUpdateDimensions","handleDragStart","handleDragStop","dragOnAdd","renderSelectionBox","PureComponent","Counter","handleScrollIntoView","keepVisible","scrollTo","behavior","callback","handleMouseEvent","onMouseEnter","onMouseLeave","containerStyle","handleClick","handleMouseEnter","handleMouseLeave","countStyle","TitleBar","confirmationTimeout","confirmingRemoval","handleConfirmRemoval","showMove","up_button","onMoveUp","remove_button","showRemoval","confirmation","remove_confirm","titletext","onRemoval","getConfirmationEl","moveArrow","getMoveArrow","getRemove","titlebar","MountScroll","pulse","handleScrollCompleted","timer","innerHeight","scrollHeight","ActionWrapper","attributes","getAttribute","missingLocalization","notLocalizable","has_router","not_localizable","missing_localization","getClasses","actionToInject","getAction","titleBarClass","actionClass","first","events","handleActionClicked","handleRemoval","handleMoveUp","render","overlay","pulseAfterScroll","ConnectedActionWrapper","connect","bindActionCreators","forwardRef","DragHelper","drag_helper","arrow","tail","head","bold","getExitActivityKey","Portal","el","portalRoot","getElementById","ReactDOM","createPortal","ExitComp","hideDragHelper","pendingMessageFetch","confirmDelete","recentMessages","fetchingRecentMessages","showDragHelper","plumberMakeSource","getSourceId","handleDisconnect","plumberUpdateClass","plumberRemove","plumberConnectExit","recentsEndpoint","cancel","recents","sent","segmentCount","handleShowRecentMessages","handleHideRecentMessages","delim","hasRecents","recentStyles","recent_messages","no_recents","canvasOffset","rect","scrollX","recentMessage","moment","fromNow","nameStyle","connected","dragNodeClasses","confirm","confirm_x","onDisconnect","dragging","exitClasses","unnamed_exit","confirm_delete","getSegmentCount","getRecentMessages","ConnectedExit","EMPTY","NodeComp","firstAction","clicking","handleShouldCancelClick","parentElement","canvasBounds","plumberMakeTarget","ghostListener","getGhostListener","plumberRecalculate","getSelection","createRange","selectNodeContents","removeAllRanges","addRange","execCommand","textContent","Exit","onlyNode","startingNode","showUUIDs","handleUUIDClicked","actionList","firstRef","actionConfig","filterIssuesForAction","ActionComponent","Action","anyAction","enterAnimation","leaveAnimation","easing","addActions","save_result","save_as","add","handleAddToNode","getExits","flow_start","isStartNodeVisible","isSelected","immutable","renderDebug","flow_start_message","activeCount","onActivityClicked","cropped","exit_table","node_container","eleRef","Direction","scrollNode","scrollAction","Modal","customStyles","outline","ariaHideApp","isOpen","show","onAfterOpen","onModalOpen","onRequestClose","shouldCloseOnOverlayClick","contentLabel","NodeEditor","canceled","dragPoint","LocalizationForm","localizationProps","close","Form","formProps","handleAddAsset","mins","getMinutes","minStr","getHours","isMessage","isMT","MAP_THUMB","DrawerType","getStyleForDirection","direction","MO","msg_received","renderError","renderInfo","dangerouslySetInnerHTML","__html","renderMessage","attaches","audio_attachment","media_player","audio_text","alt","cursor","textDecoration","video_attachment","controls","msg_text","LogEvent","detailsVisible","showDetails","parts","groups_added","renderValueList","groups_removed","renderClickable","email","email_details","webhook","webhook_details","request","http_logs","renderHTTPRequest","element","step_uuid","has_detail","event_viewer","classification","extra","toFixed","entities","entity","renderClassification","MT","renderGroupsChanged","renderEmailSent","base_language","service","renderWebhook","renderLabelsAdded","actual_amount","recipient","urn","renderLogEvent","EXCLUDED_PATHS","legacy_extra","ContextExplorer","opened","messageVisible","showEmpty","openState","prevPath","navigator","clipboard","writeText","openPath","shift","closing","newPath","valueType","hasChildren","arrowStyles","arrow_right","has_children","keyStyles","keySummary","handleCopyPath","handlePathClick","key_summary","str_value","renderProperties","renderContextNode","contents","pruneEmpty","messageStyle","context_explorer","panel","empty_toggle","handleToggleHide","IMAGE_A","IMAGE_B","IMAGE_C","VIDEO_A","VIDEO_A_THUMB","Simulator","currentFlow","inputBox","drawerEle","urns","keypadEntry","drawerHeight","time","waitingForHint","drawerOpen","attachmentOptionsVisible","contextExplorerVisible","sprinting","bottomRef","inputBoxRef","activeFlow","lastExit","paths","runs","run","finalStep","step","pathCount","lastKey","flow_uuid","simulatedMessages","messages","messageFound","fromUUID","toUUID","created_on","unshift","newState","update","scrollToBottom","updateEvents","runContext","wasJustActive","toISOString","newlyRecentMessages","newEvents","drawerType","videos","images","hasQuickReplies","updateActivity","handleFocusUpdate","trigger","environment","date_format","time_format","timezone","triggered_on","simulateStart","updateRunContext","resume","resumed_on","simulateResume","startFlow","scrollIntoView","newVisible","onToggled","SIMULATOR","drawer_items","drawer_item","sendAttachment","map_thumb","audio_picker","audio_icon","audio_message","quick_reply","multiple","handleKeyPress","keypad","keypad_entry","getKeyRow","getLocationDrawer","getAudioDrawer","getImageDrawer","getVideoDrawer","getQuickRepliesDrawer","getKeypadDrawer","zIndex","paddingBottom","handleDrawerRef","drawer","drawer_visible","forced","getDrawerContents","showAttachmentDrawer","attachment_buttons","handleHideAttachments","getAttachmentButton","handleContextExplorerClose","handleHideAttachmentDrawer","String","hidden","simHidden","sim_hidden","tabHidden","tab_hidden","messagesStyle","sim_container","simulator","getContextExplorer","screen","onToggle","float","clear","onKeyUp","show_attachments_button","getAttachmentOptions","getDrawer","show_context_button","reset","inactive","onReset","simulator_tab","simulator_tab_icon","simulator_tab_text","STICKY_TITLE","STICKY_BODY","COLOR_OPTIONS","yellow","blue","green","purple","gray","Sticky","debounceTextChanges","showConfirmation","DEFUALT_TITLE","DEFUALT_BODY","finalPos","onUpdateText","handleSelectForValue","color_chooser_container","color_chooser","handleChangeColor","color_option","titleClasses","title_wrapper","removal","containerClasses","sticky_container","stickyClasses","colorChooser","getColorChooser","handleClickRemove","handleChangeTitle","onFocusCapture","handleTitleFocused","body_wrapper","handleChangeBody","handleBodyFocused","importDefaults","jsPlumb","TARGET_DEFAULTS","anchor","shape","faces","cssClass","hoverClass","dropOptions","tolerance","isTarget","dragAllowedWhenFull","deleteEndpointsOnEmpty","SOURCE_DEFAULTS","maxConnections","isSource","getAnchor","sourceEle","targetEle","defaultConnector","stub","midpoint","alwaysRespectStubs","gap","cornerRadius","Plumber","pendingConnections","pendingConnectionTimeout","animateInterval","onLoadFunction","DragOptions","DropOptions","Endpoint","EndpointStyle","strokeStyle","PaintStyle","ConnectionsDetachable","Connector","ConnectionOverlays","setSourceEnabled","makeSource","makeTarget","connectExit","setDragSelection","clearDragSelection","removeFromDragSelection","cancelDurationRepaint","handlePendingConnections","checkForPendingConnections","repaint","recalculate","updateClass","rerouteAnchors","containerId","setContainer","enabled","connection","addClass","removeClass","addToDragSelection","targets","batch","slot","totalSlots","anchors","delete","fireEvent","connector","detachable","onLoad","onEvent","recalculateOffsets","repaintEverything","unmakeSource","deleteConnectionsForElement","connections","getConnections","setAnchor","revalidate","closure","debounce","Debug","isDraggingBack","suspendedElementId","targetId","nodeContainerUUID","fe","beforeConnectionDrag","onConnectorDrop","onBeforeConnectorDrop","triggerLoaded","offsetLeft","offsetTop","dispatchEvent","Event","stickyMap","Node","handleNodeCreation","handleStickyCreation","ghostRef","nodeEditorSettings","help","empty_flow","querySelectorAll","getNodes","getStickies","getEmptyFlow","getSimulator","getNodeEditor","getDragNode","handleDragging","handleCanvasLoaded","TranslationState","LanguageSelector","handleLanguageSort","separator","language_link","handleLanguageChanged","PopTab","poppedEle","offsetWidth","onShow","onHide","pop_wrapper","tab_wrapper","handleTabClick","handlePoppedRef","handleClose","header_label","RevisionExplorer","onRevisionClicked","onRevertClicked","remoteAssets","REVISION_HISTORY","handleUpdateRevisions","mask","handleTabClicked","explorer_wrapper","explorer","selectedClass","publish","dateFormat","utc","user","getIssueKey","getRenderObjects","renderAction","IssuesTab","selectedIssue","issueDetails","buildIssueDetails","issueDetail","renderObjects","nodeDifference","ISSUES_TAB","onIssueClicked","onIssueOpened","issueCount","lastLanguage","languageHeader","handleIssueClicked","issues_code","issues_wrapper","middlewares","thunk","TranslationType","getMergedByType","bundle","COMPLETE","MISSING","findTranslations","localizable","attribute","getFriendlyAttribute","i18next","getBundleKey","TranslatorTab","selectedTranslation","translationBundles","optionsVisible","pctComplete","rules","handleUpdateTranslations","CATEGORY","CASE","translated","PROPERTY","counts","total","complete","round","bundles","TRANSLATOR_TAB","onTranslationFilterChanged","from_text","onTranslationClicked","onTranslationOpened","onChangeLanguage","showChangeButton","optionsClasses","options_visible","change_visible","filledClasses","filled","hundredpct","wrapperClasses","translations_wrapper","translate_block","handleTranslationClicked","needs_translation","type_name","renderMissing","toggleOptions","progress_bar","toggle","checkboxes","toggleCategories","toggleRules","pct_complete","changeLanguage","handleChangeLanguageClick","PageVisibility","default","hotStore","createStore","rootReducer","composeWithDevTools","applyMiddleware","FlowEditor","forceSaveOnLoad","dataStr","encodeURIComponent","downloadAnchorNode","setAttribute","downloadJSON","alert_modal","alert_body","showDownload","download_button","handleDownloadClicked","handleLanguageSetting","handleScrollToNode","handleVisibilityChanged","getFooter","getAlertModal","getSavingIndicator","handleScrollToTranslation","handleOpenTranslation","handleTabPopped","handleScrollToIssue","handleOpenIssue","ConnectedFlowEditor","FlowEditorContainer","Boolean","customElements","showFlowEditor","millis","httpTimeout","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.d0cfa04f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"sim_container\":\"Simulator_sim_container__H7rj0\",\"simulator\":\"Simulator_simulator__2tU1d\",\"sim_hidden\":\"Simulator_sim_hidden__1ggwF\",\"screen\":\"Simulator_screen__2Qp5p\",\"header\":\"Simulator_header__2r6Gy\",\"close\":\"Simulator_close__1RMuB\",\"time\":\"Simulator_time__3FKl6\",\"battery\":\"Simulator_battery__3Wa1Y\",\"wifi\":\"Simulator_wifi__2E-6D\",\"footer\":\"Simulator_footer__1_obl\",\"show_context_button\":\"Simulator_show_context_button__20XVs\",\"reset\":\"Simulator_reset__1A78l\",\"inactive\":\"Simulator_inactive__3bLl7\",\"active\":\"Simulator_active__1MwaM\",\"messages\":\"Simulator_messages__3Oalm\",\"controls\":\"Simulator_controls__1TlMu\",\"show_attachments_button\":\"Simulator_show_attachments_button__3LFcV\",\"attachment_buttons\":\"Simulator_attachment_buttons__hDIT5\",\"visible\":\"Simulator_visible__3BBvQ\",\"drawer\":\"Simulator_drawer__340zx\",\"drawer_visible\":\"Simulator_drawer_visible__1jBzI\",\"forced\":\"Simulator_forced__19aUl\",\"drawer_header\":\"Simulator_drawer_header__nlorO\",\"map_thumb\":\"Simulator_map_thumb__1zB9o\",\"audio_picker\":\"Simulator_audio_picker__V2K8X\",\"audio_icon\":\"Simulator_audio_icon__Ve23Y\",\"audio_message\":\"Simulator_audio_message___4Yvw\",\"keypad\":\"Simulator_keypad__29cCi\",\"keypad_entry\":\"Simulator_keypad_entry__2S4e_\",\"keys\":\"Simulator_keys__W8GcS\",\"row\":\"Simulator_row__mtRhr\",\"key\":\"Simulator_key__Wv2KS\",\"drawer_items\":\"Simulator_drawer_items__PYHpL\",\"drawer_item\":\"Simulator_drawer_item__yZRIg\",\"simulator_tab\":\"Simulator_simulator_tab__uRMHB\",\"tab_hidden\":\"Simulator_tab_hidden__1BDkU\",\"simulator_tab_icon\":\"Simulator_simulator_tab_icon__3cmxe\",\"simulator_tab_text\":\"Simulator_simulator_tab_text__1aI0Q\",\"detail_webhook_called\":\"Simulator_detail_webhook_called__1A8Iu\",\"quick_replies\":\"Simulator_quick_replies__3wan9\",\"quick_reply\":\"Simulator_quick_reply__sSRfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"hidden\":\"TranslatorTab_hidden__n6TH8\",\"message\":\"TranslatorTab_message__94Qv_\",\"header\":\"TranslatorTab_header__D3V8v\",\"translations_wrapper\":\"TranslatorTab_translations_wrapper__3D6T-\",\"complete\":\"TranslatorTab_complete__30vNJ\",\"language\":\"TranslatorTab_language__2b3mU\",\"options\":\"TranslatorTab_options__hKEsd\",\"options_visible\":\"TranslatorTab_options_visible__1Iv7O\",\"filters\":\"TranslatorTab_filters__3qwqM\",\"pct_complete\":\"TranslatorTab_pct_complete__3sHbg\",\"toggle\":\"TranslatorTab_toggle__35-qI\",\"change_visible\":\"TranslatorTab_change_visible__1P3qg\",\"changeLanguage\":\"TranslatorTab_changeLanguage__RxYLJ\",\"progress_bar\":\"TranslatorTab_progress_bar__cWMo0\",\"filled\":\"TranslatorTab_filled__OKNl9\",\"hundredpct\":\"TranslatorTab_hundredpct__2ltPG\",\"checkboxes\":\"TranslatorTab_checkboxes__3MIKA\",\"translate_block\":\"TranslatorTab_translate_block__1htQy\",\"item\":\"TranslatorTab_item__3Q3JG\",\"text\":\"TranslatorTab_text__2HqtQ\",\"from_text\":\"TranslatorTab_from_text__3_B24\",\"to_text\":\"TranslatorTab_to_text__z4k-b\",\"needs_translation\":\"TranslatorTab_needs_translation__1FKjj\",\"type_name\":\"TranslatorTab_type_name__OdM8M\",\"attribute\":\"TranslatorTab_attribute__bQi14\",\"translated\":\"TranslatorTab_translated__K2ZMS\",\"check\":\"TranslatorTab_check__1ymTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"evt\":\"LogEvent_evt__1J8Uq\",\"fadein\":\"LogEvent_fadein__kgfF4\",\"msg_text\":\"LogEvent_msg_text__1HqoJ\",\"ivr_msg\":\"LogEvent_ivr_msg__2pGYZ\",\"send_msg\":\"LogEvent_send_msg__195Tn\",\"msg_received\":\"LogEvent_msg_received__gf2kP\",\"image_attachment\":\"LogEvent_image_attachment__2Ku4T\",\"error\":\"LogEvent_error__2oBQ9\",\"info\":\"LogEvent_info__12nsu\",\"email\":\"LogEvent_email__1XyUb\",\"webhook\":\"LogEvent_webhook__3jEK2\",\"video_attachment\":\"LogEvent_video_attachment__2xn3C\",\"audio_attachment\":\"LogEvent_audio_attachment__2iBWG\",\"media_player\":\"LogEvent_media_player__22CtH\",\"audio_text\":\"LogEvent_audio_text__3j-uW\",\"email_details\":\"LogEvent_email_details__1f2TW\",\"to\":\"LogEvent_to__H-JTa\",\"subject\":\"LogEvent_subject__mN7Lz\",\"body\":\"LogEvent_body__2hSdi\",\"webhook_details\":\"LogEvent_webhook_details__3mtJW\",\"response\":\"LogEvent_response__2oEy0\",\"event_viewer\":\"LogEvent_event_viewer__2D4uw\",\"has_detail\":\"LogEvent_has_detail__ZRVpP\",\"classification\":\"LogEvent_classification__2arCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"clickable\":\"Dialog_clickable__1gSoh\",\"dialog\":\"Dialog_dialog__16A3R\",\"header\":\"Dialog_header__YD-Nm\",\"header_overlay\":\"Dialog_header_overlay__1Of6F\",\"header_icon\":\"Dialog_header_icon__2z4U8\",\"title\":\"Dialog_title__1IRe1\",\"barber\":\"Dialog_barber__3x6cp\",\"iconed\":\"Dialog_iconed__2eQKD\",\"title_container\":\"Dialog_title_container__2HiUa\",\"content\":\"Dialog_content__1YGhY\",\"footer\":\"Dialog_footer__3UylY\",\"gutter\":\"Dialog_gutter__1Xxy-\",\"buttons\":\"Dialog_buttons__1T0cB\",\"left_buttons\":\"Dialog_left_buttons__31hp_\",\"right_buttons\":\"Dialog_right_buttons__3NHBO\",\"tabs\":\"Dialog_tabs__2gLgU\",\"tab\":\"Dialog_tab__1x47g\",\"tab_icon\":\"Dialog_tab_icon__28etF\",\"active\":\"Dialog_active__3yOgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"action\":\"Action_action__NVQRK\",\"has_router\":\"Action_has_router__1Ad-S\",\"body\":\"Action_body__RtQCZ\",\"add_contact_urn\":\"Action_add_contact_urn__3Z706\",\"add_input_labels\":\"Action_add_input_labels__3IeO3\",\"send_msg\":\"Action_send_msg__1QYPk\",\"set_contact_field\":\"Action_set_contact_field__1HDvu\",\"set_contact_name\":\"Action_set_contact_name__1woBb\",\"call_webhook\":\"Action_call_webhook__2kR_s\",\"call_resthook\":\"Action_call_resthook__2zGlX\",\"set_contact_language\":\"Action_set_contact_language__G9Ko5\",\"set_contact_status\":\"Action_set_contact_status__2inqU\",\"set_contact_channel\":\"Action_set_contact_channel__1YEwX\",\"add_contact_groups\":\"Action_add_contact_groups__3H0fU\",\"remove_contact_groups\":\"Action_remove_contact_groups__3h7vs\",\"play_audio\":\"Action_play_audio__ShGHx\",\"say_msg\":\"Action_say_msg__3CqFc\",\"set_run_result\":\"Action_set_run_result__1CLz_\",\"send_email\":\"Action_send_email__2MDnO\",\"send_broadcast\":\"Action_send_broadcast__1SCyf\",\"transfer_airtime\":\"Action_transfer_airtime__2LvoA\",\"open_ticket\":\"Action_open_ticket__3afC2\",\"missing\":\"Action_missing__1Ghl9\",\"wait_for_time\":\"Action_wait_for_time__1PGd4\",\"enter_flow\":\"Action_enter_flow__2ogxI\",\"call_classifier\":\"Action_call_classifier__tKBlJ\",\"start_session\":\"Action_start_session__1yM-7\",\"not_localizable\":\"Action_not_localizable__2rKMk\",\"overlay\":\"Action_overlay__ZEDK0\",\"immutable\":\"Action_immutable__qAZdN\",\"translate_from\":\"Action_translate_from__3BID_\",\"translate_to\":\"Action_translate_to__TPeJw\",\"translating\":\"Action_translating__2n0n7\",\"missing_localization\":\"Action_missing_localization__1zslf\",\"localized\":\"Action_localized__3Mwip\",\"url_attachment\":\"Action_url_attachment__5X1Iv\",\"remove_upload\":\"Action_remove_upload__7muTz\",\"url\":\"Action_url__2NeuQ\",\"remove\":\"Action_remove__13eCi\",\"type_choice\":\"Action_type_choice__3N8iO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"exit\":\"Exit_exit__36tB1\",\"translating\":\"Exit_translating__mA2Hf\",\"unnamed_exit\":\"Exit_unnamed_exit__1H6-H\",\"endpoint\":\"Exit_endpoint__1D08c\",\"missing_localization\":\"Exit_missing_localization__h2WGJ\",\"name\":\"Exit_name__22WdX\",\"confirm_delete\":\"Exit_confirm_delete__26Wo-\",\"activity\":\"Exit_activity__11sTW\",\"count\":\"Exit_count__1tNM8\",\"confirm_x\":\"Exit_confirm_x__1AODA\",\"recent_messages\":\"Exit_recent_messages__1wUzf\",\"no_recents\":\"Exit_no_recents__R97kK\",\"title\":\"Exit_title__3Ugsu\",\"loading\":\"Exit_loading__37ssZ\",\"message\":\"Exit_message__Q_zU9\",\"text\":\"Exit_text__1-x4W\",\"sent\":\"Exit_sent__1DkCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"context_explorer\":\"ContextExplorer_context_explorer__wmqkX\",\"visible\":\"ContextExplorer_visible__2gRjv\",\"panel\":\"ContextExplorer_panel__gz824\",\"close_button\":\"ContextExplorer_close_button__26zA3\",\"row\":\"ContextExplorer_row__2rF84\",\"arrow_right\":\"ContextExplorer_arrow_right__22xI1\",\"has_children\":\"ContextExplorer_has_children__2eFg-\",\"open\":\"ContextExplorer_open__2duis\",\"key\":\"ContextExplorer_key__AE_c_\",\"clipboard\":\"ContextExplorer_clipboard__ZgQfN\",\"key_summary\":\"ContextExplorer_key_summary__2xvsu\",\"colon\":\"ContextExplorer_colon__3TZUN\",\"str_value\":\"ContextExplorer_str_value__2W3Fs\",\"footer\":\"ContextExplorer_footer__xM3R1\",\"hide_checkbox\":\"ContextExplorer_hide_checkbox__w80HV\",\"help\":\"ContextExplorer_help__23pVD\",\"empty_toggle\":\"ContextExplorer_empty_toggle__29mpj\",\"message\":\"ContextExplorer_message__2x4s4\",\"expression\":\"ContextExplorer_expression__3MKM4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"yellow\":\"Sticky_yellow__39XW4\",\"color_option\":\"Sticky_color_option__32vU5\",\"sticky\":\"Sticky_sticky__3QUKK\",\"blue\":\"Sticky_blue__3s2JL\",\"purple\":\"Sticky_purple__278EO\",\"gray\":\"Sticky_gray__39re9\",\"green\":\"Sticky_green__3BQ0M\",\"color_chooser_container\":\"Sticky_color_chooser_container__2lT4F\",\"color_chooser\":\"Sticky_color_chooser__3Jbqj\",\"sticky_container\":\"Sticky_sticky_container__CAgg9\",\"selected\":\"Sticky_selected__1Ra33\",\"removal\":\"Sticky_removal__2Ktvw\",\"title_wrapper\":\"Sticky_title_wrapper__2QWs9\",\"remove_button\":\"Sticky_remove_button__2jDO8\",\"title\":\"Sticky_title__1kkPN\",\"confirmation\":\"Sticky_confirmation__wEJ6P\",\"body_wrapper\":\"Sticky_body_wrapper__3vHL0\",\"body\":\"Sticky_body__18mNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"node_container\":\"Node_node_container__2eaRs\",\"uuid\":\"Node_uuid__1gU_w\",\"ghost\":\"Node_ghost__1rJWj\",\"nondragged\":\"Node_nondragged__3odZa\",\"selected\":\"Node_selected__1ck3F\",\"node\":\"Node_node__2ympr\",\"immutable\":\"Node_immutable__2NDYM\",\"save_as\":\"Node_save_as__27Fv-\",\"save_result\":\"Node_save_result__cnC6y\",\"result_name\":\"Node_result_name__1F10Q\",\"cropped\":\"Node_cropped__3mV37\",\"exit_table\":\"Node_exit_table__3NybR\",\"exits\":\"Node_exits__3zABv\",\"add\":\"Node_add__3PamH\",\"drag_group\":\"Node_drag_group__1h4JV\",\"flow_start\":\"Node_flow_start__2ZLmX\",\"flow_start_message\":\"Node_flow_start_message__21Gdu\",\"active\":\"Node_active__31xXM\",\"pulse\":\"Node_pulse__14AYP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"random\":\"shared_random__URuHQ\",\"issues\":\"shared_issues__2JPEb\",\"header\":\"shared_header__whMnp\",\"icon\":\"shared_icon__1igRB\",\"title\":\"shared_title__1WSZR\",\"summary\":\"shared_summary__1XTGq\",\"issue_help\":\"shared_issue_help__1XuTL\",\"wait_for_audio\":\"shared_wait_for_audio__1LjH-\",\"wait_for_image\":\"shared_wait_for_image__3VU9W\",\"wait_for_video\":\"shared_wait_for_video__1nv-a\",\"wait_for_location\":\"shared_wait_for_location__2al5E\",\"wait_for_menu\":\"shared_wait_for_menu__hot7M\",\"wait_for_digits\":\"shared_wait_for_digits__35WPZ\",\"wait_for_response\":\"shared_wait_for_response__ZKUbx\",\"wait_for_time\":\"shared_wait_for_time__1_P0u\",\"add_contact_groups\":\"shared_add_contact_groups__2dqfS\",\"remove_contact_groups\":\"shared_remove_contact_groups__1dJrQ\",\"send_email\":\"shared_send_email__dY51y\",\"send_broadcast\":\"shared_send_broadcast__3LXs5\",\"msg\":\"shared_msg__28OwU\",\"say_msg\":\"shared_say_msg__2U3R0\",\"send_msg\":\"shared_send_msg__2tEfv\",\"open_ticket\":\"shared_open_ticket__2NPzK\",\"transfer_airtime\":\"shared_transfer_airtime__1H5tV\",\"enter_flow\":\"shared_enter_flow__XHnXb\",\"start_session\":\"shared_start_session__1f3aq\",\"set_run_result\":\"shared_set_run_result__1QltP\",\"add_input_labels\":\"shared_add_input_labels__2pTX0\",\"add_contact_urn\":\"shared_add_contact_urn__3nXG-\",\"set_contact_name\":\"shared_set_contact_name__KV1Re\",\"set_contact_field\":\"shared_set_contact_field__3VSZH\",\"set_contact_language\":\"shared_set_contact_language__4ZBkW\",\"set_contact_status\":\"shared_set_contact_status__2iexL\",\"set_contact_channel\":\"shared_set_contact_channel__3NhjI\",\"play_audio\":\"shared_play_audio__2OF7K\",\"missing\":\"shared_missing__2oICX\",\"missing_asset\":\"shared_missing_asset__b9Nts\",\"call_classifier\":\"shared_call_classifier__3zcuw\",\"split_by_random\":\"shared_split_by_random__Zh1SY\",\"split_by_expression\":\"shared_split_by_expression__3k23C\",\"split_by_groups\":\"shared_split_by_groups__5EnH4\",\"split_by_contact_field\":\"shared_split_by_contact_field__1XjX5\",\"split_by_intent\":\"shared_split_by_intent__1H9sN\",\"split_by_run_result\":\"shared_split_by_run_result__X4-Wp\",\"split_by_scheme\":\"shared_split_by_scheme__3L9lW\",\"call_resthook\":\"shared_call_resthook__16wqp\",\"call_webhook\":\"shared_call_webhook__1h1Cb\",\"breaks\":\"shared_breaks__2F4AL\",\"url\":\"shared_url__1vtQK\",\"node_asset\":\"shared_node_asset__2MOdQ\",\"node_group\":\"shared_node_group__ju7iK\",\"node_label\":\"shared_node_label__1lQNA\",\"advanced_title\":\"shared_advanced_title__2auaT\",\"alert\":\"shared_alert__1JnkA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"group\":\"CaseElement_group__1fyWB\",\"divider\":\"CaseElement_divider__mkeU9\",\"kase\":\"CaseElement_kase__2vP_O\",\"has_intent\":\"CaseElement_has_intent__z8znp\",\"choice\":\"CaseElement_choice__2RZct\",\"has_top_intent\":\"CaseElement_has_top_intent__3fsYv\",\"multi_operand\":\"CaseElement_multi_operand__eTLuc\",\"form_group\":\"CaseElement_form_group__1PJTx\",\"single_operand\":\"CaseElement_single_operand__o0kaN\",\"categorize_as\":\"CaseElement_categorize_as__XFySp\",\"category\":\"CaseElement_category__2yfW1\",\"remove_icon\":\"CaseElement_remove_icon__1PFzv\",\"dnd_icon\":\"CaseElement_dnd_icon__wjvHF\",\"relative_date\":\"CaseElement_relative_date__DGZXt\",\"empty\":\"CaseElement_empty__35kBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"hidden\":\"RevisionExplorer_hidden__N5tXK\",\"mask\":\"RevisionExplorer_mask__14GgE\",\"visible\":\"RevisionExplorer_visible__365U6\",\"explorer_wrapper\":\"RevisionExplorer_explorer_wrapper__3FIUU\",\"explorer\":\"RevisionExplorer_explorer__1yYSY\",\"revisions\":\"RevisionExplorer_revisions__1nYCu\",\"revision\":\"RevisionExplorer_revision__3f_kl\",\"selected\":\"RevisionExplorer_selected__2zSg4\",\"button\":\"RevisionExplorer_button__2srjQ\",\"current\":\"RevisionExplorer_current__Zlqcr\",\"publish\":\"RevisionExplorer_publish__O5LsS\",\"created_on\":\"RevisionExplorer_created_on__qKoNX\",\"email\":\"RevisionExplorer_email__Z9xlH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"checkbox\":\"SendMsgForm_checkbox__-JOyy\",\"quick_reply_summary\":\"SendMsgForm_quick_reply_summary__DkA4i\",\"type_choice\":\"SendMsgForm_type_choice__1dciq\",\"loading\":\"SendMsgForm_loading__HX7Aw\",\"crossIcon\":\"SendMsgForm_crossIcon__1KGsY\",\"error\":\"SendMsgForm_error__H15SX\",\"url_attachment\":\"SendMsgForm_url_attachment__1Su5F\",\"remove_upload\":\"SendMsgForm_remove_upload__2qqap\",\"url\":\"SendMsgForm_url__2eR-o\",\"remove\":\"SendMsgForm_remove__20sFL\",\"existing_quick_replies\":\"SendMsgForm_existing_quick_replies__W866I\",\"existing_quick_reply\":\"SendMsgForm_existing_quick_reply__2C65m\",\"add_quick_replies\":\"SendMsgForm_add_quick_replies__3vLIC\",\"template_text\":\"SendMsgForm_template_text__1zkKJ\",\"variable\":\"SendMsgForm_variable__3mVDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"link\":\"WebhookRouterForm_link__1jXIk\",\"info\":\"WebhookRouterForm_info__qgGFO\",\"method\":\"WebhookRouterForm_method__1IR0U\",\"url\":\"WebhookRouterForm_url__T29iJ\",\"code\":\"WebhookRouterForm_code__3x1A-\",\"instructions\":\"WebhookRouterForm_instructions__3LG_X\",\"headers_title\":\"WebhookRouterForm_headers_title__1GMIG\",\"remove_ico\":\"WebhookRouterForm_remove_ico__l-jUh\",\"example\":\"WebhookRouterForm_example__1ev4D\",\"header\":\"WebhookRouterForm_header__2waYT\",\"header_name\":\"WebhookRouterForm_header_name__3eQVG\",\"header_value\":\"WebhookRouterForm_header_value__1Fxrk\",\"body_form\":\"WebhookRouterForm_body_form__3BHas\",\"req_body\":\"WebhookRouterForm_req_body__1rKz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"delimited\":\"ResultRouterForm_delimited__D-_e5\",\"non_delimited\":\"ResultRouterForm_non_delimited__yDNVq\",\"lead_in_sub\":\"ResultRouterForm_lead_in_sub__3oqJC\",\"result_select\":\"ResultRouterForm_result_select__1cu2c\",\"result_select_delimited\":\"ResultRouterForm_result_select_delimited__f-y6Z\",\"should_delimit\":\"ResultRouterForm_should_delimit__1Z8-4\",\"field_number\":\"ResultRouterForm_field_number__2WFxV\",\"delimiter\":\"ResultRouterForm_delimiter__2i5Hr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"titlebar\":\"TitleBar_titlebar__1_zDw\",\"titletext\":\"TitleBar_titletext__3s2we\",\"normal\":\"TitleBar_normal__z0QaD\",\"remove_confirm\":\"TitleBar_remove_confirm__3ywj-\",\"remove_button\":\"TitleBar_remove_button__2lO9D\",\"up_button\":\"TitleBar_up_button__2Imiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"pop_wrapper\":\"PopTab_pop_wrapper__2kOzQ\",\"visible\":\"PopTab_visible__2udNm\",\"popped\":\"PopTab_popped__2Imlz\",\"tab_wrapper\":\"PopTab_tab_wrapper__3n1QM\",\"tab\":\"PopTab_tab__2Rm5M\",\"label\":\"PopTab_label__nf1JX\",\"icon\":\"PopTab_icon__irClb\",\"header\":\"PopTab_header__1NqmE\",\"header_label\":\"PopTab_header_label__2YD7z\",\"close\":\"PopTab_close__3O5BS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"ele\":\"FormElement_ele__1FpYO\",\"border\":\"FormElement_border__3bx0s\",\"error_list\":\"FormElement_error_list__1SrT3\",\"error\":\"FormElement_error__1Peb9\",\"arrow_up\":\"FormElement_arrow_up__2HvAv\",\"send_msg_error\":\"FormElement_send_msg_error__3LIUw\",\"label\":\"FormElement_label__2dN0p\",\"invalid\":\"FormElement_invalid__1fOa-\",\"help_text\":\"FormElement_help_text__a6EcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"hidden\":\"IssuesTab_hidden__1l3_C\",\"message\":\"IssuesTab_message__AofWc\",\"header\":\"IssuesTab_header__273ne\",\"issues_wrapper\":\"IssuesTab_issues_wrapper__3mP8X\",\"language\":\"IssuesTab_language__3MoIp\",\"mask\":\"IssuesTab_mask__1b_sl\",\"visible\":\"IssuesTab_visible__2FRUR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"recipients\":\"SendBroadcast_recipients__1ZSQV\",\"attachment\":\"SendBroadcast_attachment__2pm0s\",\"whatsapp\":\"SendBroadcast_whatsapp__8p4Pd\",\"node\":\"SendBroadcast_node__26RLX\",\"to\":\"SendBroadcast_to__25_7K\",\"name\":\"SendBroadcast_name__RNJWu\",\"icon\":\"SendBroadcast_icon__2YfpF\",\"more\":\"SendBroadcast_more__11MJm\",\"message\":\"SendBroadcast_message__6ZIco\",\"icons\":\"SendBroadcast_icons__19jbq\",\"line\":\"SendBroadcast_line__3Dm3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"template_text\":\"SendBroadcastForm_template_text__16ol9\",\"variable\":\"SendBroadcastForm_variable__1nw9U\",\"crossIcon\":\"SendBroadcastForm_crossIcon__aTZFs\",\"error\":\"SendBroadcastForm_error__rKmrs\",\"url_attachment\":\"SendBroadcastForm_url_attachment__2Qk5r\",\"remove_upload\":\"SendBroadcastForm_remove_upload__Xke5j\",\"url\":\"SendBroadcastForm_url__-uV5Y\",\"remove\":\"SendBroadcastForm_remove__1QkNj\",\"type_choice\":\"SendBroadcastForm_type_choice__2fxfE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"quick_replies\":\"SendMsg_quick_replies__2bre8\",\"attachment\":\"SendMsg_attachment__1JoQl\",\"summary\":\"SendMsg_summary__2c05X\",\"whatsapp\":\"SendMsg_whatsapp__2O95I\",\"facebook\":\"SendMsg_facebook__30JZ8\",\"line\":\"SendMsg_line__LMI4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"SequenceForm_title__3dDd1\",\"delay_container\":\"SequenceForm_delay_container__2oN3-\",\"input\":\"SequenceForm_input__3biT1\",\"error\":\"SequenceForm_error__Rj6o2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"MediaPlayer_player__gYGWS\",\"playing\":\"MediaPlayer_playing__2Jrw_\",\"button\":\"MediaPlayer_button__rRXz1\",\"circles\":\"MediaPlayer_circles__1pr_0\",\"circle_background\":\"MediaPlayer_circle_background__OMPcS\",\"circle_foreground\":\"MediaPlayer_circle_foreground__1L6K9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"translating_categories\":\"RouterLocalizationForm_translating_categories__34-3g\",\"translating_category\":\"RouterLocalizationForm_translating_category__1GtBO\",\"translating_from\":\"RouterLocalizationForm_translating_from__1jvjb\",\"translating_to\":\"RouterLocalizationForm_translating_to__1m7uk\",\"translating_operator_title\":\"RouterLocalizationForm_translating_operator_title__3vA3V\",\"translating_operator_instructions\":\"RouterLocalizationForm_translating_operator_instructions___Yv3N\",\"translating_operator_container\":\"RouterLocalizationForm_translating_operator_container__39jsM\",\"translating_operator\":\"RouterLocalizationForm_translating_operator__AgpTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"drag_helper\":\"DragHelper_drag_helper__a_fFa\",\"visible\":\"DragHelper_visible__1Z4lg\",\"arrow\":\"DragHelper_arrow__YH1ED\",\"tail\":\"DragHelper_tail__12x7O\",\"help_text\":\"DragHelper_help_text__2luNE\",\"head\":\"DragHelper_head__3ViUG\",\"bold\":\"DragHelper_bold__2v--u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"editor\":\"components_editor__36a9s\",\"translating\":\"components_translating__1uBgy\",\"footer\":\"components_footer__1OFgP\",\"download_button\":\"components_download_button__392jz\",\"alert_body\":\"components_alert_body__2Bxt0\",\"alert_modal\":\"components_alert_modal__3xFu-\",\"saving\":\"components_saving__1mebj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"CheckboxElement_label__3vFGD\",\"title\":\"CheckboxElement_title__3QShp\",\"description\":\"CheckboxElement_description__3BguK\",\"description_solo\":\"CheckboxElement_description_solo__2o0rh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_element\":\"CurrencyElement_form_element__F0wio\",\"transfer\":\"CurrencyElement_transfer__1IAVm\",\"currency\":\"CurrencyElement_currency__278L2\",\"amount\":\"CurrencyElement_amount__fJKsJ\",\"remove\":\"CurrencyElement_remove__3D5_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"options\":\"RandomRouterForm_options__1AgXA\",\"bucket_select\":\"RandomRouterForm_bucket_select__5jt8Q\",\"bucket_list\":\"RandomRouterForm_bucket_list__14I85\",\"bucket_name\":\"RandomRouterForm_bucket_name__t3I5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"params\":\"SubflowRouterForm_params__2LM8K\",\"param\":\"SubflowRouterForm_param__Vq8O7\",\"param_name\":\"SubflowRouterForm_param_name__1GlRT\",\"param_input\":\"SubflowRouterForm_param_input__2fL5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"btn\":\"Button_btn__1hdG6\",\"disabled\":\"Button_disabled__xk6Qi\",\"primary\":\"Button_primary__3PDu-\",\"active\":\"Button_active__3BxT0\",\"secondary\":\"Button_secondary__1LfJY\",\"tertiary\":\"Button_tertiary__3UJsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"pill\":\"Pill_pill__3FyMl\",\"clickable\":\"Pill_clickable__24gn3\",\"icon\":\"Pill_icon__QZrb0\",\"large\":\"Pill_large__3mcHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"case_list_container\":\"CaseList_case_list_container__3PSnP\",\"scrolling\":\"CaseList_scrolling__2HZTN\",\"case_list\":\"CaseList_case_list__8CbuZ\",\"kase\":\"CaseList_kase__1FwXZ\",\"dnd_icon\":\"CaseList_dnd_icon__2Hrke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"MenuRouterForm_lead_in__253j6\",\"digit\":\"MenuRouterForm_digit__ruJhi\",\"category\":\"MenuRouterForm_category__2Khjv\",\"menu\":\"MenuRouterForm_menu__OrNSa\",\"menu_option\":\"MenuRouterForm_menu_option__2e-jl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeout_control_container\":\"TimeoutControl_timeout_control_container__ChGjA\",\"left_section\":\"TimeoutControl_left_section__23W9H\",\"label\":\"TimeoutControl_label__3L-JA\",\"checkbox\":\"TimeoutControl_checkbox__NYV4k\",\"drop_down\":\"TimeoutControl_drop_down__2Yy9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"canvas_container\":\"Canvas_canvas_container__oR3SR\",\"canvas_background\":\"Canvas_canvas_background__3UutW\",\"canvas\":\"Canvas_canvas__XH7zY\",\"drag_selection\":\"Canvas_drag_selection__3wxA2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"language\":\"LanguageSelector_language__3Q3TZ\",\"language_link\":\"LanguageSelector_language_link__32yIO\",\"active\":\"LanguageSelector_active__3RqNy\",\"separator\":\"LanguageSelector_separator__2oanc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ele\":\"SendEmailForm_ele__2CvL5\",\"subject\":\"SendEmailForm_subject__U7jTR\",\"message\":\"SendEmailForm_message__1k6GE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SetRunResultForm_form__HNnt4\",\"name\":\"SetRunResultForm_name__1aW9R\",\"value\":\"SetRunResultForm_value__36pab\",\"category\":\"SetRunResultForm_category__TuHWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"node\":\"StartSession_node__d1IsL\",\"to\":\"StartSession_to__2uqPY\",\"name\":\"StartSession_name__HfSVl\",\"icon\":\"StartSession_icon__1l-0q\",\"more\":\"StartSession_more__8uoUD\",\"message\":\"StartSession_message__1KRsK\",\"flow\":\"StartSession_flow__zPhXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"counter\":\"Counter_counter__1_pCt\",\"visible\":\"Counter_visible__3Avdq\",\"clickable\":\"Counter_clickable__3pprF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MountScroll_wrapper__1Stx4\",\"pulse\":\"MountScroll_pulse__uwbnk\",\"pulse_animation\":\"MountScroll_pulse_animation__2SL8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"small\":\"TembaSelect_small__1oIi4\",\"normal\":\"TembaSelect_normal__3v4Gh\",\"error\":\"TembaSelect_error__118Nd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"small\":\"TextInputElement_small__2eK3R\",\"option_list\":\"TextInputElement_option_list__18zXF\",\"option_summary\":\"TextInputElement_option_summary__qaT6A\",\"option_signature\":\"TextInputElement_option_signature__3c1zs\",\"option\":\"TextInputElement_option__5N_r_\",\"selected\":\"TextInputElement_selected__2bCI1\",\"first_option\":\"TextInputElement_first_option__2owME\",\"fn_marker\":\"TextInputElement_fn_marker__38I-n\",\"function_help\":\"TextInputElement_function_help__2jwVQ\",\"completion_container\":\"TextInputElement_completion_container__3c00R\",\"options_wrapper\":\"TextInputElement_options_wrapper__2knDu\",\"fn_container\":\"TextInputElement_fn_container__3tmtw\",\"option_name\":\"TextInputElement_option_name__2G-0k\",\"option_examples\":\"TextInputElement_option_examples__2l6sa\",\"example_header\":\"TextInputElement_example_header__3a5qK\",\"example\":\"TextInputElement_example__3MAGO\",\"fn_signature\":\"TextInputElement_fn_signature__efYOL\",\"wrapper\":\"TextInputElement_wrapper__1q0lN\",\"help\":\"TextInputElement_help__1dGMQ\",\"hidden\":\"TextInputElement_hidden__3Xul8\",\"textinput\":\"TextInputElement_textinput__2eOxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scheme_selection\":\"AddURNForm_scheme_selection__3qqeb\",\"path\":\"AddURNForm_path__vTuFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"text\":\"SayMsg_text__2WoYr\",\"recording\":\"SayMsg_recording__3JHw8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"code\":\"TransferAirtime_code__3WV9i\",\"amount\":\"TransferAirtime_amount__3mMNG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optional_text_input\":\"OptionalTextInput_optional_text_input__N6zb8\",\"toggle_link\":\"OptionalTextInput_toggle_link__3-B4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"errors\":\"ValidationFailures_errors__3qGX8\",\"error\":\"ValidationFailures_error__2Q3Gg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"FieldRouterForm_lead_in__ShYLI\",\"field_select\":\"FieldRouterForm_field_select__n0Csy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"subject\":\"TicketRouterForm_subject__3A23k\",\"body\":\"TicketRouterForm_body__lfD63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"draggable\":\"CanvasDraggable_draggable__cqsGq\",\"selected\":\"CanvasDraggable_selected__2GgF7\"};","module.exports = __webpack_public_path__ + \"static/media/map.5e547148.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"message\":\"AssetSelector_message__1viBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"type_list\":\"TypeList_type_list__3OATW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"RemoveGroupsForm_checkbox__3W5g6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"loading\":\"Loading_loading__3-t_e\",\"pulse\":\"Loading_pulse__apphI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"UpdateContactForm_value__19Fyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result_name\":\"AirtimeRouterForm_result_name__IPVnQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"DigitsRouterForm_lead_in__1_8u2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result_name\":\"ResthookRouterForm_result_name__dcAsY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"result_name\":\"WaitRouterForm_result_name__1QlYs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"link\":\"ClassifyRouterForm_link__20QgF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"empty_flow\":\"Flow_empty_flow__roKNh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"proper\":\"global_proper__rlaqB\"};","import { Attachment } from 'components/flow/actions/sendmsg/SendMsgForm';\nimport { Methods } from 'components/flow/routers/webhook/helpers';\nimport { FlowTypes, Operators, Types, ContactStatus } from 'config/interfaces';\n\n// we don't concern ourselves with patch versions\nexport const SPEC_VERSION = '13.1';\n\nexport interface Languages {\n  [iso: string]: string;\n}\n\nexport interface Language {\n  name: string;\n  iso: string;\n}\n\nexport interface Environment {\n  date_format: string;\n  time_format: string;\n  timezone: string;\n  languages: string[];\n}\n\nexport interface Endpoints {\n  attachments: string;\n  resthooks: string;\n  recents: string;\n  fields: string;\n  globals: string;\n  groups: string;\n  recipients: string;\n  flows: string;\n  revisions: string;\n  activity: string;\n  labels: string;\n  channels: string;\n  classifiers: string;\n  ticketers: string;\n  environment: string;\n  languages: string;\n  templates: string;\n  completion: string;\n  functions: string;\n  simulateStart: string;\n  simulateResume: string;\n  editor: string;\n  validateMedia: string;\n}\n\nexport interface FlowEditorConfig {\n  localStorage: boolean;\n  endpoints: Endpoints;\n  flow: string;\n  flowType: FlowTypes;\n  showTemplates?: boolean;\n  showDownload?: boolean;\n  mutable?: boolean;\n  debug?: boolean;\n  path?: string;\n  headers?: any;\n  onLoad?: () => void;\n  onActivityClicked?: (uuid: string) => void;\n  onChangeLanguage?: (code: string, name: string) => void;\n\n  // help links\n  help: { [key: string]: string };\n\n  // whether to force a save on load\n  forceSaveOnLoad?: boolean;\n\n  filters?: string[];\n\n  excludeTypes?: string[];\n\n  excludeOperators?: string[];\n}\n\nexport interface LocalizationMap {\n  [lang: string]: {\n    [uuid: string]: any;\n  };\n}\n\nexport interface Result {\n  key: string;\n  name: string;\n  categories: string[];\n  node_uuids: string[];\n}\n\nexport enum DependencyType {\n  channel = 'channel',\n  classifier = 'classifier',\n  contact = 'contact',\n  field = 'field',\n  flow = 'flow',\n  group = 'group',\n  label = 'label',\n  template = 'template'\n}\n\nexport interface Dependency {\n  uuid?: string;\n  key?: string;\n  name: string;\n  type: DependencyType;\n  missing?: boolean;\n  nodes: { [uuid: string]: string[] };\n}\n\nexport interface FlowMetadata {\n  dependencies: Dependency[];\n  waiting_exit_uuids: string[];\n  results: Result[];\n  parent_refs: string[];\n  issues: FlowIssue[];\n}\n\nexport enum FlowIssueType {\n  MISSING_DEPENDENCY = 'missing_dependency',\n  LEGACY_EXTRA = 'legacy_extra',\n  INVALID_REGEX = 'invalid_regex'\n}\n\nexport interface FlowIssue {\n  type: FlowIssueType;\n  node_uuid: string;\n  action_uuid: string;\n  description: string;\n  dependency?: Dependency;\n  language?: string;\n  regex?: string;\n}\n\nexport interface FlowDetails {\n  definition: FlowDefinition;\n  metadata: FlowMetadata;\n}\n\nexport interface FlowDefinition {\n  localization: LocalizationMap;\n  language: string;\n  name: string;\n  nodes: FlowNode[];\n  uuid: string;\n  revision: number;\n  spec_version: string;\n  _ui: UIMetaData;\n}\n\nexport interface FlowNode {\n  uuid: string;\n  actions: Action[];\n  exits: Exit[];\n  router?: Router;\n}\n\nexport interface Exit {\n  uuid: string;\n  destination_uuid?: string;\n}\n\nexport enum RouterTypes {\n  switch = 'switch',\n  random = 'random'\n}\n\nexport interface Router {\n  type: RouterTypes;\n  result_name?: string;\n  categories: Category[];\n  wait?: Wait;\n}\n\nexport interface Channel {\n  uuid: string;\n  name: string;\n}\n\nexport interface Case {\n  uuid: string;\n  type: Operators;\n  category_uuid: string;\n  arguments?: string[];\n  omit_operand?: boolean;\n}\n\nexport interface Category {\n  uuid: string;\n  name: string;\n  exit_uuid: string;\n}\n\nexport interface TemplateTranslation {\n  language: string;\n  status: string;\n  content: string;\n}\n\nexport interface Template {\n  created_on: Date;\n  modified_on: Date;\n  translations: TemplateTranslation[];\n}\n\nexport interface SwitchRouter extends Router {\n  cases: Case[];\n  operand: string;\n  default_category_uuid: string;\n}\n\nexport enum WaitTypes {\n  msg = 'msg'\n}\n\nexport enum HintTypes {\n  digits = 'digits',\n  audio = 'audio',\n  image = 'image',\n  video = 'video',\n  location = 'location'\n}\n\nexport interface Hint {\n  type: HintTypes;\n  count?: number;\n}\n\nexport interface Timeout {\n  category_uuid: string;\n  seconds: number;\n}\n\nexport interface Wait {\n  type: WaitTypes;\n  timeout?: Timeout;\n  hint?: Hint;\n}\n\nexport interface Group {\n  uuid?: string;\n  name?: string;\n  name_match?: string;\n}\n\nexport interface Contact {\n  uuid: string;\n  name: string;\n}\n\nexport interface ChangeGroups extends Action {\n  groups: Group[];\n}\n\nexport interface RemoveFromGroups extends ChangeGroups {\n  all_groups: boolean;\n}\n\nexport interface Field {\n  key: string;\n  name: string;\n}\n\nexport interface Label {\n  uuid: string;\n  name: string;\n}\n\nexport interface Flow {\n  uuid: string;\n  name: string;\n}\n\nexport interface Action {\n  type: Types;\n  uuid: string;\n}\n\nexport interface SetContactField extends Action {\n  field: Field;\n  value: string;\n}\n\nexport interface SetContactName extends Action {\n  type: Types.set_contact_name;\n  name: string;\n}\n\nexport interface SetContactLanguage extends Action {\n  type: Types.set_contact_language;\n  language: string;\n}\n\nexport interface SetContactChannel extends Action {\n  type: Types.set_contact_channel;\n  channel: Channel;\n}\n\nexport interface SetContactStatus extends Action {\n  type: Types.set_contact_status;\n  status: ContactStatus;\n}\n\nexport type SetContactProperty =\n  | SetContactName\n  | SetContactLanguage\n  | SetContactChannel\n  | SetContactStatus;\n\nexport type SetContactAttribute = SetContactField | SetContactProperty;\n\n// tslint:disable-next-line:no-empty-interface\nexport interface Missing extends Action {}\n\nexport interface RecipientsAction extends Action {\n  contacts: Contact[];\n  groups: Group[];\n  legacy_vars?: string[];\n}\n\nexport interface TemplateTranslation {\n  channel: Channel;\n  content: string;\n  language: string;\n  status: string;\n  variable_count: number;\n}\n\nexport interface TemplateOptions {\n  translations: TemplateTranslation[];\n}\n\nexport interface MsgTemplate {\n  name: string;\n  uuid: string;\n}\n\nexport interface MsgTemplating {\n  uuid: string;\n  template: MsgTemplate;\n  variables: string[];\n}\n\nexport interface SendMsg extends Action {\n  text: string;\n  all_urns?: boolean;\n  quick_replies?: string[];\n  attachments?: string[];\n  topic?: string;\n  templating?: MsgTemplating;\n}\n\nexport interface Delay extends Action {\n  delay: string;\n}\n\nexport interface SayMsg extends Action {\n  text: string;\n  audio_url?: string;\n}\n\nexport interface PlayAudio extends Action {\n  audio_url: string;\n}\n\nexport interface BroadcastMsg extends RecipientsAction {\n  text: string;\n  attachments?: string[];\n  templating?: MsgTemplating;\n}\n\nexport interface AddLabels extends Action {\n  labels: Label[];\n}\n\nexport interface AddURN extends Action {\n  scheme: string;\n  path: string;\n}\n\nexport interface SetPreferredChannel extends Action {\n  language: string;\n}\n\nexport interface SendEmail extends Action {\n  subject: string;\n  body: string;\n  addresses: string[];\n}\n\nexport interface SetRunResult extends Action {\n  name: string;\n  value: string;\n  category?: string;\n}\n\nexport interface Headers {\n  [name: string]: string;\n}\n\nexport interface Classifier {\n  uuid: string;\n  name: string;\n}\n\nexport interface Ticketer {\n  uuid: string;\n  name: string;\n}\n\nexport interface TransferAirtime extends Action {\n  amounts: { [name: string]: number };\n  result_name: string;\n}\n\nexport interface CallClassifier extends Action {\n  classifier: Classifier;\n  input: string;\n  result_name: string;\n}\n\nexport interface CallResthook extends Action {\n  resthook: string;\n  result_name: string;\n}\n\nexport interface CallWebhook extends Action {\n  url: string;\n  method: Methods;\n  result_name: string;\n  body?: string;\n  headers?: Headers;\n}\n\nexport interface OpenTicket extends Action {\n  ticketer: Ticketer;\n  subject: string;\n  body: string;\n  result_name: string;\n}\n\nexport interface StartFlow extends Action {\n  flow: Flow;\n}\n\nexport interface StartSession extends RecipientsAction {\n  flow: Flow;\n  create_contact?: boolean;\n  contact_query?: string;\n}\n\nexport interface UIMetaData {\n  nodes: { [key: string]: UINode };\n  languages: { [iso: string]: string }[];\n  translation_filters?: { categories: boolean; rules: boolean };\n}\n\nexport interface FlowPosition {\n  left: number;\n  top: number;\n  right?: number;\n  bottom?: number;\n}\n\nexport interface Dimensions {\n  width: number;\n  height: number;\n}\n\nexport interface UIConfig {\n  [key: string]: any;\n}\n\nexport interface UINode {\n  position: FlowPosition;\n  // ui type, used for split by expression, contact field, etc\n  type?: Types;\n  config?: UIConfig;\n}\n\nexport interface StickyNote {\n  position: FlowPosition;\n  title: string;\n  body: string;\n  color?: string;\n}\n\nexport interface UIMetaData {\n  nodes: { [key: string]: UINode };\n  stickies: { [key: string]: StickyNote };\n}\n\nexport type AnyAction =\n  | Action\n  | ChangeGroups\n  | SetContactField\n  | SetContactName\n  | SetRunResult\n  | SendMsg\n  | SetPreferredChannel\n  | SendEmail\n  | CallClassifier\n  | CallWebhook\n  | StartFlow\n  | StartSession\n  | Delay;\n\nexport enum ContactProperties {\n  UUID = 'uuid',\n  'Created By' = 'created_by',\n  'Modified By' = 'modified_by',\n  Org = 'org',\n  Name = 'name',\n  Language = 'language',\n  Status = 'status',\n  Timezone = 'timezone',\n  Channel = 'channel',\n  Email = 'email',\n  Mailto = 'mailto',\n  Phone = 'phone',\n  Groups = 'groups'\n}\n\nexport enum ValueType {\n  text = 'text',\n  numeric = 'numeric',\n  datetime = 'datetime',\n  state = 'state',\n  district = 'district',\n  ward = 'ward'\n}\n\nexport interface CreateOptions {\n  promptTextCreator?: any;\n  newOptionCreator?: any;\n  isValidNewOption?: any;\n  isOptionUnique?: any;\n  createNewOption?: any;\n  createPrompt?: string;\n}\n\nexport enum StartFlowArgs {\n  Complete = 'C',\n  Expired = 'E'\n}\n\nexport enum StartFlowExitNames {\n  Complete = 'Complete',\n  Expired = 'Expired'\n}\n\nexport enum WebhookExitNames {\n  Success = 'Success',\n  Failure = 'Failure'\n}\n\nexport enum TransferAirtimeExitNames {\n  Success = 'Success',\n  Failure = 'Failed'\n}\n","import { Action, Case, Category, Language, MsgTemplating } from 'flowTypes';\nimport { Asset } from 'store/flowContext';\n\nexport class LocalizedObject {\n  public localizedKeys: { [key: string]: boolean } = {};\n\n  private localizedObject: Action | Category | Case | any;\n  private localized: boolean = false;\n  private iso: string;\n  private name: string;\n  private language: Language;\n\n  constructor(object: Action | Category | Case | MsgTemplating, { id, name }: Asset) {\n    this.localizedObject = object;\n    this.iso = id;\n    this.language = { iso: this.iso, name };\n  }\n\n  public getLanguage(): Language {\n    if (!this.language) {\n      if (this.iso) {\n        this.language = { iso: this.iso, name: this.name };\n      }\n    }\n\n    return this.language;\n  }\n\n  public hasTranslation(key: string): boolean {\n    return key in this.localizedKeys;\n  }\n\n  // We use explicit any here to make this generic across all actions,\n  // note this means we'll attempt to set any property in our localization\n  // dictionary regardless of the object type\n  public addTranslation(key: string, value: any): void {\n    // localization shouldn't side-affect the original object\n    if (!this.localized) {\n      this.localizedObject = Object.assign({}, this.localizedObject);\n      this.localized = true;\n    }\n\n    if (Array.isArray(this.localizedObject[key])) {\n      this.localizedObject[key] = value;\n    } else {\n      if (value.length === 1) {\n        this.localizedObject[key] = value[0];\n      }\n    }\n\n    this.localizedKeys[key] = true;\n  }\n\n  public isLocalized(): boolean {\n    return this.localized;\n  }\n\n  public getObject(): Action | Case | Category | MsgTemplating {\n    return this.localizedObject;\n  }\n}\n\nexport default class Localization {\n  public static translate(\n    object: Action | Category | Case | MsgTemplating,\n    language: Asset,\n    translations?: { [uuid: string]: any }\n  ): LocalizedObject {\n    const localized: LocalizedObject = new LocalizedObject(object, language);\n\n    if (translations) {\n      if (object.uuid in translations) {\n        const values = translations[object.uuid];\n        // We don't want to side affect our action\n        Object.keys(values).forEach(key => {\n          return localized.addTranslation(key, values[key]);\n        });\n      }\n    }\n\n    return localized;\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport { renderIf } from 'utils';\n\nimport styles from './Button.module.scss';\n\nexport enum ButtonTypes {\n  primary = 'primary',\n  secondary = 'secondary',\n  tertiary = 'tertiary'\n}\nexport interface ButtonProps {\n  name: string;\n  onClick: any;\n  disabled?: boolean;\n  type?: ButtonTypes;\n  leftSpacing?: boolean;\n  topSpacing?: boolean;\n  iconName?: string;\n  onRef?: (ele: any) => void;\n}\n\ninterface ButtonState {\n  active: boolean;\n}\n\nexport default class Button extends React.Component<ButtonProps, ButtonState> {\n  constructor(props: ButtonProps) {\n    super(props);\n    this.state = {\n      active: false\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLDivElement>): void {\n    this.setState({ active: true });\n  }\n\n  private handleMouseUp(event: React.MouseEvent<HTMLDivElement>): void {\n    this.setState({ active: false });\n  }\n\n  public render(): JSX.Element {\n    const { onRef, name, onClick, type, disabled, leftSpacing, topSpacing, iconName } = this.props;\n\n    return (\n      <div\n        ref={onRef}\n        style={{\n          marginLeft: leftSpacing ? 10 : 0,\n          marginTop: topSpacing ? 10 : 0\n        }}\n        onClick={onClick}\n        onMouseDown={this.handleMouseDown}\n        onMouseUp={this.handleMouseUp}\n        className={`${styles.btn} ${styles[type!]} ${disabled ? styles.disabled : ''} ${\n          this.state.active ? styles.active : ''\n        }`}\n      >\n        {renderIf(iconName != null)(<span style={{ paddingRight: 4 }} className={iconName} />)}\n        {name}\n      </div>\n    );\n  }\n}\n","import {\n  Action,\n  Case,\n  Category,\n  ContactProperties,\n  FlowPosition,\n  LocalizationMap\n} from 'flowTypes';\nimport { Query } from 'immutability-helper';\nimport * as React from 'react';\nimport Localization, { LocalizedObject } from 'services/Localization';\nimport { Asset, Assets } from 'store/flowContext';\nimport { FormEntry } from 'store/nodeEditor';\nimport { v4 as generateUUID } from 'uuid';\nimport variables from 'variables.module.scss';\n\nexport const V4_UUID = /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\nconst LABEL_CHARS = /^[a-zA-Z0-9-][a-zA-Z0-9- ]*$/;\nconst MAX_LABEL_LENGTH = 36;\nconst SNAKED_CHARS = /\\s|-+(?=\\S)/g;\n\nexport const MAX_REFLOW_ATTEMPTS = 100;\nexport const ACTIVITY_INTERVAL = 5000;\nexport const COLLISION_FUDGE = 5;\nexport const GRID_SIZE: number = parseInt(variables.grid_size, 10) || 20;\nexport const NODE_SPACING: number = parseInt(variables.node_spacing, 10) || 10;\nexport const NODE_PADDING: number = parseInt(variables.node_padding, 10) || 10;\nexport const QUIET_NOTE = 2000;\nexport const CONFIRMATION_TIME = 2000;\n\nexport interface BoolMap {\n  [key: string]: boolean;\n}\n\ninterface Bounds {\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n}\n\nexport type LabelIdCb = (label?: string, labelKey?: string, valueKey?: string) => string;\n\n/**\n * Adjusts the left and top offsets to a grid\n * @param left horizontal offset\n * @param top vertical offset\n */\nexport const snapToGrid = (left: number, top: number): { left: number; top: number } => {\n  let leftAdjust = left % GRID_SIZE;\n  let topAdjust = top % GRID_SIZE;\n\n  if (leftAdjust > GRID_SIZE / 3) {\n    leftAdjust = GRID_SIZE - leftAdjust;\n  } else {\n    leftAdjust = leftAdjust * -1;\n  }\n\n  if (topAdjust > GRID_SIZE / 3) {\n    topAdjust = GRID_SIZE - topAdjust;\n  } else {\n    topAdjust = topAdjust * -1;\n  }\n\n  return {\n    left: Math.max(left + leftAdjust, 0),\n    top: Math.max(top + topAdjust, 0)\n  };\n};\n\n/**\n * Adjusts the position offsets to a grid\n */\nexport const snapPositionToGrid = (position: FlowPosition): FlowPosition => {\n  let leftAdjust = position.left % GRID_SIZE;\n  let topAdjust = position.top % GRID_SIZE;\n\n  if (leftAdjust > GRID_SIZE / 3) {\n    leftAdjust = GRID_SIZE - leftAdjust;\n  } else {\n    leftAdjust = leftAdjust * -1;\n  }\n\n  if (topAdjust > GRID_SIZE / 3) {\n    topAdjust = GRID_SIZE - topAdjust;\n  } else {\n    topAdjust = topAdjust * -1;\n  }\n\n  const left = Math.max(position.left + leftAdjust, 0);\n  const top = Math.max(position.top + topAdjust, 0);\n  const right = left + position.right - position.left;\n  const bottom = top + position.bottom - position.top;\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n};\n\n/**\n * Turns a string array into a bool map for constant lookup\n * @param {string[]} array - an array of strings, e.g. contact fields\n * @returns {object} A map of each string\n */\nexport const toBoolMap = (array: string[]): BoolMap =>\n  array.reduce(\n    (map: BoolMap, item: string) => ({\n      ...map,\n      [item]: true\n    }),\n    {}\n  );\n\n/**\n * Inserts commas into numbers where appropriate for better readability\n * @param {number} value - A number, e.g. 10000\n * @returns {string} A comma-separated string, e.g. 10,000\n */\nexport const addCommas = (value: number): string =>\n  value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n/**\n * Replaces spaces with underscores\n * @param {string} value - A space-separated string to be snaked, e.g. a raw flow field name ('my flow field')\n * @returns {string} A snaked string, e.g. 'my_flow_field'\n */\nexport const snakify = (value: string): string =>\n  value\n    .toLowerCase()\n    .trim()\n    .replace(SNAKED_CHARS, '_');\n/**\n * Returns true if a given UUID matches v4 format\n * @param {string} uuid - A version 4 UUID (no braces, uppercase OK)\n * @returns {boolean}\n */\nexport const validUUID = (uuid: string): boolean => V4_UUID.test(uuid);\n\n/**\n * Returns a given string in title case, e.g. 'full name' becomes 'Full Name'\n * @param {string} str - string to be title-cased\n * @returns {string} Title-cased string\n */\nexport const titleCase = (str: string): string =>\n  str.replace(/\\b\\w+/g, s => s.charAt(0).toUpperCase() + s.substr(1).toLowerCase());\n\nexport const getSelectClassForEntry = (entry: FormEntry): string => {\n  if (entry && entry.validationFailures && entry.validationFailures.length > 0) {\n    return 'select-invalid';\n  }\n  return '';\n};\n\nexport const getSelectClass = (errors: number): string => {\n  if (errors === 0) {\n    return 'react-select select-base';\n  }\n  // We use a global selector here for react-select\n  return 'react-select select-base select-invalid';\n};\n\nexport const reorderList = (list: any[], startIndex: number, endIndex: number): any[] => {\n  const [removed] = list.splice(startIndex, 1);\n\n  list.splice(endIndex, 0, removed);\n\n  return list;\n};\n\n/**\n * Compares basic objects (no methods and DOM nodes; property order important)\n * @param {object} objA - basic object\n * @param {object} objB - basic object\n * @returns {boolean}\n */\nexport const jsonEqual = (objA: {}, objB: {}): boolean =>\n  JSON.stringify(objA) === JSON.stringify(objB);\n\n/**\n * Checks whether any of a list of error strings contain one or more queries.\n * Used to determine whether a particular error has been encountered.\n */\nexport const hasErrorType = (errors: string[], exps: RegExp[]): boolean => {\n  if (!errors.length) {\n    return false;\n  }\n  for (const error of errors) {\n    for (const exp of exps) {\n      if (error.match(exp)) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const getLocalizedObject = (localizations: LocalizedObject[]) => {\n  if (localizations && localizations.length) {\n    return localizations[0];\n  }\n};\n\nexport interface ClickHandler {\n  // onClick: (event: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseDown: (event: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseUp: (event: React.MouseEvent<HTMLDivElement>) => void;\n}\n\n/**\n * Creates a simple click handler via onMouseDown and onMouseUp.\n * This is a necessity in order to let jsPlumb manage our element dragging.\n * @param onClick\n */\nexport const createClickHandler = (\n  onClick: (event: React.MouseEvent<HTMLElement>) => void,\n  shouldCancelClick: () => boolean = null,\n  onMouseDown?: (event: React.MouseEvent<HTMLElement>) => void\n): any => {\n  return {\n    onMouseDown: (event: React.MouseEvent<HTMLElement>) => {\n      if (onMouseDown) {\n        onMouseDown(event);\n      }\n    },\n    onMouseUp: (event: React.MouseEvent<HTMLElement>) => {\n      if (!shouldCancelClick || !shouldCancelClick()) {\n        onClick(event);\n      }\n    }\n  };\n};\n\nexport const getLocalization = (\n  obj: Action | Category | Case,\n  localization: LocalizationMap,\n  language: Asset\n) => Localization.translate(obj, language, localization[language.id]);\n\n/** istanbul ignore next */\nexport const dump = (thing: any) => console.log(JSON.stringify(thing, null, 4));\n\n/**\n * Apply emphasis style\n */\nexport const emphasize = (text: string) => <span className=\"emphasize\">{text}</span>;\nexport const ellipsize = (text: string, max: number = 250) => {\n  if (text.length > max) {\n    return text.substr(0, max) + '...';\n  }\n  return text;\n};\n\n/**\n * Does property exist in our ContactProperties enum?\n * @param {string} propertyToCheck - 'name' key on react-select AutoCompleteOption\n */\nexport const propertyExists = (propertyToCheck: string) => {\n  for (const property of Object.keys(ContactProperties)) {\n    if (property.toLowerCase() === propertyToCheck.toLowerCase().trim()) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Should x element be rendered?\n */\nexport const renderIf = (predicate: boolean) => (then: JSX.Element, otherwise?: JSX.Element) =>\n  predicate ? then : otherwise ? otherwise : null;\n\n/**\n * Does the label meet our length requirements?\n * @param {string} label - label created by react-select\n */\nexport const properLabelLength = (label: string = '') =>\n  label.length > 0 && label.length <= MAX_LABEL_LENGTH;\n\n/**\n * Does the label meet our character requirements?\n * @param {string} label\n */\nexport const containsOnlyLabelChars = (label: string = '') => LABEL_CHARS.test(label);\n\n/**\n * Does the label meet our length, character requirements?\n * @param {string} label - label created by react-select\n */\nexport const isValidLabel = (label: string) =>\n  properLabelLength(label) && containsOnlyLabelChars(label);\n\nexport const isRealValue = (obj: any) => obj !== null && obj !== undefined;\n\n/* istanbul ignore next */\nexport const timeStart = (name: string) =>\n  process.env.NODE_ENV === 'development' && console.time(name);\n\n/* istanbul ignore next */\nexport const timeEnd = (name: string) =>\n  process.env.NODE_ENV === 'development' && console.timeEnd(name);\n\nexport const log = (...message: any[]) =>\n  process.env.NODE_ENV === 'development' && console.log(...message);\n\nexport const capitalize = (str: string) =>\n  str.replace(/(?:^|\\s)\\S/g, captured => captured.toUpperCase());\n\nexport const set = (val: any): Query<any> => ({ $set: val });\n\nexport const setTrue = (): Query<true> => set(true);\n\nexport const setFalse = (): Query<false> => set(false);\n\nexport const setNull = (): Query<null> => set(null);\n\nexport const setEmpty = (): Query<string> => set('');\n\nexport const merge = (val: any): Query<any> => ({ $merge: val });\n\nexport const unset = (val: any): Query<any> => ({ $unset: val });\n\nexport const push = (arr: any[]): Query<any[]> => ({ $push: arr });\n\n// tslint:disable-next-line:array-type\nexport const splice = (arr: Array<Array<any>>): Query<Array<Array<any>>> => ({\n  $splice: arr\n});\n\nexport const optionExists = (newOptName: string, options: any[]) =>\n  options.find(({ name }) => name.toLowerCase().trim() === newOptName.toLowerCase().trim())\n    ? true\n    : false;\n\n/* export const isOptionUnique: IsOptionUniqueHandler = ({ option, options, labelKey, valueKey }) =>\n    !propertyExists(option.name) && !optionExists(option.name, options);\n\nexport const isValidNewOption: IsValidNewOptionHandler = ({ label }) => isValidLabel(label);\n*/\n/* export const composeCreateNewOption = ({\n    idCb,\n    type\n}: {\n    idCb: LabelIdCb;\n    type: AssetType;\n}): NewOptionCreatorHandler => ({ label, labelKey, valueKey }) => ({\n    id: idCb(label, labelKey, valueKey),\n    name: label,\n    type,\n    isNew: true\n});*/\n\n/**\n * Deduplicate values in an array.\n * Pass it a key to deduplicate based on obj key.\n */\nexport const uniqueBy = (a: any[], key: string): any[] => {\n  const seen: any = {};\n  return a.filter((item: any) => {\n    const k = item[key];\n    return seen.hasOwnProperty(k) ? false : (seen[k] = true);\n  });\n};\n\nexport const downloadJSON = (obj: any, name: string): void => {\n  const dataStr =\n    'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(obj, null, 2));\n  const downloadAnchorNode = document.createElement('a');\n  downloadAnchorNode.setAttribute('href', dataStr);\n  downloadAnchorNode.setAttribute('download', name + '.json');\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n};\n\nexport const fetchAsset = (asset: Asset) => (assets: Assets, id: string): Promise<Asset> => {\n  return new Promise<Asset>((resolve, reject) => {\n    resolve(asset);\n  });\n};\n\nexport let createUUID = (): string => {\n  return generateUUID();\n};\n\nexport const seededUUIDs = (seed: number = 1): any => {\n  let current = seed;\n  const randomNext = () => {\n    const x = Math.sin(current++) * 10000;\n    return x - Math.floor(x);\n  };\n\n  const random = (min: number, max: number): number => {\n    return Math.floor(randomNext() * (max - min) + min);\n  };\n\n  return () => {\n    const randomSeed: number[] = [];\n    for (let idx = 0; idx < 16; idx++) {\n      randomSeed.push(random(0, 250));\n    }\n    return generateUUID({ random: randomSeed });\n  };\n};\n\nexport const range = (start: number, end: number) =>\n  Array.from({ length: end - start }, (v: number, k: number) => k + start);\n\nexport const pluralize = (count: number, noun: string, suffix: string = 's'): string =>\n  `${noun}${count !== 1 ? suffix : ''}`;\n\nexport const hasString = (names: string[], key: string): boolean =>\n  !!names.find((item: string) => item === key);\n\nexport const scalarArrayEquals = (a: any[], b: any[]) =>\n  a.every((value, index) => value === b[index]);\n\nexport const getURNPath = (urn: string) => {\n  return urn.split(':')[1];\n};\n\nexport const copyToClipboard = (text: string) => {\n  navigator.clipboard.writeText(text);\n};\n\nexport const throttle = (func: any, timeout: any) => {\n  let ready: boolean = true;\n\n  return (...args: any) => {\n    if (!ready) {\n      return;\n    }\n\n    ready = false;\n    func(...args);\n    setTimeout(() => {\n      ready = true;\n    }, timeout);\n  };\n};\n\nexport const traceUpdate = (component: any, prevProps: any, prevState?: any) => {\n  const messages: string[] = [];\n  Object.entries(component.props).forEach(\n    ([key, val]) => prevProps[key] !== val && messages.push(`Prop: '${key}' changed`)\n  );\n  if (prevState && component.state) {\n    Object.entries(component.state).forEach(\n      ([key, val]) => prevState[key] !== val && messages.push(`State: '${key}' changed`)\n    );\n  }\n\n  if (messages.length > 0) {\n    log('****  ' + component._reactInternalFiber.type.name + ' changed');\n    messages.forEach((message: string) => {\n      log(message);\n    });\n  }\n};\n\nexport const debounce = (fn: any, quiet: number, closure: any = null) => {\n  if (fn.timeout) {\n    window.clearTimeout(fn.timeout);\n  }\n  fn.timeout = window.setTimeout(closure || fn, quiet);\n};\n\nexport const onNextRender = (fn: any) => {\n  window.setTimeout(fn, 0);\n};\n\nexport const desnake = (text: string): string => {\n  if (!text) {\n    return text;\n  }\n  return text\n    .split('_')\n    .join(' ')\n    .toLowerCase();\n};\n\nexport const bool = (prop: boolean) => {\n  return prop ? 'true' : null;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Button, { ButtonProps, ButtonTypes } from 'components/button/Button';\nimport shared from 'components/shared.module.scss';\nimport * as React from 'react';\nimport { renderIf } from 'utils';\n\nimport styles from './Dialog.module.scss';\n\nexport enum HeaderStyle {\n  NORMAL = 'normal',\n  BARBER = 'barber'\n}\n\nexport interface ButtonSet {\n  primary: ButtonProps;\n  secondary?: ButtonProps;\n  tertiary?: ButtonProps;\n}\n\nexport interface Tab {\n  name: string;\n  body: JSX.Element;\n  hasErrors?: boolean;\n  icon?: string;\n  checked?: boolean;\n}\n\ninterface Buttons {\n  leftButtons: JSX.Element[];\n  rightButtons: JSX.Element[];\n}\n\nexport interface DialogProps {\n  title: string;\n  subtitle?: string;\n  headerIcon?: string;\n  headerClass?: string;\n  headerStyle?: HeaderStyle;\n  buttons?: ButtonSet;\n  gutter?: JSX.Element;\n  noPadding?: boolean;\n  tabs?: Tab[];\n  className?: string;\n}\n\nexport interface DialogState {\n  activeTab: number;\n}\n\n/**\n * A component that has a front and back and can flip back and forth between them\n */\nexport default class Dialog extends React.Component<DialogProps, DialogState> {\n  private tabFocus: any = null;\n  private primaryButton: any = null;\n\n  constructor(props: DialogProps) {\n    super(props);\n    this.state = {\n      activeTab: -1\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^get/]\n    });\n  }\n\n  public showTab(index: number): void {\n    this.setState({ activeTab: index });\n  }\n\n  private handlePrimaryButton(onClick: any): void {\n    onClick();\n\n    this.tabFocus = window.setTimeout(() => {\n      let foundTab = false;\n      // focus on a tab with errors\n      (this.props.tabs || []).forEach((tab: Tab, index: number) => {\n        if (tab.hasErrors) {\n          console.log('--tab.hasErrors--', tab.hasErrors);\n          this.setState({ activeTab: index });\n          foundTab = true;\n          return;\n        }\n      });\n\n      if (!foundTab) {\n        // or focus on the main content\n        this.setState({ activeTab: -1 });\n      }\n    }, 0);\n  }\n\n  private handleKey(event: KeyboardEvent): void {\n    if (event.key === 'Enter' && event.shiftKey) {\n      if (this.primaryButton) {\n        event.preventDefault();\n        event.stopPropagation();\n        (event.target as any).blur();\n        this.primaryButton.click();\n        (event.target as any).focus();\n      } else {\n        console.log('No primary button!');\n      }\n    }\n  }\n\n  public componentDidMount(): void {\n    window.document.addEventListener('keydown', this.handleKey, {\n      capture: true\n    });\n  }\n\n  public componentWillUnmount(): void {\n    window.clearTimeout(this.tabFocus);\n    window.document.removeEventListener('keydown', this.handleKey, {\n      capture: true\n    });\n  }\n\n  private getButtons(): Buttons {\n    const rightButtons: JSX.Element[] = [];\n    const buttons = this.props.buttons || {\n      primary: null,\n      secondary: null,\n      tertiary: null\n    };\n\n    if (buttons.secondary) {\n      rightButtons.push(<Button key={0} type={ButtonTypes.secondary} {...buttons.secondary} />);\n    }\n\n    if (buttons.primary) {\n      rightButtons.push(\n        <Button\n          key={'button_' + buttons.primary.name}\n          onRef={(ref: any) => {\n            this.primaryButton = ref;\n          }}\n          onClick={() => {\n            this.handlePrimaryButton(buttons.primary.onClick);\n          }}\n          leftSpacing={true}\n          name={buttons.primary.name}\n          disabled={buttons.primary.disabled}\n          type={ButtonTypes.primary}\n        />\n      );\n    }\n\n    const leftButtons: JSX.Element[] = [];\n\n    // Our left most button if we have one\n    if (buttons.tertiary) {\n      leftButtons.push(<Button key={0} type={ButtonTypes.tertiary} {...buttons.tertiary} />);\n    }\n\n    return {\n      leftButtons,\n      rightButtons\n    };\n  }\n\n  public render(): JSX.Element {\n    const headerClasses = [styles.header];\n\n    if (this.state.activeTab > -1) {\n      headerClasses.push(styles.clickable);\n    }\n\n    if (this.props.headerClass) {\n      headerClasses.push(shared[this.props.headerClass]);\n    }\n\n    if (this.props.headerIcon) {\n      headerClasses.push(styles.iconed);\n    }\n\n    if (this.props.headerStyle === HeaderStyle.BARBER) {\n      headerClasses.push(styles.barber);\n    }\n\n    const activeClasses = [styles.dialog];\n    const { leftButtons, rightButtons } = this.getButtons();\n\n    if (this.props.className) {\n      activeClasses.push(this.props.className);\n    }\n\n    return (\n      <div className={activeClasses.join(' ')}>\n        {(this.props.tabs || []).length > 0 ? (\n          <div className={styles.tabs}>\n            {(this.props.tabs || []).map((tab: Tab, index: number) => (\n              <div\n                key={'tab_' + tab.name}\n                className={styles.tab + ' ' + (index === this.state.activeTab ? styles.active : '')}\n                onClick={(evt: React.MouseEvent<HTMLDivElement>) => {\n                  evt.stopPropagation();\n                  this.setState({ activeTab: index });\n                }}\n              >\n                {tab.name} {tab.icon ? <span className={styles.tab_icon + ' ' + tab.icon} /> : null}\n                {tab.checked ? <span className={styles.tab_icon + ' fe-check'} /> : null}\n              </div>\n            ))}\n          </div>\n        ) : null}\n        <div\n          onClick={() => {\n            this.setState({ activeTab: -1 });\n          }}\n          className={headerClasses.join(' ')}\n        >\n          {this.state.activeTab > -1 ? <div className={styles.header_overlay} /> : null}\n          {renderIf(this.props.headerIcon !== undefined)(\n            <span className={`${styles.header_icon} ${this.props.headerIcon}`} />\n          )}\n          <div className={styles.title_container}>\n            <div className={styles.title}>{this.props.title}</div>\n            <div className={styles.subtitle}>{this.props.subtitle}</div>\n          </div>\n        </div>\n        <div className={this.props.noPadding ? '' : styles.content}>\n          {this.state.activeTab > -1\n            ? this.props.tabs![this.state.activeTab].body\n            : this.props.children}\n        </div>\n\n        <div className={styles.footer}>\n          <div className={styles.buttons}>\n            {renderIf(leftButtons.length > 0)(\n              <div className={styles.left_buttons}>{leftButtons}</div>\n            )}\n            {renderIf(this.props.gutter != null)(\n              <div className={styles.gutter}>{this.props.gutter}</div>\n            )}\n            <div className={styles.right_buttons}>{rightButtons}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","enum Constants {\n  UPDATE_EDITOR_STATE = 'UPDATE_EDITOR_STATE',\n  UPDATE_NODE_EDITOR_SETTINGS = 'UPDATE_NODE_EDITOR_SETTINGS',\n  UPDATE_TRANSLATING = 'UPDATE_TRANSLATING',\n  UPDATE_BASE_LANGUAGE = 'UPDATE_BASE_LANGUAGE',\n  UPDATE_LANGUAGES = 'UPDATE_LANGUAGES',\n  UPDATE_LANGUAGE = 'UPDATE_LANGUAGE',\n  UPDATE_FETCHING_FLOW = 'FETCHING_FLOW',\n  UPDATE_DEFINITION = 'UPDATE_DEFINITION',\n  UPDATE_NODE_DRAGGING = 'UPDATE_NODE_DRAGGING',\n  UPDATE_FLOWS = 'UPDATE_FLOWS',\n  UPDATE_PENDING_CONNECTIONS = 'UPDATE_PENDING_CONNECTIONS',\n  REMOVE_PENDING_CONNECTION = 'REMOVE_PENDING_CONNECTION',\n  UPDATE_COMPONENTS = 'UPDATE_COMPONENTS',\n  UPDATE_CONTACT_FIELDS = 'UPDATE_CONTACT_FIELDS',\n  UPDATE_GROUPS = 'UPDATE_GROUPS',\n  UPDATE_RESULT_MAP = 'UPDATE_RESULT_MAP',\n  UPDATE_ASSET_MAP = 'UPDATE_ASSET_MAP',\n  UPDATE_NODES = 'UPDATE_NODES',\n  UPDATE_ISSUES = 'UPDATE_ISSUES',\n  UPDATE_METADATA = 'UPDATE_METADATA',\n  UPDATE_EXITS = 'UPDATE_EXITS',\n  UPDATE_NODE_EDITOR_OPEN = 'UPDATE_NODE_EDITOR_OPEN',\n  UPDATE_CREATE_NODE_POSITION = 'UPDATE_CREATE_NODE_POSITION',\n  UPDATE_DRAG_GROUP = 'UPDATE_DRAG_GROUP',\n  UPDATE_TYPE_CONFIG = 'UPDATE_TYPE_CONFIG',\n  UPDATE_USER_ADDING_ACTION = 'UPDATE_USER_ADDING_ACTION',\n  INCREMENT_SUGGESTED_RESULT_NAME_COUNT = 'INCREMENT_SUGGESTED_RESULT_NAME_COUNT'\n}\n\nexport default Constants;\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\n\n// tslint:disable-next-line: no-empty-interface\ninterface FixyProps {}\n\ninterface FixyState {\n  top: number;\n  fixed: boolean;\n}\n\nexport class Fixy extends React.PureComponent<FixyProps, FixyState> {\n  private ele!: HTMLDivElement | null;\n\n  constructor(props: FixyProps) {\n    super(props);\n    this.state = {\n      top: 0,\n      fixed: false\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleScroll(): void {\n    const fixed = window.scrollY > this.state.top;\n    this.setState({ fixed });\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  public componentDidMount(): void {\n    const top = this.ele!.getBoundingClientRect().top + window.scrollY;\n    const fixed = window.scrollY > top;\n    this.setState({ top, fixed });\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  public render(): JSX.Element {\n    let styles: React.CSSProperties = { position: 'absolute' };\n    if (this.state.fixed) {\n      styles = {\n        position: 'fixed',\n        top: 0\n      };\n    }\n\n    return (\n      <div\n        ref={ele => {\n          this.ele = ele;\n        }}\n        style={styles}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import { FlowDefinition, FlowNode, UINode, FlowMetadata, FlowIssue } from 'flowTypes';\nimport { combineReducers, Action } from 'redux';\nimport ActionTypes, {\n  UpdateAssetsAction,\n  UpdateBaseLanguageAction,\n  UpdateContactFieldsAction,\n  UpdateDefinitionAction,\n  UpdateNodesAction,\n  UpdateMetadataAction,\n  UpdateIssuesAction\n} from 'store/actionTypes';\nimport Constants from 'store/constants';\nimport { Type } from 'config/interfaces';\nimport { TembaStore } from 'temba-components';\n\n// tslint:disable:no-shadowed-variable\nexport interface RenderNodeMap {\n  [uuid: string]: RenderNode;\n}\n\nexport interface FlowIssueMap {\n  [uuid: string]: FlowIssue[];\n}\n\nexport interface RenderNode {\n  ui: UINode;\n  node: FlowNode;\n  inboundConnections: { [nodeUUID: string]: string };\n  ghost?: boolean;\n}\n\nexport interface RenderAction {\n  action: Action;\n  config: Type;\n  index?: number;\n}\n\nexport interface FunctionExample {\n  template: string;\n  output: string;\n}\n\nexport interface CompletionOption {\n  name?: string;\n  summary: string;\n\n  // functions\n  signature?: string;\n  detail?: string;\n  examples?: FunctionExample[];\n}\n\nexport interface ContactFields {\n  [snakedFieldName: string]: string;\n}\n\nexport enum AssetType {\n  Channel = 'channel',\n  Classifier = 'classifier',\n  Contact = 'contact',\n  ContactProperty = 'property',\n  Currency = 'currency',\n  Environment = 'environment',\n  Expression = 'expression',\n  Field = 'field',\n  Flow = 'flow',\n  Global = 'global',\n  Group = 'group',\n  GroupNameMatch = 'group_match',\n  Label = 'label',\n  Language = 'language',\n  Remove = 'remove',\n  Resthook = 'resthook',\n  Result = 'result',\n  Revision = 'revision',\n  Scheme = 'scheme',\n  Template = 'template',\n  Ticketer = 'ticketer',\n  URN = 'urn',\n  ValidateMedia = 'validate'\n}\n\nexport interface Reference {\n  nodeUUID: string;\n  actionUUID?: string;\n}\n\nexport interface Asset {\n  id: string;\n  name: string;\n  type: AssetType;\n\n  order?: number;\n  references?: Reference[];\n  isNew?: boolean;\n  content?: any;\n}\n\nexport const REMOVE_VALUE_ASSET = {\n  id: AssetType.Remove,\n  name: 'Remove Value',\n  type: AssetType.Remove\n};\n\nexport const DEFAULT_LANGUAGE = {\n  id: 'base',\n  name: 'Default',\n  type: AssetType.Language\n};\n\nexport interface AssetStore {\n  [assetType: string]: Assets;\n}\n\nexport interface AssetMap {\n  [id: string]: Asset;\n}\n\nexport interface Assets {\n  // our local cache of assets\n  items: AssetMap;\n\n  type: AssetType;\n\n  // an optional endpoint to search for more\n  endpoint?: string;\n\n  // option name for the id when fetching remotely\n  id?: string;\n\n  // have our assets already been loaded\n  prefetched?: boolean;\n}\n\nexport interface FlowContext {\n  metadata: FlowMetadata;\n  baseLanguage: Asset;\n  contactFields: ContactFields;\n  definition: FlowDefinition;\n  nodes: { [uuid: string]: RenderNode };\n  issues: FlowIssueMap;\n  assetStore: AssetStore;\n}\n\n// Initial state\nexport const initialState: FlowContext = {\n  definition: null,\n  baseLanguage: null,\n  metadata: {\n    dependencies: [],\n    results: [],\n    waiting_exit_uuids: [],\n    parent_refs: [],\n    issues: []\n  },\n  contactFields: {},\n  nodes: {},\n  issues: {},\n  assetStore: {}\n};\n\n// Action Creators\nexport const updateDefinition = (definition: FlowDefinition): UpdateDefinitionAction => ({\n  type: Constants.UPDATE_DEFINITION,\n  payload: {\n    definition\n  }\n});\n\nexport const updateNodes = (nodes: RenderNodeMap): UpdateNodesAction => ({\n  type: Constants.UPDATE_NODES,\n  payload: {\n    nodes\n  }\n});\n\nexport const updateIssues = (issues: FlowIssueMap): UpdateIssuesAction => ({\n  type: Constants.UPDATE_ISSUES,\n  payload: {\n    issues\n  }\n});\n\nexport const updateMetadata = (metadata: FlowMetadata): UpdateMetadataAction => {\n  return {\n    type: Constants.UPDATE_METADATA,\n    payload: {\n      metadata\n    }\n  };\n};\n\nexport const updateBaseLanguage = (baseLanguage: Asset): UpdateBaseLanguageAction => ({\n  type: Constants.UPDATE_BASE_LANGUAGE,\n  payload: {\n    baseLanguage\n  }\n});\n\nexport const updateContactFields = (contactFields: ContactFields): UpdateContactFieldsAction => ({\n  type: Constants.UPDATE_CONTACT_FIELDS,\n  payload: {\n    contactFields\n  }\n});\n\nexport const updateAssets = (assets: AssetStore): UpdateAssetsAction => {\n  const store: TembaStore = document.querySelector('temba-store');\n  if (store) {\n    store.setKeyedAssets('results', Object.keys(assets['results'].items));\n  }\n\n  return {\n    type: Constants.UPDATE_ASSET_MAP,\n    payload: {\n      assets\n    }\n  };\n};\n\n// Reducers\nexport const definition = (\n  state: FlowDefinition = initialState.definition,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_DEFINITION:\n      return action.payload.definition;\n    default:\n      return state;\n  }\n};\n\nexport const nodes = (state: {} = initialState.nodes, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_NODES:\n      return action.payload.nodes;\n    default:\n      return state;\n  }\n};\n\nexport const issues = (state: {} = initialState.issues, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_ISSUES:\n      return action.payload.issues;\n    default:\n      return state;\n  }\n};\n\nexport const metadata = (state: FlowMetadata = initialState.metadata, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_METADATA:\n      return action.payload.metadata;\n    default:\n      return state;\n  }\n};\n\nexport const assetStore = (state: AssetStore = initialState.assetStore, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_ASSET_MAP:\n      return action.payload.assets;\n    default:\n      return state;\n  }\n};\n\nexport const baseLanguage = (state: Asset = initialState.baseLanguage, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_BASE_LANGUAGE:\n      return action.payload.baseLanguage;\n    default:\n      return state;\n  }\n};\n\nexport const contactFields = (\n  state: ContactFields = initialState.contactFields,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_CONTACT_FIELDS:\n      return action.payload.contactFields;\n    default:\n      return state;\n  }\n};\n\n// Root reducer\nexport default combineReducers({\n  definition,\n  nodes,\n  issues,\n  metadata,\n  assetStore,\n  baseLanguage,\n  contactFields\n});\n","export enum FlowTypes {\n  MESSAGE = 'message',\n  VOICE = 'voice',\n  SURVEY = 'message_offline',\n  NONE = '-'\n}\n\nexport enum ContactStatus {\n  ACTIVE = 'active',\n  BLOCKED = 'blocked',\n  STOPPED = 'stopped',\n  ARCHIVED = 'archived'\n}\n\nexport enum Types {\n  execute_actions = 'execute_actions',\n  add_contact_urn = 'add_contact_urn',\n  add_contact_groups = 'add_contact_groups',\n  add_input_labels = 'add_input_labels',\n  remove_contact_groups = 'remove_contact_groups',\n  set_contact_channel = 'set_contact_channel',\n  set_contact_field = 'set_contact_field',\n  set_contact_name = 'set_contact_name',\n  set_contact_language = 'set_contact_language',\n  set_contact_status = 'set_contact_status',\n  set_run_result = 'set_run_result',\n  call_classifier = 'call_classifier',\n  call_resthook = 'call_resthook',\n  call_webhook = 'call_webhook',\n  open_ticket = 'open_ticket',\n  send_msg = 'send_msg',\n  send_email = 'send_email',\n  send_broadcast = 'send_broadcast',\n  enter_flow = 'enter_flow',\n  start_session = 'start_session',\n  transfer_airtime = 'transfer_airtime',\n  split_by_airtime = 'split_by_airtime',\n  split_by_expression = 'split_by_expression',\n  split_by_contact_field = 'split_by_contact_field',\n  split_by_run_result = 'split_by_run_result',\n  split_by_run_result_delimited = 'split_by_run_result_delimited',\n  split_by_groups = 'split_by_groups',\n  split_by_intent = 'split_by_intent',\n  split_by_random = 'split_by_random',\n  split_by_resthook = 'split_by_resthook',\n  split_by_ticket = 'split_by_ticket',\n  split_by_scheme = 'split_by_scheme',\n  split_by_subflow = 'split_by_subflow',\n  split_by_webhook = 'split_by_webhook',\n  wait_for_response = 'wait_for_response',\n  wait_for_time = 'wait_for_time',\n  wait_for_menu = 'wait_for_menu',\n  wait_for_digits = 'wait_for_digits',\n  wait_for_audio = 'wait_for_audio',\n  wait_for_video = 'wait_for_video',\n  wait_for_location = 'wait_for_location',\n  wait_for_image = 'wait_for_image',\n  missing = 'missing',\n  say_msg = 'say_msg',\n  play_audio = 'play_audio'\n}\n\nexport enum Operators {\n  has_any_word = 'has_any_word',\n  has_all_words = 'has_all_words',\n  has_phrase = 'has_phrase',\n  has_only_phrase = 'has_only_phrase',\n  has_beginning = 'has_beginning',\n  has_text = 'has_text',\n  has_date = 'has_date',\n  has_date_lt = 'has_date_lt',\n  has_date_eq = 'has_date_eq',\n  has_date_gt = 'has_date_gt',\n  has_time = 'has_time',\n  has_number = 'has_number',\n  has_number_between = 'has_number_between',\n  has_number_lt = 'has_number_lt',\n  has_number_lte = 'has_number_lte',\n  has_number_eq = 'has_number_eq',\n  has_number_gte = 'has_number_gte',\n  has_number_gt = 'has_number_gt',\n  has_run_status = 'has_run_status',\n  has_only_text = 'has_only_text',\n  has_group = 'has_group',\n  has_phone = 'has_phone',\n  has_email = 'has_email',\n  has_value = 'has_value',\n  has_district = 'has_district',\n  has_state = 'has_state',\n  has_ward = 'has_ward',\n  has_pattern = 'has_pattern',\n  has_error = 'has_error',\n  has_intent = 'has_intent',\n  has_top_intent = 'has_top_intent',\n  has_category = 'has_category',\n  has_media = 'has_media',\n  has_location = 'has_location'\n}\n\nexport enum FeatureFilter {\n  HAS_RESTHOOK = 'resthook',\n  HAS_WHATSAPP = 'whatsapp',\n  HAS_AIRTIME = 'airtime',\n  HAS_CLASSIFIER = 'classifier',\n  HAS_TICKETER = 'ticketer',\n  HAS_FACEBOOK = 'facebook'\n}\n\nexport interface FlowTypeVisibility {\n  visibility?: FlowTypes[];\n  filter?: FeatureFilter;\n}\n\nexport enum PopTabType {\n  SIMULATOR = 'Simulator',\n  REVISION_HISTORY = 'Revision History',\n  ISSUES_TAB = 'Issues Tab',\n  TRANSLATOR_TAB = 'Translator Tab'\n}\n\nexport interface Type extends FlowTypeVisibility {\n  type: Types;\n  name: string;\n  description: string;\n  component?: any;\n  form?: React.ComponentClass<any>;\n  aliases?: string[];\n  localization?: React.ComponentClass<any>;\n  localizeableKeys?: string[];\n\n  // opportunity to massage our object for display\n  massageForDisplay?: (obj: any) => void;\n}\n\nexport interface Operator extends FlowTypeVisibility {\n  type: Operators;\n  verboseName: string;\n  operands: number;\n  categoryName?: string;\n}\n\nexport interface OperatorMap {\n  [propName: string]: Operator;\n}\n\nexport const HIDDEN = [FlowTypes.NONE];\nexport const VOICE = [FlowTypes.VOICE];\nexport const SURVEY = [FlowTypes.SURVEY];\nexport const TEXT_TYPES = [FlowTypes.MESSAGE, FlowTypes.SURVEY];\nexport const ONLINE = [FlowTypes.MESSAGE, FlowTypes.VOICE];\n","import { AssetType } from 'store/flowContext';\n\nexport const currencies = {\n  ARS: {\n    id: 'ARS',\n    name: 'Argentine Peso',\n    type: AssetType.Currency\n  },\n  AUD: {\n    id: 'AUD',\n    name: 'Australian Dollar',\n    type: AssetType.Currency\n  },\n  BIF: {\n    id: 'BIF',\n    name: 'Burundi Franc',\n    type: AssetType.Currency\n  },\n  BRL: {\n    id: 'BRL',\n    name: 'Brazilian Real',\n    type: AssetType.Currency\n  },\n\n  CAD: {\n    id: 'CAD',\n    name: 'Canadian Dollar',\n    type: AssetType.Currency\n  },\n  CDF: {\n    id: 'CDF',\n    name: 'Congolese Franc',\n    type: AssetType.Currency\n  },\n  CLP: {\n    id: 'CLP',\n    name: 'Chilean Peso',\n    type: AssetType.Currency\n  },\n  COP: {\n    id: 'COP',\n    name: 'Colombian Peso',\n    type: AssetType.Currency\n  },\n  DJF: {\n    id: 'DJF',\n    name: 'Djibouti Franc',\n    type: AssetType.Currency\n  },\n  DOP: {\n    id: 'DOP',\n    name: 'Dominican Peso',\n    type: AssetType.Currency\n  },\n  DZD: {\n    id: 'DZD',\n    name: 'Algerian Dinar',\n    type: AssetType.Currency\n  },\n  EUR: {\n    id: 'EUR',\n    name: 'Euro',\n    type: AssetType.Currency\n  },\n  GBP: {\n    id: 'GBP',\n    name: 'Pound Sterling',\n    type: AssetType.Currency\n  },\n  GHS: {\n    id: 'GHS',\n    name: 'Ghana Cedi',\n    type: AssetType.Currency\n  },\n  GNF: {\n    id: 'GNF',\n    name: 'Guinean Franc',\n    type: AssetType.Currency\n  },\n  KES: {\n    id: 'KES',\n    name: 'Kenyan Shilling',\n    type: AssetType.Currency\n  },\n  LBP: {\n    id: 'LBP',\n    name: 'Lebanese Pound',\n    type: AssetType.Currency\n  },\n  LKR: {\n    id: 'LKR',\n    name: 'Sri Lanka Rupee',\n    type: AssetType.Currency\n  },\n  LRD: {\n    id: 'LRD',\n    name: 'Liberian Dollar',\n    type: AssetType.Currency\n  },\n  MWK: {\n    id: 'MWK',\n    name: 'Malawi Kwacha',\n    type: AssetType.Currency\n  },\n  MXN: {\n    id: 'MXN',\n    name: 'Mexican Peso',\n    type: AssetType.Currency\n  },\n  NAD: {\n    id: 'NAD',\n    name: 'Namibia Dollar',\n    type: AssetType.Currency\n  },\n  NPR: {\n    id: 'NPR',\n    name: 'Nepalese Rupee',\n    type: AssetType.Currency\n  },\n  NZD: {\n    id: 'NZD',\n    name: 'New Zealand Dollar',\n    type: AssetType.Currency\n  },\n  PHP: {\n    id: 'PHP',\n    name: 'Philippine Piso',\n    type: AssetType.Currency\n  },\n  PKR: {\n    id: 'PKR',\n    name: 'Pakistan Rupee',\n    type: AssetType.Currency\n  },\n  RUB: {\n    id: 'RUB',\n    name: 'Russian Ruble',\n    type: AssetType.Currency\n  },\n  RWF: {\n    id: 'RWF',\n    name: 'Rwanda Franc',\n    type: AssetType.Currency\n  },\n  SDG: {\n    id: 'SDG',\n    name: 'Sudanese Pound',\n    type: AssetType.Currency\n  },\n  SGD: {\n    id: 'SGD',\n    name: 'Singapore Dollar',\n    type: AssetType.Currency\n  },\n  SLL: {\n    id: 'SLL',\n    name: 'Leone',\n    type: AssetType.Currency\n  },\n  SOS: {\n    id: 'SOS',\n    name: 'Somali Shilling',\n    type: AssetType.Currency\n  },\n  SRD: {\n    id: 'SRD',\n    name: 'Surinam Dollar',\n    type: AssetType.Currency\n  },\n  SVC: {\n    id: 'SVC',\n    name: 'El Salvador Colon',\n    type: AssetType.Currency\n  },\n  TND: {\n    id: 'TND',\n    name: 'Tunisian Dinar',\n    type: AssetType.Currency\n  },\n  TRY: {\n    id: 'TRY',\n    name: 'Turkish Lira',\n    type: AssetType.Currency\n  },\n  TZS: {\n    id: 'TZS',\n    name: 'Tanzanian Shilling',\n    type: AssetType.Currency\n  },\n  UGX: {\n    id: 'UGX',\n    name: 'Uganda Shilling',\n    type: AssetType.Currency\n  },\n  USD: {\n    id: 'USD',\n    name: 'US Dollar',\n    type: AssetType.Currency\n  },\n  UYU: {\n    id: 'UYU',\n    name: 'Peso Uruguayo',\n    type: AssetType.Currency\n  },\n  UZS: {\n    id: 'UZS',\n    name: 'Uzbekistan Sum',\n    type: AssetType.Currency\n  },\n  VEF: {\n    id: 'VEF',\n    name: 'Bolívar',\n    type: AssetType.Currency\n  },\n  XCD: {\n    id: 'XCD',\n    name: 'East Caribbean Dollar',\n    type: AssetType.Currency\n  },\n  YER: {\n    id: 'YER',\n    name: 'Yemeni Rial',\n    type: AssetType.Currency\n  },\n  ZAR: {\n    id: 'ZAR',\n    name: 'Rand',\n    type: AssetType.Currency\n  },\n  ZMW: {\n    id: 'ZMW',\n    name: 'Zambian Kwacha',\n    type: AssetType.Currency\n  },\n  ZWL: {\n    id: 'ZWL',\n    name: 'Zimbabwe Dollar',\n    type: AssetType.Currency\n  }\n};\n","/* istanbul ignore file */\nimport axios, { AxiosResponse } from 'axios';\nimport { SaveResult } from 'components/revisions/RevisionExplorer';\nimport { Endpoints, Exit, FlowDefinition, SPEC_VERSION, FlowDetails } from 'flowTypes';\nimport { currencies } from 'store/currencies';\nimport { Activity, RecentMessage } from 'store/editor';\nimport {\n  Asset,\n  AssetMap,\n  Assets,\n  AssetStore,\n  AssetType,\n  CompletionOption\n} from 'store/flowContext';\nimport { assetListToMap } from 'store/helpers';\nimport { CompletionSchema } from 'utils/completion';\nimport { FlowTypes } from 'config/interfaces';\n\n// Configure axios to always send JSON requests\naxios.defaults.headers.post['Content-Type'] = 'application/javascript';\naxios.defaults.responseType = 'json';\naxios.defaults.timeout = 30000;\n\nexport const setHTTPTimeout = (millis: number) => {\n  axios.defaults.timeout = millis;\n};\n\n/**\n * Gets the path activity and the count of active particpants at each node\n * @param {string} flowUUID - The UUID of the current flow\n * @param {string} activityEndpoint - The URL path to the endpoint providing this data\n * @returns {Object} - An object representation of the flow's activty\n */\nexport const getActivity = (\n  activityEndpoint: string,\n  flowUUID: string,\n  headers = {}\n): Promise<Activity> =>\n  new Promise<Activity>((resolve, reject) =>\n    axios\n      .get(`${activityEndpoint}?flow=${flowUUID}`, { headers })\n      .then((response: AxiosResponse) => resolve(response.data as Activity))\n      .catch((error: any) => reject(error))\n  );\n\nexport interface Cancel {\n  reject?: () => void;\n}\n\nexport const saveRevision = (endpoint: string, definition: FlowDefinition): Promise<SaveResult> => {\n  const csrf = getCookie('csrftoken');\n  const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n\n  // update the spec version in our def to the current editor version\n  let patch = '0';\n\n  // honor any existing patch increments\n  let release = definition.spec_version.split('.');\n  if (release.length > 2) {\n    patch = release[2];\n  }\n\n  definition.spec_version = [SPEC_VERSION, patch].join('.');\n\n  return new Promise<SaveResult>((resolve, reject) => {\n    axios\n      .post(endpoint, definition, { headers })\n      .then((response: AxiosResponse) => {\n        if (response.status === 200) {\n          resolve(response.data as SaveResult);\n        } else {\n          reject(response);\n        }\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const getRecentMessages = (\n  recentsEndpoint: string,\n  exit: Exit,\n  cancel: Cancel\n): Promise<RecentMessage[]> =>\n  new Promise<RecentMessage[]>((resolve, reject) => {\n    cancel.reject = reject;\n    return axios\n      .get(`${recentsEndpoint}?exits=${exit.uuid}&to=${exit.destination_uuid}`)\n      .then((response: AxiosResponse) => {\n        const recentMessages: RecentMessage[] = [];\n        for (const row of response.data) {\n          recentMessages.push({ text: row.text, sent: row.sent });\n        }\n\n        resolve(response.data as RecentMessage[]);\n      })\n      .catch(error => reject(error));\n  });\n\n/** Get the value for a named cookie */\nexport const getCookie = (name: string): string => {\n  for (const cookie of document.cookie.split(';')) {\n    const idx = cookie.indexOf('=');\n    let key = cookie.substr(0, idx);\n    let value = cookie.substr(idx + 1);\n\n    // no spaces allowed\n    key = key.trim();\n    value = value.trim();\n\n    if (key === name) {\n      return value;\n    }\n  }\n  return null;\n};\n\nexport const postNewAsset = (assets: Assets, payload: any): Promise<Asset> => {\n  // if we have a csrf in our cookie, pass it along as a header\n  const csrf = getCookie('csrftoken');\n  const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n\n  return new Promise<Asset>((resolve, reject) => {\n    axios\n      .post(assets.endpoint, payload, { headers })\n      .then((response: AxiosResponse) => {\n        resolve(response.data);\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const fetchAsset = (assets: Assets, id: string): Promise<Asset> => {\n  return new Promise<Asset>((resolve, reject) => {\n    getAssets(assets.endpoint, assets.type, assets.id).then((results: Asset[]) => {\n      resolve(results.find((asset: Asset) => asset.id === id));\n    });\n  });\n};\n\ninterface AssetPage {\n  assets: Asset[];\n  next: string;\n}\n\nexport const getAssetPage = (url: string, type: AssetType, id: string): Promise<AssetPage> => {\n  return new Promise<AssetPage>((resolve, reject) => {\n    axios\n      .get(url)\n      .then((response: AxiosResponse) => {\n        const assets: Asset[] = response.data.results.map((result: any, idx: number) => {\n          const asset = resultToAsset(result, type, id);\n          asset.order = idx;\n          return asset;\n        });\n        resolve({ assets, next: response.data.next });\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const getAssets = async (url: string, type: AssetType, id: string): Promise<Asset[]> => {\n  if (!url) {\n    return new Promise<Asset[]>((resolve, reject) => resolve([]));\n  }\n\n  let assets: Asset[] = [];\n  let pageUrl = url;\n  while (pageUrl) {\n    const assetPage = await getAssetPage(pageUrl, type, id);\n    assets = assets.concat(assetPage.assets);\n    pageUrl = assetPage.next;\n  }\n  return assets;\n};\n\nexport const resultToAsset = (result: any, type: AssetType, id: string): Asset => {\n  const idKey = id || 'uuid';\n\n  let assetType = type;\n\n  if (type === AssetType.Flow && result.type) {\n    switch (result.type) {\n      case 'message':\n        result.type = FlowTypes.MESSAGE;\n        break;\n      case 'voice':\n        result.type = FlowTypes.VOICE;\n        break;\n      case 'survey':\n        result.type = FlowTypes.SURVEY;\n        break;\n    }\n  }\n\n  if (type !== AssetType.Flow && result.type) {\n    assetType = result.type;\n  }\n\n  const asset: Asset = {\n    name: result.name || result.text || result.label || result[idKey],\n    id: result[idKey],\n    type: assetType\n  };\n\n  delete result[idKey];\n  delete result.name;\n  delete result.text;\n\n  asset.content = result;\n  return asset;\n};\n\nexport const isMatch = (\n  input: string,\n  asset: Asset,\n  shouldExclude: (asset: Asset) => boolean\n): boolean => {\n  if (shouldExclude && shouldExclude(asset)) {\n    return false;\n  }\n\n  const inputLower = input.toLowerCase();\n  // some assets have ids worth matching\n  if (asset.type === AssetType.Currency || asset.type === AssetType.Language) {\n    if (asset.id.toLowerCase().includes(inputLower)) {\n      return true;\n    }\n  }\n  return asset.name.toLowerCase().includes(inputLower);\n};\n\n/**\n * Searches an AssetMap for a substring\n */\nexport const searchAssetMap = (\n  query: string,\n  assets: AssetMap,\n  additionalOptions?: Asset[],\n  shouldExclude?: (asset: Asset) => boolean\n): Asset[] => {\n  const search = query.toLowerCase();\n  let matches = Object.keys(assets)\n    .map(key => assets[key])\n    .filter((asset: Asset) => isMatch(search, asset, shouldExclude));\n\n  // include our additional matches if we have any\n  matches = matches\n    .concat(additionalOptions || [])\n    .filter((asset: Asset) => isMatch(search, asset, shouldExclude));\n\n  return matches;\n};\n\nexport const createAssetStore = (endpoints: Endpoints): Promise<AssetStore> => {\n  return new Promise<AssetStore>((resolve, reject) => {\n    const assetStore: AssetStore = {\n      channels: {\n        endpoint: getURL(endpoints.channels),\n        type: AssetType.Channel,\n        items: {}\n      },\n      classifiers: {\n        endpoint: getURL(endpoints.classifiers),\n        type: AssetType.Classifier,\n        items: {}\n      },\n      languages: {\n        endpoint: getURL(endpoints.languages),\n        type: AssetType.Language,\n        items: {},\n        id: 'iso'\n      },\n      flows: {\n        endpoint: getURL(endpoints.flows),\n        type: AssetType.Flow,\n        items: {}\n      },\n      fields: {\n        endpoint: getURL(endpoints.fields),\n        type: AssetType.Field,\n        id: 'key',\n        items: {}\n      },\n      globals: {\n        endpoint: getURL(endpoints.globals),\n        type: AssetType.Global,\n        id: 'key',\n        items: {}\n      },\n      groups: {\n        endpoint: getURL(endpoints.groups),\n        type: AssetType.Group,\n        items: {}\n      },\n      revisions: {\n        endpoint: getURL(endpoints.revisions),\n        type: AssetType.Revision,\n        id: 'id',\n        items: {}\n      },\n      labels: {\n        endpoint: getURL(endpoints.labels),\n        type: AssetType.Label,\n        items: {}\n      },\n      results: {\n        type: AssetType.Result,\n        items: {}\n      },\n      recipients: {\n        endpoint: getURL(endpoints.recipients),\n        type: AssetType.Contact || AssetType.Group || AssetType.URN,\n        items: {},\n        id: 'id'\n      },\n      resthooks: {\n        endpoint: getURL(endpoints.resthooks),\n        type: AssetType.Resthook,\n        id: 'resthook',\n        items: {}\n      },\n      templates: {\n        endpoint: getURL(endpoints.templates),\n        type: AssetType.Template,\n        items: {}\n      },\n      ticketers: {\n        endpoint: getURL(endpoints.ticketers),\n        type: AssetType.Ticketer,\n        items: {}\n      },\n      currencies: {\n        type: AssetType.Currency,\n        id: 'id',\n        items: currencies,\n        prefetched: true\n      },\n      validateMedia: {\n        items: {},\n        type: AssetType.ValidateMedia,\n        endpoint: getURL(endpoints.validateMedia)\n      }\n    };\n\n    // prefetch some of our assets\n    const fetches: any[] = [];\n    ['languages', 'fields', 'groups', 'labels', 'globals', 'classifiers'].forEach(\n      (storeId: string) => {\n        const store = assetStore[storeId];\n        fetches.push(\n          getAssets(store.endpoint, store.type, store.id || 'uuid').then((assets: Asset[]) => {\n            store.items = assetListToMap(assets);\n            store.prefetched = true;\n          })\n        );\n      }\n    );\n\n    // wait for our prefetches to finish\n    Promise.all(fetches).then((results: any) => {\n      resolve(assetStore);\n    });\n  });\n};\n\nexport const getFunctions = (endpoint: string): Promise<CompletionOption[]> => {\n  return new Promise<CompletionOption[]>((resolve, reject) => {\n    axios\n      .get(endpoint)\n      .then(response => {\n        resolve(response.data);\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const getCompletionSchema = (endpoint: string): Promise<CompletionSchema> => {\n  return new Promise<CompletionSchema>((resolve, reject) => {\n    axios.get(endpoint).then(response => {\n      resolve(response.data);\n    });\n  });\n};\n\nexport const getFlowDetails = (revisions: Assets, id: string = null): Promise<FlowDetails> => {\n  return new Promise<FlowDetails>((resolve, reject) => {\n    (async () => {\n      let revisionToLoad = id;\n      if (!revisionToLoad) {\n        try {\n          const response = await axios.get(`${revisions.endpoint}?version=${SPEC_VERSION}`);\n          if (response.data.results.length > 0) {\n            revisionToLoad = response.data.results[0].id;\n          }\n        } catch (error) {\n          reject(new Error(\"Couldn't reach revisions endpoint\"));\n        }\n      }\n\n      if (revisionToLoad) {\n        const url = `${revisions.endpoint}${revisionToLoad}?version=${SPEC_VERSION}`;\n        axios\n          .get(url)\n          .then((response: AxiosResponse) => {\n            const details = response.data as FlowDetails;\n            return resolve(details);\n          })\n          .catch(error => reject(error));\n      } else {\n        reject(new Error('No revision found for flow'));\n      }\n    })();\n  });\n};\n\nexport const getBaseURL = (): string => {\n  const location = window.location;\n  return location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');\n};\n\nexport const getURL = (path: string): string => {\n  let url = path;\n  if (!url.endsWith('/') && url.indexOf('?') === -1 && url.indexOf('groups') === -1) {\n    url += '/';\n  }\n\n  if (url.startsWith('http://') || url.startsWith('https://')) {\n    return url;\n  }\n\n  // Set url for netlify deployments\n  // if (process.env.NODE_ENV === \"preview\") {\n  // url = \"/.netlify/functions/\" + url;\n  // }\n\n  const result = `${getBaseURL() + url}`;\n  return result;\n};\n\nexport const showHelpArticle = (link: string) => {\n  window.open(link, 'floweditor_help');\n};\n","import { Contact, Endpoints, Group, RecipientsAction, FlowIssue, FlowIssueType } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { FormEntry, NodeEditorSettings, ValidationFailure } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\nimport { Trans } from 'react-i18next';\nimport shared from 'components/shared.module.scss';\nimport { showHelpArticle } from 'external';\nimport { IssueProps } from '../props';\n\nexport const renderIssues = (issueProps: IssueProps): JSX.Element => {\n  const { issues, helpArticles } = issueProps;\n  if (!issues || issues.length === 0) {\n    return null;\n  }\n\n  return (\n    <div style={{ padding: '10px 0px' }}>\n      {issues.map((issue: FlowIssue, num: Number) => {\n        const key = issue.node_uuid + issue.action_uuid + num;\n        return (\n          <div\n            style={{ margin: '6px 0px', display: 'flex', fontSize: '14px', color: 'tomato' }}\n            key={key}\n          >\n            <div\n              style={{ marginRight: '8px', marginTop: '-2px', fontSize: '18px' }}\n              className={`fe-warning`}\n            />\n            <div>{renderIssue(issue, helpArticles)}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const renderIssue = (\n  issue: FlowIssue,\n  helpArticles: { [key: string]: string } = {}\n): JSX.Element => {\n  // worst case, defer to the default description\n  let message: JSX.Element = <>{issue.description}</>;\n\n  if (issue.type === FlowIssueType.MISSING_DEPENDENCY) {\n    message = (\n      <Trans\n        i18nKey=\"issues.missing_dependency\"\n        values={{\n          name: issue.dependency.name || issue.dependency.key,\n          type: issue.dependency.type\n        }}\n      >\n        Cannot find a [[type]] for <span className=\"emphasize\">[[name]]</span>\n      </Trans>\n    );\n  }\n\n  if (issue.type === FlowIssueType.INVALID_REGEX) {\n    message = (\n      <Trans i18nKey=\"issues.legacy_extra\" values={{ regex: issue.regex }}>\n        Invalid regular expression found: [[regex]]\n      </Trans>\n    );\n  }\n\n  if (issue.type === FlowIssueType.LEGACY_EXTRA) {\n    message = (\n      <Trans i18nKey=\"issues.legacy_extra\">Expressions should not reference @legacy_extra</Trans>\n    );\n  }\n\n  const article = helpArticles[issue.type];\n  if (article) {\n    return (\n      <div\n        className={shared.issue_help}\n        onClick={() => {\n          showHelpArticle(article);\n        }}\n      >\n        {message}\n      </div>\n    );\n  }\n\n  return message;\n};\n\nexport const getActionUUID = (nodeSettings: NodeEditorSettings, currentType: string): string => {\n  if (nodeSettings.originalAction && nodeSettings.originalAction.type === currentType) {\n    return nodeSettings.originalAction.uuid;\n  }\n  return createUUID();\n};\n\nexport const getRecipients = (action: RecipientsAction): Asset[] => {\n  let selected: any[] = (action.groups || []).map((group: Group) => {\n    return {\n      id: group.uuid,\n      name: group.name,\n      type: AssetType.Group\n    };\n  });\n\n  selected = selected.concat(\n    (action.contacts || []).map((contact: Contact) => {\n      return { id: contact.uuid, name: contact.name, type: AssetType.Contact, missing: false };\n    })\n  );\n\n  selected = selected.concat(\n    (action.legacy_vars || []).map((expression: string) => {\n      return { name: expression, value: expression, expression: true };\n    })\n  );\n\n  return selected;\n};\n\nexport const renderAssetList = (\n  assets: Asset[],\n  max: number = 10,\n  endpoints: Endpoints\n): JSX.Element[] => {\n  // show our missing ones first\n  return assets.reduce((elements, asset, idx) => {\n    if (idx <= max - 2 || assets.length === max) {\n      elements.push(renderAsset(asset, endpoints));\n    } else if (idx === max - 1) {\n      elements.push(<div key=\"ellipses\">+{assets.length - max + 1} more</div>);\n    }\n    return elements;\n  }, []);\n};\n\nexport const renderAsset = (asset: Asset, endpoints: Endpoints) => {\n  let assetBody = null;\n\n  switch (asset.type) {\n    case AssetType.Classifier:\n      assetBody = (\n        <Trans i18nKey=\"assets.classifier\" values={{ name: asset.name }}>\n          Call [[name]] classifier\n        </Trans>\n      );\n      break;\n    case AssetType.Group:\n      assetBody = (\n        <>\n          <span className={`${shared.node_group} fe-group`} />\n          {asset.name}\n        </>\n      );\n      break;\n    case AssetType.Label:\n      assetBody = (\n        <>\n          <span className={`${shared.node_label} fe-label`} />\n          {asset.name}\n        </>\n      );\n      break;\n    case AssetType.Flow:\n      assetBody = (\n        <>\n          <span className={`${shared.node_label} fe-split`} />\n          <a\n            onMouseDown={(e: any) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n            onMouseUp={(e: any) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n            href={`${endpoints.editor}/${asset.id}`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {asset.name}\n          </a>\n        </>\n      );\n      break;\n    case AssetType.Ticketer:\n      assetBody = (\n        <Trans i18nKey=\"assets.ticketer\" values={{ name: asset.name }}>\n          Using [[name]] service\n        </Trans>\n      );\n      break;\n  }\n\n  if (!assetBody) {\n    assetBody = asset.name;\n  }\n\n  return (\n    <div className={`${shared.node_asset}`} key={asset.id || (asset as any).value}>\n      {assetBody}\n    </div>\n  );\n};\n\nexport const getAllErrors = (entry: FormEntry): ValidationFailure[] => {\n  return entry ? entry.validationFailures || [] : [];\n};\n\nexport const hasErrors = (entry: FormEntry): boolean => {\n  return getAllErrors(entry).length > 0;\n};\n\nexport const getAllErrorMessages = (entry: FormEntry): string[] => {\n  const errors = getAllErrors(entry).map((failure: ValidationFailure) => failure.message);\n  return errors;\n};\n\nexport const getExpressions = (assets: any[]): any[] => {\n  return assets\n    .filter((asset: any) => asset.expression)\n    .map((asset: any) => {\n      return asset.value;\n    });\n};\n\nexport const getRecipientsByAsset = (assets: Asset[], type: AssetType): any[] => {\n  return assets\n    .filter((asset: Asset) => asset.type === type)\n    .map((asset: Asset) => {\n      return { uuid: asset.id, name: asset.name };\n    });\n};\n","import { Type } from 'config/interfaces';\nimport { AnyAction, ContactProperties, FlowIssue } from 'flowTypes';\nimport { Asset, AssetStore, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { DispatchWithState, GetState } from 'store/thunks';\nimport { titleCase } from 'utils';\nimport { CompletionSchema } from 'utils/completion';\n\nexport interface IssueProps {\n  helpArticles: { [key: string]: string };\n  issues: FlowIssue[];\n}\n\nexport interface ActionFormProps extends IssueProps {\n  // action details\n  nodeSettings: NodeEditorSettings;\n  typeConfig: Type;\n  assetStore: AssetStore;\n  completionSchema: CompletionSchema;\n\n  addAsset(assetType: string, asset: Asset): void;\n\n  // update handlers\n  updateAction(\n    action: AnyAction,\n    onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n  ): void;\n\n  // modal notifiers\n  onTypeChange(config: Type): void;\n  onClose(canceled: boolean): void;\n}\n\nexport interface RouterFormProps extends IssueProps {\n  nodeSettings: NodeEditorSettings;\n  typeConfig: Type;\n\n  assetStore: AssetStore;\n\n  // update handlers\n  updateRouter(renderNode: RenderNode): void;\n\n  // modal notifiers\n  onTypeChange(config: Type): void;\n  onClose(canceled: boolean): void;\n}\n\nexport interface LocalizationFormProps extends IssueProps {\n  language: Asset;\n  nodeSettings: NodeEditorSettings;\n  updateLocalizations(languageCode: string, localizations: any[]): void;\n  onClose(canceled: boolean): void;\n  helpArticles: { [key: string]: string };\n}\n\nexport const NAME_PROPERTY: Asset = {\n  name: titleCase(ContactProperties.Name),\n  id: ContactProperties.Name,\n  type: AssetType.ContactProperty\n};\n\nexport const CHANNEL_PROPERTY: Asset = {\n  name: titleCase(ContactProperties.Channel),\n  id: ContactProperties.Channel,\n  type: AssetType.ContactProperty\n};\n\nexport const LANGUAGE_PROPERTY: Asset = {\n  name: titleCase(ContactProperties.Language),\n  id: ContactProperties.Language,\n  type: AssetType.ContactProperty\n};\n\nexport const STATUS_PROPERTY: Asset = {\n  name: titleCase(ContactProperties.Status),\n  id: ContactProperties.Status,\n  type: AssetType.ContactProperty\n};\n","import { FlowEditorConfig } from 'flowTypes';\nimport * as React from 'react';\n\nexport const fakePropType: any = (): any => null;\nfakePropType.isRequired = (): any => null;\n\ninterface ConfigProviderProps {\n  config: FlowEditorConfig;\n  children: any;\n}\n\nexport interface ConfigProviderContext {\n  config: FlowEditorConfig;\n}\n\n// ----------------------------------------------------------------------------------------------\n\nexport const SINGLE_CHILD_ERROR = 'ConfigProvider expects only one child component.';\nexport const VALID_CHILD_ERROR =\n  'ConfigProvider expects a valid React element: https://reactjs.org/docs/react-api.html#isvalidelement';\n\nexport default class ConfigProvider extends React.Component<ConfigProviderProps> {\n  public static childContextTypes = {\n    config: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: ConfigProviderProps) {\n    super(props);\n\n    const tembaStore: any = document.createElement('temba-store');\n\n    tembaStore.completionsEndpoint = props.config.endpoints.completion;\n    tembaStore.functionsEndpoint = props.config.endpoints.functions;\n    tembaStore.fieldsEndpoint = props.config.endpoints.fields;\n    tembaStore.globalsEndpoint = props.config.endpoints.globals;\n\n    document.body.appendChild(tembaStore);\n\n    if (React.Children.count(props.children) > 1) {\n      throw new Error(SINGLE_CHILD_ERROR);\n    } else if (!React.isValidElement(props.children)) {\n      throw new Error(VALID_CHILD_ERROR);\n    }\n  }\n\n  public getChildContext(): ConfigProviderContext {\n    return {\n      config: this.props.config\n    };\n  }\n\n  public render(): JSX.Element {\n    return React.Children.only(this.props.children);\n  }\n}\n","import * as React from 'react';\nimport { renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { AddLabels } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\n\nexport const MAX_TO_SHOW = 5;\n\nconst AddLabelsComp: React.SFC<AddLabels> = ({ labels }, context: any): JSX.Element => {\n  return (\n    <>\n      {renderAssetList(\n        labels.map(label => {\n          return {\n            id: label.uuid,\n            name: label.name,\n            type: AssetType.Label\n          };\n        }),\n        MAX_TO_SHOW,\n        context.config.endpoints\n      )}\n    </>\n  );\n};\n\nAddLabelsComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default AddLabelsComp;\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport * as React from 'react';\nimport { FormEntry, ValidationFailure } from 'store/nodeEditor';\nimport { renderIf } from 'utils';\n\nimport styles from './FormElement.module.scss';\nimport { hasErrors } from 'components/flow/actions/helpers';\n\nconst cx: any = classNames.bind(styles);\n\nexport interface FormElementProps {\n  name: string;\n  helpText?: string | JSX.Element;\n  entry?: FormEntry;\n  showLabel?: boolean;\n  __className?: string;\n  border?: boolean;\n  sendMsgError?: boolean;\n  kaseError?: boolean;\n  attribError?: boolean;\n  hideError?: boolean;\n}\n\nexport default class FormElement extends React.PureComponent<FormElementProps> {\n  constructor(props: FormElementProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^get/, /^has/]\n    });\n  }\n  private getName(): JSX.Element {\n    return renderIf(\n      this.props.showLabel &&\n        this.props.name !== undefined &&\n        this.props.name !== null &&\n        this.props.name.length > 0\n    )(<div className={styles.label}>{this.props.name}</div>);\n  }\n\n  private getHelpText(): JSX.Element {\n    return renderIf(this.props.helpText != null)(\n      <div className={styles.help_text}>{this.props.helpText} </div>\n    );\n  }\n\n  private hasErrors(): boolean {\n    return hasErrors(this.props.entry);\n  }\n\n  private getValidationErrors(): ValidationFailure[] {\n    if (this.props.entry) {\n      return this.props.entry.validationFailures || [];\n    }\n    return [];\n  }\n\n  private getErrors(): JSX.Element {\n    if (this.hasErrors() && !this.props.hideError) {\n      const errors = this.getValidationErrors().map((failure, idx) => {\n        const className = cx({\n          [styles.error]: true,\n          [styles.send_msg_error]: this.props.sendMsgError === true\n        });\n        return (\n          <div key={idx} className={className}>\n            <div className={styles.arrow_up} />\n            <div>{failure.message}</div>\n          </div>\n        );\n      });\n      return <div className={styles.error_list}>{errors}</div>;\n    }\n    return null;\n  }\n\n  public render(): JSX.Element {\n    const name: JSX.Element = this.getName();\n    const helpText: JSX.Element = this.getHelpText();\n    const errorsToDisplay: JSX.Element = this.getErrors();\n\n    const className = cx({\n      [styles.ele]: true,\n      [styles.border]: this.props.border,\n      [styles.invalid]: this.hasErrors(),\n      [this.props.__className]: this.props.__className !== undefined\n    });\n\n    return (\n      <div className={className}>\n        {name}\n        {this.props.children}\n        {helpText}\n        {errorsToDisplay}\n      </div>\n    );\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\n// TODO: consider chunking out translation files\n// and using something like XHR backend to lazily\n// load only the required language.\n// See https://www.i18next.com/how-to/add-or-load-translations\n\nimport defaults from './defaults.json';\nimport en from './en/resource.json';\nimport es from './es/resource.json';\nimport pt from './pt-br/resource.json';\n\nconst resources = {\n  defaults: { translation: defaults },\n  en: { translation: en },\n  es: { translation: es },\n  pt: { translation: pt }\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n\n    // do not load a fallback\n    fallbackLng: ['en', 'defaults'],\n\n    interpolation: {\n      prefix: '[[',\n      suffix: ']]'\n    }\n  });\n\nexport default i18n;\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport { bool, snakify } from 'utils';\nimport styles from './TembaSelect.module.scss';\nimport { Assets } from 'store/flowContext';\n\nexport enum TembaSelectStyle {\n  small = 'small',\n  normal = 'normal'\n}\n\nexport interface TembaSelectProps {\n  name: string;\n  options?: any[];\n  value: any;\n  onChange: (option: any) => void;\n  onFocus?: () => void;\n  shouldExclude?: (option: any) => boolean;\n  disabled?: boolean;\n\n  createPrefix?: string;\n  expressions?: boolean;\n  assets?: Assets;\n  errors?: string[];\n  style?: TembaSelectStyle;\n\n  placeholder?: string;\n  searchable?: boolean;\n  multi?: boolean;\n  tags?: boolean;\n\n  cacheKey?: string;\n\n  getName?: (option: any) => string;\n\n  nameKey?: string;\n  valueKey?: string;\n\n  sortFunction?(a: any, b: any): number;\n\n  hideError?: boolean;\n\n  clearable?: boolean;\n\n  queryParam?: string;\n}\n\ninterface TembaSelectState {}\n\nexport default class TembaSelect extends React.Component<TembaSelectProps, TembaSelectState> {\n  private selectbox: HTMLElement;\n\n  constructor(props: TembaSelectProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public getName(option: any): string {\n    let name = '';\n    if (this.props.getName) {\n      name = this.props.getName(option);\n    }\n\n    if (!name && this.props.nameKey in option) {\n      name = option[this.props.nameKey];\n    }\n\n    if (!name && 'label' in option) {\n      name = option['label'];\n    }\n\n    if (!name) {\n      name = option['name'];\n    }\n    return name;\n  }\n\n  public getValue(option: any): string {\n    return option[this.props.valueKey || 'value'];\n  }\n\n  public isMatch(a: any, b: any): boolean {\n    if (a && b) {\n      if (Array.isArray(a)) {\n        return a.find((option: any) => this.getValue(option) === this.getValue(b));\n      } else {\n        return this.getValue(a) === this.getValue(b);\n      }\n    }\n    return false;\n  }\n\n  public componentDidMount(): void {\n    const select = this;\n    // add the option to create groups abitrarily\n    if (this.props.createPrefix) {\n      (this.selectbox as any).createArbitraryOption = (input: string, options: any[]) => {\n        if (input.indexOf('@') === -1) {\n          var existing = options.find(function(option: any) {\n            const name = select.getName(option);\n            return !!(name.toLowerCase().trim() === input.toLowerCase().trim());\n          });\n          if (!existing) {\n            return {\n              prefix: this.props.createPrefix,\n              name: input,\n              id: 'created'\n            };\n          }\n        }\n      };\n    }\n\n    const selectbox = this.selectbox as any;\n\n    if (this.props.options) {\n      if (selectbox.setOptions) {\n        selectbox.setOptions(this.props.options);\n      }\n    }\n\n    if (this.props.sortFunction) {\n      selectbox.sortFunction = this.props.sortFunction;\n    }\n\n    if (this.props.shouldExclude) {\n      selectbox.shouldExclude = this.props.shouldExclude;\n    }\n\n    selectbox.getName = select.getName.bind(select);\n\n    this.selectbox.addEventListener('change', (event: any) => {\n      const values = event.target.values || [event.target.value];\n\n      let resolved = values;\n\n      if (!this.props.assets && !this.props.tags) {\n        resolved = values.map((op: any) => {\n          const result = (this.props.options || []).find(\n            (option: any) => this.getValue(option) === this.getValue(op)\n          );\n          if (!result && this.props.createPrefix) {\n            return op;\n          }\n          return result;\n        });\n\n        resolved.forEach((option: any) => {\n          if (!option) {\n            throw new Error('No option found for selection');\n          }\n        });\n      }\n\n      if (this.props.onChange) {\n        if (this.props.multi) {\n          this.props.onChange(resolved);\n        } else {\n          this.props.onChange(resolved[0]);\n        }\n      }\n    });\n  }\n\n  public isFocused(): boolean {\n    return (this.selectbox as any).focused;\n  }\n\n  public render(): JSX.Element {\n    let selectedArray: any[] = [];\n    if (this.props.value && !Array.isArray(this.props.value)) {\n      selectedArray = [this.props.value];\n    } else if (Array.isArray(this.props.value)) {\n      selectedArray = this.props.value;\n    }\n\n    const values = JSON.stringify(selectedArray);\n\n    return (\n      <div\n        className={\n          styles[this.props.style || TembaSelectStyle.normal] +\n          ' ' +\n          ((this.props.errors || []).length > 0 ? styles.error : '')\n        }\n      >\n        <temba-select\n          ref={(ele: any) => {\n            this.selectbox = ele;\n          }}\n          data-testid={`temba_select_${snakify(this.props.name)}`}\n          onFocus={this.props.onFocus}\n          nameKey={this.props.nameKey || 'name'}\n          valueKey={this.props.valueKey || 'value'}\n          name={this.props.name}\n          cacheKey={this.props.cacheKey}\n          expressions={this.props.expressions ? 'session' : ''}\n          endpoint={this.props.assets ? this.props.assets.endpoint : null}\n          values={values}\n          errors={JSON.stringify(this.props.errors ? this.props.errors : [])}\n          hideErrors={this.props.hideError}\n          placeholder={this.props.placeholder}\n          searchable={bool(this.props.searchable)}\n          multi={bool(this.props.multi)}\n          disabled={this.props.disabled}\n          clearable={this.props.clearable}\n          tags={this.props.tags}\n          queryParam={this.props.queryParam}\n        />\n      </div>\n    );\n  }\n}\n","import { Template } from 'flowTypes';\nimport { Asset, REMOVE_VALUE_ASSET } from 'store/flowContext';\n\n/**\n * Sorts all search results by name\n */\nexport const sortByName = (a: Asset, b: Asset): number => {\n  if (a.type === REMOVE_VALUE_ASSET.type) {\n    return -1;\n  }\n\n  if (b.type === REMOVE_VALUE_ASSET.type) {\n    return 1;\n  }\n\n  if (a.type && b.type && a.type !== b.type) {\n    return b.type.localeCompare(a.type);\n  }\n\n  if (a.name && b.name) {\n    return a.name.localeCompare(b.name);\n  }\n  return 0;\n};\n\nexport const hasPendingTranslation = (template: Template) => {\n  return !!template.translations.find(translation => translation.status === 'pending');\n};\n\nexport const hasUseableTranslation = (template: Template) => {\n  return !!template.translations.find(\n    translation => translation.status === 'pending' || translation.status === 'approved'\n  );\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\nimport { postNewAsset, searchAssetMap } from 'external';\nimport * as React from 'react';\nimport { Asset, Assets, AssetType, REMOVE_VALUE_ASSET } from 'store/flowContext';\nimport { AssetEntry } from 'store/nodeEditor';\n\nimport styles from './AssetSelector.module.scss';\nimport i18n from 'config/i18n';\nimport TembaSelect, { TembaSelectStyle } from 'temba/TembaSelect';\nimport { sortByName } from './helpers';\n\nexport interface AssetSelectorProps extends FormElementProps {\n  assets?: Assets;\n  onChange: (selected: Asset[]) => void;\n\n  // a function to exclude assets when matching\n  shouldExclude?: (asset: Asset) => boolean;\n\n  // override how a name is determined\n  getName?: (option: any) => string;\n\n  // should options not in the list be allowed\n  allowArbitrary?: boolean;\n\n  // allow expression entry\n  expressions?: boolean;\n\n  // more options to consider when searching\n  additionalOptions?: any[];\n\n  placeholder?: string;\n  searchable?: boolean;\n\n  // do we give the clearing option (trash)\n  valueClearable?: boolean;\n\n  // do we present an x to clear the form\n  formClearable?: boolean;\n\n  onFilter?: (asset: Asset) => boolean;\n\n  // creation options\n  createPrefix?: string;\n  onAssetCreated?: (asset: Asset) => void;\n  createAssetFromInput?: (input: string) => Asset;\n\n  // supports multiple selection\n  multi?: boolean;\n\n  // overrids default message when no options to show\n  noOptionsMessage?: string;\n\n  style?: TembaSelectStyle;\n\n  // override default sorting function\n  sortFunction?(a: any, b: any): number;\n\n  nameKey?: string;\n  valueKey?: string;\n}\n\ninterface AssetSelectorState {\n  defaultOptions: Asset[];\n  entry: AssetEntry;\n  isLoading: boolean;\n  message?: string;\n}\n\nexport default class AssetSelector extends React.Component<AssetSelectorProps, AssetSelectorState> {\n  private lastCreation: number = 0;\n\n  private options: any[] = [];\n\n  constructor(props: AssetSelectorProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^is/, /^handle/, /^get/]\n    });\n\n    let defaultOptions: Asset[] = [];\n\n    // or it should be a list of local assets from an empty search\n    if (props.assets && !props.assets.endpoint) {\n      defaultOptions = searchAssetMap('', props.assets.items);\n    }\n\n    this.options = this.props.additionalOptions || [];\n    if (this.props.valueClearable) {\n      this.options.push(REMOVE_VALUE_ASSET);\n    }\n\n    // if we don't have an endpoint, populate our options with items\n    if (!this.props.assets.endpoint) {\n      this.options = this.options.concat(\n        Object.keys(this.props.assets.items).map((id: string) => this.props.assets.items[id])\n      );\n    }\n\n    this.state = {\n      defaultOptions,\n      entry: this.props.entry,\n      isLoading: false\n    };\n  }\n\n  public static getDerivedStateFromProps(\n    nextProps: AssetSelectorProps,\n    prevState: AssetSelectorState\n  ): Partial<AssetSelectorState> {\n    // the default options should be true if there is an endpoint\n    let entry = nextProps.entry;\n\n    // if we don't know our entry name, look for it\n    if (prevState.defaultOptions && entry.value && !entry.value.name) {\n      const existing = prevState.defaultOptions.find((asset: Asset) => asset.id === entry.value.id);\n      if (existing) {\n        entry = { value: existing };\n      }\n    }\n\n    return { entry };\n  }\n\n  private handleChanged(selected: any): void {\n    if (selected) {\n      selected = Array.isArray(selected) ? selected : [selected];\n\n      // do we have an asset to create\n      const toCreate = selected.find((option: any) => option.arbitrary);\n      if (toCreate) {\n        // filter it out\n        selected = selected.filter((option: any) => !option.arbitrary);\n        this.handleCreateOption(toCreate.name);\n      } else {\n        this.props.onChange(selected);\n      }\n    } else {\n      this.props.onChange(selected);\n    }\n    this.setState({ message: null });\n  }\n\n  public handleLoadingComplete(): void {\n    this.setState({ isLoading: false });\n  }\n\n  public handleClearMessage(): void {\n    if (this.state.message) {\n      this.setState({ message: null });\n    }\n  }\n\n  public handleCreateOption(input: string): void {\n    // this is a hack due to react-select triggering two creates in a race\n    const now = new Date().getTime();\n    if (now - this.lastCreation < 1000) {\n      return;\n    }\n\n    this.lastCreation = now;\n    // mark us as loading\n    const asset: Asset = this.props.createAssetFromInput(input);\n\n    if (this.props.assets && this.props.assets.endpoint) {\n      this.setState({ isLoading: true, message: null });\n      postNewAsset(this.props.assets, asset)\n        .then((result: Asset) => {\n          this.setState({ isLoading: false });\n          this.props.onAssetCreated(result);\n          // this.props.onChange([...(this.state.entry.value as any)]);\n        })\n        .catch(error => {\n          let suffix = '';\n          if (error.response && error.response.data && error.response.data.non_field_errors) {\n            suffix = ' ' + error.response.data.non_field_errors.join(', ');\n          }\n          this.setState({\n            message: `Couldn't create new ${this.props.assets.type} \"${input}\".${suffix}`,\n            isLoading: false\n          });\n        });\n    } else {\n      this.props.onChange([asset]);\n    }\n  }\n\n  public getName(option: any) {\n    if (this.props.getName) {\n      return this.props.getName(option);\n    }\n  }\n\n  public render(): JSX.Element {\n    const fallbackPlaceholder = i18n.t(\n      'asset_selector.placeholder',\n      'Select existing [[name]] or enter a new one',\n      { name: this.props.name.toLocaleLowerCase(), count: this.props.multi ? 1000 : 1 }\n    );\n\n    return (\n      <FormElement\n        name={this.props.name}\n        entry={this.props.entry}\n        showLabel={this.props.showLabel}\n        helpText={this.props.helpText}\n        __className={styles.ele}\n      >\n        <TembaSelect\n          name={this.props.name}\n          style={this.props.style}\n          onChange={this.handleChanged}\n          nameKey={this.props.nameKey || 'name'}\n          valueKey={\n            this.props.valueKey || (this.props.assets ? this.props.assets.id : undefined) || 'uuid'\n          }\n          getName={this.props.getName}\n          createPrefix={this.props.createPrefix}\n          shouldExclude={this.props.shouldExclude}\n          assets={this.props.assets}\n          placeholder={this.props.placeholder || fallbackPlaceholder}\n          multi={this.props.multi}\n          expressions={this.props.expressions}\n          value={this.state.entry.value}\n          errors={this.state.message ? [this.state.message] : []}\n          searchable={this.props.searchable}\n          cacheKey={this.lastCreation + ''}\n          options={this.options}\n          sortFunction={this.props.sortFunction || sortByName}\n          queryParam={this.props.assets.type === AssetType.Contact ? 'search' : null}\n        />\n      </FormElement>\n    );\n  }\n}\n","import { FlowTypes, FlowTypeVisibility, ONLINE, Operator, Type } from 'config/interfaces';\nimport { FlowEditorConfig } from 'flowTypes';\n\nexport const isOnlineFlowType = (flowType: FlowTypes) => {\n  return !!ONLINE.find((type: FlowTypes) => type === flowType);\n};\n\nexport const filterOperators = (operators: Operator[], config: FlowEditorConfig): Operator[] => {\n  console.log('operators', operators);\n  return filterVisibility(excludeOperators(operators, config), config);\n};\n\nexport const filterTypeConfigs = (typeConfigs: Type[], config: FlowEditorConfig): Type[] => {\n  return filterVisibility(excludeTypes(typeConfigs, config), config);\n};\n\nconst filterVisibility = (items: FlowTypeVisibility[], config: FlowEditorConfig): any[] => {\n  return items.filter((item: FlowTypeVisibility) => {\n    // if we have a filter on our type, don't return it unless its present in our config\n    if (item.filter) {\n      if (!(config.filters || []).find((name: string) => name === item.filter)) {\n        return false;\n      }\n    }\n\n    if (item.visibility === undefined) {\n      return true;\n    }\n\n    return item.visibility.findIndex((ft: FlowTypes) => ft === config.flowType) > -1;\n  });\n};\n\nconst excludeTypes = (items: Type[], config: FlowEditorConfig): any[] => {\n  if (!config.excludeTypes) {\n    return items;\n  }\n  return items.filter((item: Type) => !config.excludeTypes.includes(item.type));\n};\n\nconst excludeOperators = (items: Operator[], config: FlowEditorConfig): any[] => {\n  if (!config.excludeOperators) {\n    return items;\n  }\n  return items.filter((item: Operator) => !config.excludeOperators.includes(item.type));\n};\n","import { fakePropType } from 'config/ConfigProvider';\nimport { filterTypeConfigs } from 'config/helpers';\nimport { Type } from 'config/interfaces';\nimport { configsToDisplay } from 'config/typeConfigs';\nimport * as React from 'react';\nimport i18n from 'config/i18n';\nimport styles from './TypeList.module.scss';\nimport TembaSelect from 'temba/TembaSelect';\n\nexport interface TypeListProps {\n  __className: string;\n  initialType: Type;\n  onChange(config: Type): void;\n}\n\nexport interface TypeListState {\n  config: Type;\n}\n\nexport default class TypeList extends React.PureComponent<TypeListProps, TypeListState> {\n  private typeConfigs: Type[];\n\n  constructor(props: TypeListProps) {\n    super(props);\n\n    this.state = {\n      config: this.props.initialType\n    };\n\n    this.handleChangeType = this.handleChangeType.bind(this);\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleChangeType(config: Type): void {\n    this.setState({ config }, () => this.props.onChange(config));\n  }\n\n  private getTypeConfigs(): Type[] {\n    if (this.typeConfigs === undefined) {\n      this.typeConfigs = filterTypeConfigs(configsToDisplay, this.context.config);\n    }\n    return this.typeConfigs;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={`${this.props.__className} ${styles.type_list}`}>\n        <p>{i18n.t('forms.type_label', 'When a contact arrives at this point in your flow...')}</p>\n        <div>\n          <TembaSelect\n            key=\"type_select\"\n            name=\"type\"\n            onChange={this.handleChangeType}\n            nameKey=\"description\"\n            valueKey=\"type\"\n            value={this.state.config}\n            options={this.getTypeConfigs()}\n            searchable={true}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import * as headerUtils from 'http-headers-validation';\nimport { Asset } from 'store/flowContext';\nimport { FormEntry, ValidationFailure } from 'store/nodeEditor';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport i18n from 'config/i18n';\n\nexport type FormInput =\n  | string\n  | string[]\n  | number\n  | Asset\n  | Asset[]\n  | SelectOption\n  | SelectOption[];\nexport type ValidatorFunc = (\n  name: string,\n  input: FormInput\n) => { failures: ValidationFailure[]; value: FormInput };\n\n// Courtesy of @diegoperini: https://gist.github.com/dperini/729294\n// Expected behavior: https://mathiasbynens.be/demo/url-regex\nconst REGEX_URL = new RegExp(\n  '^' +\n    // protocol identifier\n    '(?:(?:https?|ftp)://)' +\n    // user:pass authentication\n    '(?:\\\\S+(?:u:\\\\S*)?@)?' +\n    '(?:' +\n    // IP address exclusion\n    // private & local networks\n    '(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})' +\n    '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})' +\n    '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})' +\n    // IP address dotted notation octets\n    // excludes loopback network 0.0.0.0\n    // excludes reserved space >= 224.0.0.0\n    // excludes network & broacast addresses\n    // (first & last IP address of each class)\n    '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\n    '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\n    '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\n    '|' +\n    // host name\n    '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)' +\n    // domain name\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*' +\n    // TLD identifier\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))' +\n    // TLD may end with dot\n    '\\\\.?' +\n    ')' +\n    // port number\n    '(?::\\\\d{2,5})?' +\n    // resource path\n    '(?:[/?#]\\\\S*)?' +\n    '$',\n  'i'\n);\n\nconst inputAsString = (input: FormInput): string => {\n  let value = input;\n  if (typeof input === 'string') {\n    return value + '';\n  }\n\n  // if we are an object consider the name to match assets\n  if (input && typeof input === 'object') {\n    value = (input as any).name || undefined;\n  }\n\n  return value ? value + '' : null;\n};\n\nconst fromMaxItems = (max: number): ValidatorFunc => (name: string, input: FormInput) => {\n  if (Array.isArray(input)) {\n    const items = input as string[];\n    if (items.length > max) {\n      return {\n        value: input,\n        failures: [{ message: `${name} cannot have more than ${max} entries` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nconst fromRegex = (regex: RegExp, message: string): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  const value = inputAsString(input);\n  if (value) {\n    if (!regex.test(value)) {\n      return {\n        value: input,\n        failures: [{ message: `${name} ${message}` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const validate = (\n  name: string,\n  input: FormInput,\n  validators: ValidatorFunc[]\n): FormEntry => {\n  let allFailures: ValidationFailure[] = [];\n  let value = input;\n  validators.forEach(validateFunc => {\n    const validation = validateFunc(name, input);\n    value = validation.value;\n    allFailures = allFailures.concat(validation.failures);\n  });\n\n  return { value, validationFailures: allFailures };\n};\n\nexport const Empty: ValidatorFunc = (name: string, input: FormInput) => {\n  const isNotFinished = i18n.t('forms.is_not_finished', 'is not finished');\n\n  if (input) {\n    return { value: input, failures: [{ message: `${name} ${isNotFinished}` }] };\n  }\n\n  if (typeof input === 'string') {\n    if ((input as string).trim().length !== 0) {\n      return {\n        value: input,\n        failures: [{ message: `${name} ${isNotFinished}` }]\n      };\n    }\n  } else if (Array.isArray(input)) {\n    if (input.length !== 0) {\n      return {\n        value: input,\n        failures: [{ message: `${name} ${isNotFinished}` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const Required: ValidatorFunc = (name: string, input: FormInput) => {\n  const isRequired = i18n.t('forms.is_required', 'is required');\n\n  if (!input) {\n    return { value: input, failures: [{ message: `${name} ${isRequired}` }] };\n  }\n\n  if (typeof input === 'string') {\n    if ((input as string).trim().length === 0) {\n      return { value: input, failures: [{ message: `${name} ${isRequired}` }] };\n    }\n  } else if (Array.isArray(input)) {\n    if (input.length === 0) {\n      return {\n        value: input,\n        failures: [{ message: `${name} ${i18n.t('forms.are_required', 'are required')}` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const Regex: ValidatorFunc = (name: string, input: FormInput) => {\n  if (typeof input === 'string') {\n    const inputString = input as string;\n\n    if (inputString.trim().startsWith('@')) {\n      return { failures: [], value: input };\n    }\n\n    try {\n      // tslint:disable-next-line:no-unused-expression\n      new RegExp(inputString);\n    } catch (e) {\n      return {\n        value: input,\n        failures: [\n          {\n            message: `${name} ${i18n.t('forms.is_not_a_valid_regex', 'is not a valid regex')}`\n          }\n        ]\n      };\n    }\n  }\n\n  return { failures: [], value: input };\n};\n\nexport const LessThan = (amount: number, checkName: string): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (typeof input === 'string') {\n    if (parseFloat(input as string) >= amount) {\n      return {\n        value: input,\n        failures: [\n          {\n            message: `${name} ${i18n.t(\n              'forms.must_be_less_than',\n              'must be less than'\n            )} ${checkName}`\n          }\n        ]\n      };\n    }\n\n    return { failures: [], value: input };\n  }\n  return { failures: [], value: input };\n};\n\nexport const MoreThan = (amount: number, checkName: string): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (typeof input === 'string') {\n    if (parseFloat(input as string) <= amount) {\n      return {\n        value: input,\n        failures: [{ message: `${name} must be a more than ${checkName}` }]\n      };\n    }\n\n    return { failures: [], value: input };\n  }\n  return { failures: [], value: input };\n};\n\nexport const shouldRequireIf = (required: boolean): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (required) {\n    return Required(name, input);\n  }\n  return { failures: [], value: input };\n};\n\nexport const validateIf = (func: ValidatorFunc, predicate: boolean): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (predicate) {\n    return func(name, input);\n  }\n  return { failures: [], value: input };\n};\n\nexport const HeaderName: ValidatorFunc = (name: string, input: FormInput) => {\n  if (typeof input === 'string') {\n    if (input.trim().length > 0 && !headerUtils.validateHeaderName(input)) {\n      return { failures: [{ message: 'Invalid header name' }], value: input };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const IsValidIntent = (classifier: Asset): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (typeof input === 'object') {\n    const option = input as SelectOption;\n\n    if (option && classifier && classifier.content) {\n      const exists = !!classifier.content.intents.find((intent: string) => intent === option.value);\n      if (!exists) {\n        return {\n          value: input,\n          failures: [{ message: `${option.value} is not a valid intent for ${classifier.name}` }]\n        };\n      }\n    }\n    return { failures: [], value: input };\n  }\n  return { failures: [], value: input };\n};\n\nexport const MaxOfTenItems = fromMaxItems(10);\nexport const StartIsNonNumeric = fromRegex(/^(?!\\d)/, \"can't start with a number\");\nexport const ValidURL = fromRegex(REGEX_URL, 'is not a valid URL');\nexport const Numeric = fromRegex(/^([-+]?((\\.\\d+)|(\\d+)(\\.\\d+)?)$)/, 'must be a number');\nexport const Alphanumeric = fromRegex(/^[a-z\\d\\-_\\s]+$/i, 'can only have letters and numbers');\nexport const NumOrExp = fromRegex(/^@.*$|^([-+]?((\\.\\d+)|(\\d+)(\\.\\d+)?)$)/, 'must be a number');\n","import { hasErrors } from 'components/flow/actions/helpers';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Type } from 'config/interfaces';\nimport { Scheme } from 'config/typeConfigs';\nimport { AnyAction } from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport { combineReducers } from 'redux';\nimport { LocalizedObject } from 'services/Localization';\nimport ActionTypes, {\n  UpdateNodeEditorSettings,\n  UpdateTypeConfigAction,\n  UpdateUserAddingActionAction\n} from 'store/actionTypes';\nimport Constants from 'store/constants';\nimport { Asset, RenderNode } from 'store/flowContext';\n\n// tslint:disable:no-shadowed-variable\nexport interface ValidationFailure {\n  message: string;\n}\n\nexport interface FormEntry {\n  value: any;\n  validationFailures?: ValidationFailure[];\n}\n\nexport interface SelectOptionEntry extends FormEntry {\n  value: SelectOption;\n}\n\nexport interface NumberEntry extends FormEntry {\n  value: number;\n}\n\nexport interface StringEntry extends FormEntry {\n  value: string;\n}\n\nexport interface SchemeEntry extends FormEntry {\n  value: Scheme;\n}\n\nexport interface StringArrayEntry extends FormEntry {\n  value: string[];\n}\n\nexport interface AssetEntry extends FormEntry {\n  value: Asset;\n}\n\nexport interface AssetArrayEntry extends FormEntry {\n  value: Asset[] | null;\n}\n\nexport interface SelectOptionArrayEntry extends FormEntry {\n  value: SelectOption[] | null;\n}\n\nexport const mergeForm = (\n  form: FormState,\n  toMerge: Partial<FormState>,\n  toRemove: any[] = []\n): FormState => {\n  // TODO: deal with explicit array setting\n  let updated = form || {};\n  // we auto update array items with uuids\n  for (const key of Object.keys(toMerge)) {\n    const entry: any = (toMerge as any)[key];\n    if (Array.isArray(entry)) {\n      for (const item of entry) {\n        // we support objects with uuids or FormEntry's with uuids\n        const isEntry = item.hasOwnProperty('value') && typeof item.value === 'object';\n\n        if ((isEntry && item.value.uuid) || item.uuid) {\n          const existingIdx = (form as any)[key].findIndex((existing: any) => {\n            if (isEntry) {\n              return existing.value.uuid === item.value.uuid;\n            } else {\n              return existing.uuid === item.uuid;\n            }\n          });\n\n          if (existingIdx > -1) {\n            // we found a match, merge us in\n            updated = mutate(updated, {\n              [key]: { $merge: { [existingIdx]: item } }\n            }) as FormState;\n          } else {\n            // couldn't find it, lets push it on\n            updated = mutate(updated, {\n              [key]: { $push: [item] }\n            }) as FormState;\n          }\n        }\n      }\n\n      // remove it from our merge\n      delete (toMerge as any)[key];\n    }\n  }\n\n  // removals can be items in an array\n  for (const remove of toRemove.filter((item: any) => typeof item === 'object')) {\n    for (const key of Object.keys(remove)) {\n      const entry: any = remove[key];\n      if (Array.isArray(entry)) {\n        for (const item of entry) {\n          // we support objects with uuids or FormEntry's with uuids\n          const isEntry = item.hasOwnProperty('value') && typeof item.value === 'object';\n          if ((isEntry && item.value.uuid) || item.uuid) {\n            updated = mutate(updated, {\n              [key]: (items: any) =>\n                items.filter((existing: any) => {\n                  if (isEntry) {\n                    return existing.value.uuid !== item.value.uuid;\n                  } else {\n                    return existing.uuid !== item.uuid;\n                  }\n                })\n            });\n          }\n        }\n      }\n    }\n  }\n\n  const removeKeys = toRemove.filter((item: any) => typeof item === 'string');\n  updated = mutate(updated, {\n    $merge: toMerge,\n    $unset: removeKeys\n  }) as FormState;\n\n  let valid = true;\n  for (const key of Object.keys(form)) {\n    const entry: any = (updated as any)[key];\n    if (Array.isArray(entry)) {\n      for (const item of entry) {\n        if (hasErrors(item)) {\n          valid = false;\n          break;\n        }\n      }\n    } else if (entry && typeof entry === 'object') {\n      if (hasErrors(entry)) {\n        valid = false;\n        break;\n      }\n    }\n  }\n\n  return mutate(updated, { $merge: { valid } }) as FormState;\n};\n\nexport interface FormState {\n  validationFailures?: ValidationFailure[];\n  valid: boolean;\n}\n\nexport interface NodeEditorSettings {\n  originalNode: RenderNode;\n  showAdvanced?: boolean;\n  originalAction?: AnyAction;\n  localizations?: LocalizedObject[];\n}\n\nexport interface NodeEditor {\n  typeConfig: Type | null;\n  userAddingAction: boolean;\n  settings: NodeEditorSettings | null;\n}\n\n// Initial state\nexport const initialState: NodeEditor = {\n  typeConfig: null,\n  userAddingAction: false,\n  settings: null\n};\n\n// Action Creators\nexport const updateTypeConfig = (typeConfig: Type): UpdateTypeConfigAction => ({\n  type: Constants.UPDATE_TYPE_CONFIG,\n  payload: {\n    typeConfig\n  }\n});\n\nexport const updateNodeEditorSettings = (\n  settings: NodeEditorSettings\n): UpdateNodeEditorSettings => ({\n  type: Constants.UPDATE_NODE_EDITOR_SETTINGS,\n  payload: {\n    settings\n  }\n});\n\nexport const updateUserAddingAction = (\n  userAddingAction: boolean\n): UpdateUserAddingActionAction => ({\n  type: Constants.UPDATE_USER_ADDING_ACTION,\n  payload: {\n    userAddingAction\n  }\n});\n\n// Reducers\nexport const typeConfig = (state: Type | null = initialState.typeConfig, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_TYPE_CONFIG:\n      return action.payload!.typeConfig;\n    default:\n      return state;\n  }\n};\n\nexport const userAddingAction = (\n  state: boolean = initialState.userAddingAction,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_USER_ADDING_ACTION:\n      return action.payload!.userAddingAction;\n    default:\n      return state;\n  }\n};\n\nexport const settings = (\n  state: NodeEditorSettings | null = initialState.settings,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_NODE_EDITOR_SETTINGS:\n      return action.payload!.settings;\n    default:\n      return state;\n  }\n};\n\n// Root reducer\nexport default combineReducers({\n  typeConfig,\n  userAddingAction,\n  settings\n});\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { FormState, mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { renderIssues } from '../helpers';\n\nexport interface AddLabelsFormState extends FormState {\n  labels: any;\n}\n\nexport const controlLabelSpecId = 'label';\n\nexport default class AddLabelsForm extends React.PureComponent<\n  ActionFormProps,\n  AddLabelsFormState\n> {\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handleLabelsChanged(this.state.labels.value!, true);\n\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction);\n      this.props.onClose(false);\n    }\n  }\n\n  public handleLabelsChanged(selected: Asset[], submitting: boolean = false): boolean {\n    const updates: Partial<AddLabelsFormState> = {\n      labels: validate(i18n.t('forms.labels', 'Labels'), selected, [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public handleCreateAssetFromInput(input: string): any {\n    return { name: input };\n  }\n\n  public handleLabelCreated(label: Asset): void {\n    // update our store with our new group\n    this.props.addAsset('labels', label);\n\n    this.handleLabelsChanged(this.state.labels.value!.concat(label));\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p data-spec={controlLabelSpecId}>\n          <Trans i18nKey=\"forms.add_labels_summary\">\n            Select the labels to apply to the incoming message.\n          </Trans>\n        </p>\n\n        <AssetSelector\n          name={i18n.t('forms.labels', 'Labels')}\n          placeholder={i18n.t(\n            'enter_to_create_label',\n            'Enter the name of an existing label or create a new one'\n          )}\n          assets={this.props.assetStore.labels}\n          entry={this.state.labels}\n          searchable={true}\n          multi={true}\n          onChange={this.handleLabelsChanged}\n          createPrefix={i18n.t('create_label', 'Create Label') + ': '}\n          createAssetFromInput={this.handleCreateAssetFromInput}\n          onAssetCreated={this.handleLabelCreated}\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { AddLabelsFormState } from 'components/flow/actions/addlabels/AddLabelsForm';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { Types } from 'config/interfaces';\nimport { AddLabels } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): AddLabelsFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.add_input_labels) {\n    const action = settings.originalAction as AddLabels;\n    return {\n      labels: { value: action.labels },\n      valid: true\n    };\n  }\n\n  return {\n    labels: { value: [] },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  formState: AddLabelsFormState\n): AddLabels => {\n  return {\n    type: Types.add_input_labels,\n    labels: formState.labels.value,\n    uuid: getActionUUID(settings, Types.add_input_labels)\n  };\n};\n","import { AddURNFormState } from 'components/flow/actions/addurn/AddURNForm';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Types } from 'config/interfaces';\nimport { Scheme, SCHEMES } from 'config/typeConfigs';\nimport { AddURN } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const getSchemeOptions = (): SelectOption[] => {\n  return SCHEMES.map((scheme: Scheme) => {\n    return schemeToSelectOption(scheme);\n  });\n};\n\nexport const getSchemeObject = (scheme: string): Scheme => {\n  return SCHEMES.find((item: Scheme) => item.scheme === scheme)!;\n};\n\nexport const getSchemeSelectOption = (scheme: string): SelectOption =>\n  schemeToSelectOption(getSchemeObject(scheme));\n\nexport const schemeToSelectOption = (scheme: Scheme): SelectOption => {\n  return { value: scheme.scheme, name: scheme.path };\n};\n\nexport const initializeForm = (settings: NodeEditorSettings): AddURNFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.add_contact_urn) {\n    const { scheme, path } = settings.originalAction as AddURN;\n\n    return {\n      scheme: { value: getSchemeSelectOption(scheme) },\n      path: { value: path },\n      valid: true\n    };\n  }\n\n  return {\n    scheme: { value: getSchemeSelectOption('tel') },\n    path: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (settings: NodeEditorSettings, formState: AddURNFormState): AddURN => {\n  return {\n    type: Types.add_contact_urn,\n    uuid: getActionUUID(settings, Types.add_input_labels),\n    scheme: formState.scheme.value.value,\n    path: formState.path.value\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\nimport * as React from 'react';\nimport { StringEntry } from 'store/nodeEditor';\nimport { createTextInput } from './helpers';\n\nimport styles from './TextInputElement.module.scss';\nexport enum Count {\n  SMS = 'SMS'\n}\n\nexport enum TextInputStyle {\n  small = 'small',\n  normal = 'normal'\n}\n\nexport interface TextInputProps extends FormElementProps {\n  entry?: StringEntry;\n  __className?: string;\n  count?: Count;\n  textarea?: boolean;\n  placeholder?: string;\n  autocomplete?: boolean;\n  focus?: boolean;\n  showInvalid?: boolean;\n  maxLength?: number;\n  counter?: string;\n  style?: TextInputStyle;\n  onChange?: (value: string, name?: string) => void;\n  onBlur?: (event: React.ChangeEvent) => void;\n}\n\nexport default class TextInputElement extends React.Component<TextInputProps> {\n  constructor(props: TextInputProps) {\n    super(props);\n\n    let initial = '';\n    if (this.props.entry && this.props.entry.value) {\n      initial = this.props.entry.value;\n    }\n\n    this.state = {\n      value: initial\n    };\n\n    bindCallbacks(this, {\n      include: [/^on/, /Ref$/, 'setSelection', 'validate', /^has/, /^handle/]\n    });\n  }\n\n  public componentDidMount(): void {\n    // return this.props.focus && this.focusInput();\n  }\n\n  public handleChange({ currentTarget: { value } }: any): void {\n    if (this.props.onChange) {\n      this.props.onChange(value, this.props.name);\n    }\n  }\n\n  public render(): JSX.Element {\n    const charCount: JSX.Element =\n      this.props.count && this.props.count === Count.SMS ? (\n        <temba-charcount text={this.props.entry.value}></temba-charcount>\n      ) : null;\n\n    const optional: any = {};\n    if (this.props.textarea) {\n      optional['textarea'] = true;\n    }\n\n    if (this.props.counter) {\n      optional['counter'] = this.props.counter;\n    }\n\n    return (\n      <FormElement\n        __className={this.props.__className}\n        name={this.props.name}\n        helpText={this.props.helpText}\n        showLabel={this.props.showLabel}\n        // errors={this.state.errors}\n        entry={this.props.entry}\n      >\n        <div className={styles.wrapper + ' ' + styles[this.props.style || TextInputStyle.normal]}>\n          {createTextInput(this.props, this.handleChange, optional)}\n          {charCount}\n        </div>\n      </FormElement>\n    );\n  }\n}\n","import * as React from 'react';\nimport { AddURN } from 'flowTypes';\n\nimport { getSchemeObject } from './helpers';\nimport i18n from 'config/i18n';\nimport { emphasize } from 'utils';\n\nexport const MAX_TO_SHOW = 5;\n\nconst AddURNComp: React.SFC<AddURN> = ({ scheme, path }): JSX.Element => {\n  const schemeObject = getSchemeObject(scheme);\n  const schemeName = schemeObject ? schemeObject.path : scheme;\n  return (\n    <>\n      {i18n.t('add', 'Add')} {schemeName} {emphasize(path)}\n    </>\n  );\n};\n\nexport default AddURNComp;\n","import FormElement, { FormElementProps } from 'components/form/FormElement';\nimport * as React from 'react';\nimport TembaSelect, { TembaSelectStyle } from 'temba/TembaSelect';\nimport { getAllErrorMessages } from 'components/flow/actions/helpers';\n\ninterface SelectElementProps extends FormElementProps {\n  onChange?(value: any, action?: any): void;\n  onMenuOpen?: () => void;\n  onMenuClose?: () => void;\n  options: any;\n\n  style?: TembaSelectStyle;\n  placeholder?: string;\n  clearable?: boolean;\n\n  multi?: boolean;\n  styles?: any;\n\n  nameKey?: string;\n  valueKey?: string;\n\n  disabled?: boolean;\n}\n\nexport interface SelectOption {\n  name: string;\n  value: string;\n}\n\nexport default class SelectElement extends React.Component<SelectElementProps> {\n  public render(): JSX.Element {\n    return (\n      <FormElement name={this.props.name} entry={this.props.entry}>\n        <TembaSelect\n          key={this.props.name + '_select'}\n          name={this.props.name}\n          nameKey={this.props.nameKey}\n          valueKey={this.props.valueKey}\n          placeholder={this.props.placeholder}\n          onChange={this.props.onChange}\n          value={this.props.entry.value}\n          options={this.props.options}\n          searchable={false}\n          errors={getAllErrorMessages(this.props.entry)}\n          hideError={this.props.hideError}\n          style={this.props.style}\n          multi={this.props.multi}\n          disabled={this.props.disabled}\n          clearable={this.props.clearable}\n        ></TembaSelect>\n      </FormElement>\n    );\n  }\n}\n","import * as React from 'react';\nimport { TextInputProps } from './TextInputElement';\n\nexport const createTextInput = (props: TextInputProps, handleChange: any, optional: any) => {\n  return props.autocomplete ? (\n    <temba-completion\n      name={props.name}\n      onInput={handleChange}\n      onBlur={props.onBlur}\n      value={props.entry.value}\n      placeholder={props.placeholder}\n      maxLength={props.maxLength || -1}\n      session\n      {...optional}\n    ></temba-completion>\n  ) : (\n    <temba-textinput\n      name={props.name}\n      onInput={handleChange}\n      onBlur={props.onBlur}\n      value={props.entry.value}\n      placeholder={props.placeholder}\n      maxLength={props.maxLength || -1}\n      {...optional}\n    ></temba-textinput>\n  );\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, mergeForm, SelectOptionEntry, StringEntry } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport styles from './AddURNForm.module.scss';\nimport { getSchemeOptions, initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { renderIssues } from '../helpers';\n\nexport interface AddURNFormState extends FormState {\n  scheme: SelectOptionEntry;\n  path: StringEntry;\n}\n\nexport const controlLabelSpecId = 'label';\n\nexport default class AddURNForm extends React.PureComponent<ActionFormProps, AddURNFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handlePathChanged(this.state.path.value, null, true);\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction);\n      this.props.onClose(false);\n    }\n  }\n\n  public handleSchemeChanged(selected: SelectOption): boolean {\n    const updates: Partial<AddURNFormState> = {\n      scheme: { value: selected }\n    };\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handlePathChanged(value: string, name: string, submitting: boolean = false): boolean {\n    const updates: Partial<AddURNFormState> = {\n      path: validate(i18n.t('forms.urn', 'URN'), value, [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p data-spec={controlLabelSpecId}>\n          <Trans i18nKey=\"forms.add_urn_summary\">\n            Add a new URN to reach the contact such as a phone number.\n          </Trans>\n        </p>\n        <div style={{ display: 'flex', alignItems: 'flex-end' }}>\n          <div className={styles.scheme_selection}>\n            <SelectElement\n              key={'urn_type_select'}\n              name={i18n.t('forms.urn_type', 'URN Type')}\n              entry={this.state.scheme}\n              onChange={this.handleSchemeChanged}\n              options={getSchemeOptions()}\n            />\n          </div>\n          <div className={styles.path}>\n            <TextInputElement\n              name={i18n.t('forms.urn', 'URN')}\n              placeholder=\"Enter the URN value\"\n              entry={this.state.path}\n              onChange={this.handlePathChanged}\n              autocomplete={true}\n            />\n          </div>\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { CallResthook } from 'flowTypes';\n\nconst CallResthookComp: React.SFC<CallResthook> = ({ resthook }): JSX.Element => (\n  <div>{resthook}</div>\n);\n\nexport default CallResthookComp;\n","import * as React from 'react';\nimport { CallWebhook } from 'flowTypes';\nimport { ellipsize } from 'utils';\n\nconst CallWebhookComp: React.SFC<CallWebhook> = ({ url }): JSX.Element => (\n  <div>{ellipsize(url, 150)}</div>\n);\n\nexport default CallWebhookComp;\n","import { Group } from 'flowTypes';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { FormState } from 'store/nodeEditor';\n\nexport const labelSpecId = 'label';\n\nexport interface ChangeGroupsFormState extends FormState {\n  groups: any;\n  removeAll?: boolean;\n}\n\nexport const excludeDynamicGroups = (group: any): boolean => {\n  return !!group.query;\n};\n\nexport const mapGroupsToAssets = (groups: Group[]): Asset[] => {\n  return groups.map(({ name, uuid, name_match }) => {\n    if (name_match) {\n      return { name: name_match, id: name_match, type: AssetType.GroupNameMatch };\n    }\n    return { name, id: uuid, type: AssetType.Group };\n  });\n};\n\nexport const mapAssetsToGroups = (searchResults: Asset[] | null): Group[] => {\n  if (!searchResults) {\n    return [];\n  }\n\n  const groups = searchResults.map(result => {\n    if (!result.id || result.id === result.name) {\n      return {\n        name_match: result.name\n      };\n    }\n    return {\n      uuid: result.id,\n      name: result.name\n    };\n  });\n\n  return groups;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { ChangeGroups } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { ChangeGroupsFormState, excludeDynamicGroups, labelSpecId } from '../helpers';\nimport { initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { renderIssues } from '../../helpers';\n\nexport default class AddGroupsForm extends React.Component<ActionFormProps, ChangeGroupsFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings) as ChangeGroupsFormState;\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handleGroupsChanged(this.state.groups.value!, true);\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction as ChangeGroups);\n      this.props.onClose(false);\n    }\n  }\n\n  public handleGroupsChanged(groups: any[], submitting: boolean = false): boolean {\n    const updates: Partial<ChangeGroupsFormState> = {\n      groups: validate(i18n.t('forms.collections', 'Collections'), groups, [\n        shouldRequireIf(submitting)\n      ])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleGroupAdded(group: Asset): void {\n    // update our store with our new group\n    this.props.addAsset('groups', group);\n\n    // try to add the group\n    this.handleGroupsChanged((this.state.groups.value || []).concat(group), false);\n  }\n\n  public handleCreateAssetFromInput(input: string): any {\n    return { name: input };\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p data-spec={labelSpecId}>\n          <Trans i18nKey=\"forms.add_groups_summary\">\n            Select the collections to add the contact to.\n          </Trans>\n        </p>\n\n        <AssetSelector\n          name={i18n.t('forms.groups', 'Collections')}\n          multi={true}\n          noOptionsMessage={i18n.t(\n            'enter_to_create_group',\n            'Enter a name to create a new collection'\n          )}\n          assets={this.props.assetStore.groups}\n          entry={this.state.groups}\n          onChange={this.handleGroupsChanged}\n          searchable={true}\n          shouldExclude={excludeDynamicGroups}\n          placeholder={i18n.t('select_groups', 'Select Collection')}\n          expressions={true}\n          // Groups can be created on the fly\n          createPrefix={i18n.t('create_group', 'Create Collection') + ': '}\n          createAssetFromInput={this.handleCreateAssetFromInput}\n          onAssetCreated={this.handleGroupAdded}\n        />\n\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { ChangeGroupsFormState } from 'components/flow/actions/changegroups/helpers';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { Types } from 'config/interfaces';\nimport { ChangeGroups, Group } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): ChangeGroupsFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.add_contact_groups) {\n    const action = settings.originalAction as ChangeGroups;\n    return {\n      groups: {\n        value: action.groups.map((group: Group) => {\n          if (group.name_match) {\n            return { name: group.name_match, expression: true };\n          }\n          return group;\n        })\n      },\n      valid: true\n    };\n  }\n\n  return {\n    groups: { value: null },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  nodeSettings: NodeEditorSettings,\n  state: ChangeGroupsFormState\n): ChangeGroups => {\n  return {\n    type: Types.add_contact_groups,\n    groups: state.groups.value.map((group: any) => {\n      if (group.expression) {\n        return { name_match: group.name };\n      }\n      return group;\n    }),\n    uuid: getActionUUID(nodeSettings, Types.add_contact_groups)\n  };\n};\n","import { renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { ChangeGroups, Endpoints } from 'flowTypes';\nimport * as React from 'react';\nimport { AssetType } from 'store/flowContext';\n\nexport const removeAllSpecId = 'remove_from_all';\nexport const contentSpecId = 'content';\nexport const removeAllText = 'Remove from all collections';\n\nexport const MAX_TO_SHOW = 5;\nexport const getRemoveAllMarkup = (\n  key = removeAllSpecId,\n  specId = removeAllSpecId,\n  text = removeAllText\n) => (\n  <div key={key} data-spec={specId}>\n    {text}\n  </div>\n);\n\nexport const getContentMarkup = (\n  { type, groups }: ChangeGroups,\n  endpoints?: Endpoints\n): JSX.Element[] => {\n  const content = [];\n\n  if (type === Types.remove_contact_groups && (!groups || !groups.length)) {\n    content.push(getRemoveAllMarkup());\n  } else {\n    return renderAssetList(\n      groups.map(group => {\n        if (group.name_match) {\n          return {\n            id: group.name_match,\n            name: group.name_match,\n            type: AssetType.GroupNameMatch\n          };\n        }\n        return {\n          id: group.uuid,\n          name: group.name,\n          type: AssetType.Group\n        };\n      }),\n      MAX_TO_SHOW,\n      endpoints!\n    );\n  }\n\n  return content;\n};\n\nexport const getChangeGroupsMarkup = (\n  action: ChangeGroups,\n  endpoints?: Endpoints,\n  specId = contentSpecId\n) => <div data-spec={specId}>{getContentMarkup(action, endpoints)}</div>;\n\nconst ChangeGroupsComp: React.SFC<ChangeGroups> = (props: any, context: any): JSX.Element => {\n  return getChangeGroupsMarkup(props, context.config.endpoints);\n};\n\nChangeGroupsComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default ChangeGroupsComp;\n","import classNames from 'classnames/bind';\nimport { FormElementProps } from 'components/form/FormElement';\nimport * as React from 'react';\nimport { isRealValue, renderIf } from 'utils';\n\nimport styles from './CheckboxElement.module.scss';\n\nexport interface CheckboxElementProps extends FormElementProps {\n  checked: boolean;\n  title?: string;\n  description?: string;\n  labelClassName?: string;\n  checkboxClassName?: string;\n  onChange?(checked: boolean): void;\n}\n\ninterface CheckboxState {\n  checked: boolean;\n}\n\nexport const boxIco = 'fe-square';\nexport const checkedBoxIco = 'fe-check-square';\n\nexport const checkboxSpecId = 'checkbox';\nexport const titleSpecId = 'title';\nexport const descSpecId = 'description';\n\nconst cx: any = classNames.bind(styles);\n\nexport default class CheckboxElement extends React.Component<CheckboxElementProps, CheckboxState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      checked: this.props.checked\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  private handleChange(event: React.MouseEvent): void {\n    // this null check only for testing, remove after switching to RTL\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    this.setState({ checked: !this.state.checked }, () => {\n      if (this.props.onChange) {\n        this.props.onChange(this.state.checked);\n      }\n    });\n  }\n\n  /* istanbul ignore next */\n  public validate(): boolean {\n    return true;\n  }\n\n  public render(): JSX.Element {\n    const checkboxIcon = this.state.checked ? checkedBoxIco : boxIco;\n    return (\n      <label className={cx(styles.label, this.props.labelClassName)} onClick={this.handleChange}>\n        <span\n          data-spec={checkboxSpecId}\n          className={cx(checkboxIcon, this.props.checkboxClassName)}\n        />\n        {renderIf(isRealValue(this.props.title))(\n          <div data-spec={titleSpecId} className={styles.title}>\n            {this.props.title}\n          </div>\n        )}\n        {renderIf(isRealValue(this.props.description))(\n          <div\n            data-spec={descSpecId}\n            className={this.props.title ? styles.description : styles.description_solo}\n          >\n            {this.props.description}\n          </div>\n        )}\n      </label>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport {\n  ChangeGroupsFormState,\n  excludeDynamicGroups\n} from 'components/flow/actions/changegroups/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { ChangeGroups } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\nimport { renderIf } from 'utils';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport styles from './RemoveGroupsForm.module.scss';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../../helpers';\n\nexport const LABEL = i18n.t(\n  'forms.remove_groups_summary',\n  'Select the collections to remove the contact from.'\n);\nexport const NOT_FOUND = i18n.t('errors.group_not_found', 'Enter the name of an existing group');\nexport const PLACEHOLDER = i18n.t(\n  'forms.remove_groups_placeholder',\n  'Enter the name of an existing collection'\n);\nexport const REMOVE_FROM_ALL = i18n.t('forms.remove_from_all_label', 'Remove from all');\nexport const REMOVE_FROM_ALL_DESC = i18n.t(\n  'forms.remove_from_all_summary',\n  \"Remove the active contact from all collection they're a member of.\"\n);\n\nexport const labelSpecId = 'label';\nexport const fieldContainerSpecId = 'field-container';\n\nexport default class RemoveGroupsForm extends React.Component<\n  ActionFormProps,\n  ChangeGroupsFormState\n> {\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings) as ChangeGroupsFormState;\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handleGroupsChanged(this.state.groups.value!, true);\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction as ChangeGroups);\n      this.props.onClose(false);\n    }\n  }\n\n  private handleUpdate(\n    keys: { groups?: Asset[]; removeAll?: boolean },\n    submitting: boolean = false\n  ): boolean {\n    const updates: Partial<ChangeGroupsFormState> = {};\n\n    // we only require groups if removeAll isn't checked\n    let groupValidators = this.state.removeAll ? [] : [shouldRequireIf(submitting)];\n\n    if (keys.hasOwnProperty('removeAll')) {\n      updates.removeAll = keys.removeAll;\n      if (keys.removeAll) {\n        groupValidators = [];\n      }\n    }\n\n    if (keys.hasOwnProperty('groups')) {\n      updates.groups = validate(\n        i18n.t('forms.groups', 'Collections'),\n        keys.groups!,\n        groupValidators\n      );\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleGroupsChanged(groups: Asset[], submitting: boolean = false): boolean {\n    return this.handleUpdate({ groups }, submitting);\n  }\n\n  public handleRemoveAllUpdate(removeAll: boolean): boolean {\n    return this.handleUpdate({ removeAll });\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n\n        {renderIf(!this.state.removeAll)(\n          <div>\n            <p data-spec={labelSpecId}>{LABEL}</p>\n            <AssetSelector\n              name={i18n.t('forms.groups', 'Collections')}\n              placeholder={i18n.t('select_groups', 'Select Collections')}\n              assets={this.props.assetStore.groups}\n              entry={this.state.groups}\n              shouldExclude={excludeDynamicGroups}\n              searchable={true}\n              onChange={this.handleGroupsChanged}\n              multi={true}\n            />\n          </div>\n        )}\n\n        <CheckboxElement\n          name={REMOVE_FROM_ALL}\n          title={REMOVE_FROM_ALL}\n          labelClassName={this.state.removeAll ? '' : styles.checkbox}\n          checked={this.state.removeAll!}\n          description={REMOVE_FROM_ALL_DESC}\n          onChange={this.handleRemoveAllUpdate}\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { ChangeGroupsFormState } from 'components/flow/actions/changegroups/helpers';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { Types } from 'config/interfaces';\nimport { RemoveFromGroups } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): ChangeGroupsFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.remove_contact_groups) {\n    const action = settings.originalAction as RemoveFromGroups;\n\n    const groups = action.groups || [];\n    return {\n      groups: { value: groups },\n      removeAll: groups.length === 0 || action.all_groups,\n      valid: true\n    };\n  }\n\n  return {\n    groups: { value: null },\n    removeAll: false,\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: ChangeGroupsFormState\n): RemoveFromGroups => {\n  return {\n    type: Types.remove_contact_groups,\n    groups: state.removeAll\n      ? []\n      : state.groups.value.map((group: any) => {\n          return { uuid: group.uuid, name: group.name };\n        }),\n    all_groups: !!state.removeAll,\n    uuid: getActionUUID(settings, Types.remove_contact_groups)\n  };\n};\n","import { Type, Types } from 'config/interfaces';\nimport { getType, getTypeConfig } from 'config/typeConfigs';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { Asset } from 'store/flowContext';\nimport { FlowIssue } from 'flowTypes';\n\nexport const determineTypeConfig = (nodeSettings: NodeEditorSettings): Type => {\n  const renderNode = nodeSettings.originalNode;\n  const node = renderNode && renderNode.node;\n\n  if (nodeSettings.originalAction && nodeSettings.originalAction.type) {\n    return getTypeConfig(nodeSettings.originalAction.type);\n  } else if (node && node.actions && node.actions.length > 0) {\n    return getTypeConfig(node.actions[node.actions.length - 1].type);\n  } else {\n    try {\n      const type = getType(renderNode);\n      const config = getTypeConfig(type);\n      if (config.type !== Types.missing) {\n        return config;\n      }\n      // tslint:disable-next-line:no-empty\n    } catch (Error) {}\n  }\n\n  // Account for ghost nodes\n  if (node && node.router) {\n    return getTypeConfig(node.router.type);\n  }\n\n  throw new Error(`Couldn't determine type config for: ${node.uuid}`);\n};\n\nexport const hasIssues = (issues: FlowIssue[], translating: boolean, language: Asset): boolean => {\n  if (!issues || issues.length === 0) {\n    return false;\n  }\n\n  if (!translating) {\n    return !!issues.find((issue: FlowIssue) => !issue.language);\n  } else {\n    return !!issues.find((issue: FlowIssue) => issue.language === language.id);\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport styles from 'components/flow/actions/action/Action.module.scss';\nimport { initializeLocalizedKeyForm } from 'components/flow/actions/localization/helpers';\nimport { determineTypeConfig } from 'components/flow/helpers';\nimport { LocalizationFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../helpers';\n\nexport interface KeyLocalizationFormState extends FormState {\n  keyValues: { [key: string]: StringEntry };\n}\n\nexport default class KeyLocalizationForm extends React.Component<\n  LocalizationFormProps,\n  KeyLocalizationFormState\n> {\n  constructor(props: LocalizationFormProps) {\n    super(props);\n    this.state = initializeLocalizedKeyForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public handleKeyUpdate(text: string, name: string): boolean {\n    const keyValues = { ...this.state.keyValues };\n    keyValues[name.toLowerCase()] = { value: text };\n    this.setState({ keyValues });\n    return true;\n  }\n\n  private handleSave(): void {\n    const translations: { [key: string]: string } = {};\n\n    Object.keys(this.state.keyValues).forEach((key: string) => {\n      const value = this.state.keyValues[key].value;\n      if (value) {\n        translations[key] = value;\n      } else {\n        delete translations[key];\n      }\n    });\n\n    this.props.updateLocalizations(this.props.language.id, [\n      {\n        uuid: this.props.nodeSettings.originalAction!.uuid,\n        translations\n      }\n    ]);\n\n    // notify our modal we are done\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n    const tabs: Tab[] = [];\n\n    let base: JSX.Element;\n\n    const translation = i18n.t('forms.translation', 'Translation');\n\n    typeConfig.localizeableKeys.forEach((key: string) => {\n      const name = key[0].toUpperCase() + key.slice(1);\n\n      const form = (\n        <div key={`localize_form_${key}`}>\n          <div data-spec=\"translation-container\">\n            <div data-spec=\"text-to-translate\" className={styles.translate_from}>\n              {(this.props.nodeSettings.originalAction as any)[key]}\n            </div>\n          </div>\n          <TextInputElement\n            name={name}\n            showLabel={false}\n            onChange={this.handleKeyUpdate}\n            entry={this.state.keyValues[key]}\n            placeholder={`${this.props.language.name} ${translation}`}\n            autocomplete={true}\n            focus={true}\n            textarea={true}\n          />\n        </div>\n      );\n\n      if (!base) {\n        base = form;\n      } else {\n        const translation = i18n.t('forms.translation', 'Translation');\n        tabs.push({\n          name: name + ' ' + translation,\n          body: form,\n          checked: !!this.state.keyValues[key].value\n        });\n      }\n    });\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        {base}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { KeyLocalizationFormState } from 'components/flow/actions/localization/KeyLocalizationForm';\nimport { MsgLocalizationFormState } from 'components/flow/actions/localization/MsgLocalizationForm';\nimport { Types } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { SendMsg, MsgTemplating, SayMsg } from 'flowTypes';\n\nexport const initializeLocalizedKeyForm = (\n  settings: NodeEditorSettings\n): KeyLocalizationFormState => {\n  const keyValues: { [key: string]: StringEntry } = {};\n  const localized = settings.localizations[0];\n  const action = localized.getObject() as any;\n\n  const keys = settings.originalAction\n    ? getTypeConfig(settings.originalAction.type).localizeableKeys || []\n    : [];\n  keys.forEach((key: string) => {\n    keyValues[key] = { value: key in localized.localizedKeys ? action[key] : '' };\n  });\n\n  return {\n    keyValues,\n    valid: true\n  };\n};\n\nexport const initializeLocalizedForm = (settings: NodeEditorSettings): MsgLocalizationFormState => {\n  const state: MsgLocalizationFormState = {\n    message: { value: '' },\n    quickReplies: { value: [] },\n    templateVariables: [],\n    templating: null,\n    attachments: [],\n    audio: { value: null },\n    valid: true\n  };\n\n  // check if our form should use a localized action\n  if (\n    settings.originalAction &&\n    (settings.originalAction.type === Types.send_msg ||\n      settings.originalAction.type === Types.say_msg) &&\n    settings.localizations &&\n    settings.localizations.length > 0\n  ) {\n    if (settings.originalAction && (settings.originalAction as any).templating) {\n      state.templating = (settings.originalAction as any).templating;\n      state.templateVariables = state.templating.variables.map((value: string) => {\n        return {\n          value: ''\n        };\n      });\n    }\n\n    for (const localized of settings.localizations) {\n      if (localized.isLocalized()) {\n        const localizedObject = localized.getObject() as any;\n\n        if (localizedObject.text) {\n          const action = localizedObject as (SendMsg & SayMsg);\n          state.message.value = 'text' in localized.localizedKeys ? action.text : '';\n          state.audio.value = 'audio_url' in localized.localizedKeys ? action.audio_url : null;\n          state.quickReplies.value =\n            'quick_replies' in localized.localizedKeys ? action.quick_replies || [] : [];\n          state.valid = true;\n        }\n\n        if (localizedObject.attachments) {\n          const attachments: any = [];\n          (localizedObject.attachments || []).forEach((attachmentString: string): void => {\n            const splitPoint = attachmentString.indexOf(':');\n\n            const type = attachmentString.substring(0, splitPoint);\n            const attachment = {\n              type,\n              url: attachmentString.substring(splitPoint + 1)\n            };\n\n            attachments.push(attachment);\n          });\n          state.attachments = attachments;\n        }\n\n        if (localizedObject.variables) {\n          const templating = localizedObject as MsgTemplating;\n          state.templateVariables = templating.variables.map((value: string) => {\n            return {\n              value: 'variables' in localized.localizedKeys ? value : ''\n            };\n          });\n          state.valid = true;\n        }\n      }\n    }\n  }\n  return state;\n};\n","import * as React from 'react';\n\nimport styles from './Pill.module.scss';\n\nexport interface PillProps {\n  advanced?: boolean;\n  onClick?(event: React.MouseEvent<HTMLDivElement>): void;\n  text: string;\n  maxLength?: number;\n  icon?: string;\n  large?: boolean;\n  style?: React.CSSProperties;\n}\n\nconst Pill: React.SFC<PillProps> = (props: PillProps): JSX.Element => {\n  let text = props.text;\n\n  if (props.text.startsWith('@')) {\n    text = '@(exp)';\n  } else if (props.maxLength && text.length > props.maxLength) {\n    text = props.text.substring(0, props.maxLength) + '...';\n  }\n\n  const pillStyles = [styles.pill];\n\n  if (props.large) {\n    pillStyles.push(styles.large);\n  }\n\n  if (props.onClick) {\n    pillStyles.push(styles.clickable);\n  }\n\n  return (\n    <div\n      style={props.style}\n      data-advanced={props.advanced}\n      onClick={props.onClick}\n      className={pillStyles.join(' ')}\n    >\n      {text}\n      {props.icon ? (\n        <span data-advanced={props.advanced} className={styles.icon + ' ' + props.icon} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Pill;\n","import { react as bindCallbacks } from 'auto-bind';\nimport axios from 'axios';\nimport * as React from 'react';\nimport Button, { ButtonTypes } from 'components/button/Button';\nimport { getCookie } from 'external';\n\nexport interface UploadButtonState {}\n\nexport interface UploadButtonProps {\n  icon: string;\n  uploadText: string;\n  removeText: string;\n  url: string;\n  endpoint: string;\n  onUploadChanged: (url: string) => void;\n}\n\nexport default class UploadButton extends React.Component<UploadButtonProps, UploadButtonState> {\n  private filePicker: any;\n\n  constructor(props: UploadButtonProps) {\n    super(props);\n    this.state = {};\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleRemoveUpload(): void {\n    this.props.onUploadChanged(null);\n  }\n\n  private handleUploadFile(files: FileList): void {\n    const data = new FormData();\n    data.append('file', files[0]);\n\n    // if we have a csrf in our cookie, pass it along as a header\n    const csrf = getCookie('csrftoken');\n    const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n\n    axios\n      .post(this.props.endpoint, data, { headers })\n      .then(response => {\n        this.props.onUploadChanged(response.data.url);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  public render(): JSX.Element {\n    return (\n      <>\n        <input\n          style={{\n            display: 'none'\n          }}\n          ref={ele => {\n            this.filePicker = ele;\n          }}\n          type=\"file\"\n          onChange={e => this.handleUploadFile(e.target.files)}\n        />\n        {this.props.url ? (\n          <Button\n            iconName=\"fe-trash\"\n            name={this.props.removeText}\n            topSpacing={true}\n            onClick={this.handleRemoveUpload}\n            type={ButtonTypes.tertiary}\n          />\n        ) : (\n          <Button\n            iconName={this.props.icon}\n            name={this.props.uploadText}\n            topSpacing={true}\n            onClick={() => {\n              this.filePicker.click();\n            }}\n            type={ButtonTypes.tertiary}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport styles from 'components/flow/actions/action/Action.module.scss';\nimport { determineTypeConfig } from 'components/flow/helpers';\nimport TextInputElement, { TextInputStyle } from 'components/form/textinput/TextInputElement';\nimport { LocalizationFormProps } from 'components/flow/props';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport MultiChoiceInput from 'components/form/multichoice/MultiChoice';\nimport Pill from 'components/pill/Pill';\nimport UploadButton from 'components/uploadbutton/UploadButton';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { SendMsg, MsgTemplating } from 'flowTypes';\nimport * as React from 'react';\nimport { TembaSelectStyle } from 'temba/TembaSelect';\nimport mutate from 'immutability-helper';\nimport { FormState, mergeForm, StringArrayEntry, StringEntry } from 'store/nodeEditor';\nimport { MaxOfTenItems, validate } from 'store/validators';\n\nimport { initializeLocalizedForm } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { createUUID, range } from 'utils';\nimport { renderIssues } from '../helpers';\n\nconst MAX_ATTACHMENTS = 1;\n\nconst TYPE_OPTIONS: SelectOption[] = [\n  { value: 'image', name: i18n.t('forms.image_url', 'Image URL') },\n  { value: 'audio', name: i18n.t('forms.audio_url', 'Audio URL') },\n  { value: 'video', name: i18n.t('forms.video_url', 'Video URL') },\n  { value: 'application', name: i18n.t('forms.pdf_url', 'PDF Document URL') }\n];\n\nconst getAttachmentTypeOption = (type: string): SelectOption => {\n  return TYPE_OPTIONS.find((option: SelectOption) => option.value === type);\n};\n\nexport interface Attachment {\n  type: string;\n  url: string;\n  uploaded?: boolean;\n}\n\nexport interface MsgLocalizationFormState extends FormState {\n  message: StringEntry;\n  quickReplies: StringArrayEntry;\n  audio: StringEntry;\n  templateVariables: StringEntry[];\n  templating: MsgTemplating;\n  attachments: Attachment[];\n}\n\nexport default class MsgLocalizationForm extends React.Component<\n  LocalizationFormProps,\n  MsgLocalizationFormState\n> {\n  constructor(props: LocalizationFormProps) {\n    super(props);\n\n    this.state = initializeLocalizedForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public handleMessageUpdate(text: string): boolean {\n    return this.handleUpdate({ text });\n  }\n\n  public handleQuickRepliesUpdate(quickReplies: string[]): boolean {\n    return this.handleUpdate({ quickReplies });\n  }\n\n  private handleAudioChanged(url: string): void {\n    this.handleUpdate({ audio: url });\n  }\n\n  private handleUpdate(keys: {\n    text?: string;\n    sendAll?: boolean;\n    quickReplies?: string[];\n    audio?: string;\n  }): boolean {\n    const updates: Partial<MsgLocalizationFormState> = {};\n\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate(i18n.t('forms.message', 'Message'), keys.text!, []);\n    }\n\n    if (keys.hasOwnProperty('quickReplies')) {\n      updates.quickReplies = validate(\n        i18n.t('forms.quick_replies', 'Quick Replies'),\n        keys.quickReplies!,\n        [MaxOfTenItems]\n      );\n    }\n\n    if (keys.hasOwnProperty('audio')) {\n      updates.audio! = { value: keys.audio! };\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    const { message: text, quickReplies, audio, templateVariables, attachments } = this.state;\n\n    // make sure we are valid for saving, only quick replies can be invalid\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n\n    const valid =\n      typeConfig.localizeableKeys!.indexOf('quick_replies') > -1\n        ? this.handleQuickRepliesUpdate(this.state.quickReplies.value)\n        : true;\n\n    if (valid) {\n      const translations: any = {};\n      if (text.value) {\n        translations.text = text.value;\n      }\n\n      if (quickReplies.value && quickReplies.value.length > 0) {\n        translations.quick_replies = quickReplies.value;\n      }\n\n      if (attachments.length > 0) {\n        translations.attachments = attachments\n          .filter((attachment: Attachment) => attachment.url.trim().length > 0)\n          .map((attachment: Attachment) => `${attachment.type}:${attachment.url}`);\n      }\n      if (audio.value) {\n        translations.audio_url = audio.value;\n      }\n\n      const localizations = [\n        {\n          uuid: this.props.nodeSettings.originalAction!.uuid,\n          translations\n        }\n      ];\n\n      // if we have template variables, they show up on their own key\n      const hasTemplateVariables = templateVariables.find(\n        (entry: StringEntry) => entry.value.length > 0\n      );\n      if (hasTemplateVariables) {\n        localizations.push({\n          uuid: this.state.templating.uuid,\n          translations: { variables: templateVariables.map((entry: StringEntry) => entry.value) }\n        });\n      }\n\n      this.props.updateLocalizations(this.props.language.id, localizations);\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  public handleAttachmentRemoved(index: number): void {\n    // we found a match, merge us in\n    const updated: any = mutate(this.state.attachments, {\n      $splice: [[index, 1]]\n    });\n    this.setState({ attachments: updated });\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleAddQuickReply(newQuickReply: string): boolean {\n    const newReplies = [...this.state.quickReplies.value];\n    if (newReplies.length >= 10) {\n      return false;\n    }\n\n    // we don't allow two quick replies with the same name\n    const isNew = !newReplies.find(\n      (reply: string) => reply.toLowerCase() === newQuickReply.toLowerCase()\n    );\n\n    if (isNew) {\n      newReplies.push(newQuickReply);\n      this.setState({\n        quickReplies: { value: newReplies }\n      });\n      return true;\n    }\n\n    return false;\n  }\n\n  private handleQuickReplyChanged(quickReplies: string[]): void {\n    this.handleUpdate({ quickReplies });\n  }\n\n  private handleTemplateVariableChanged(updatedText: string, num: number): void {\n    const entry = validate(`Variable ${num + 1}`, updatedText, []);\n\n    const templateVariables = mutate(this.state.templateVariables, {\n      $merge: { [num]: entry }\n    }) as StringEntry[];\n\n    this.setState({ templateVariables });\n  }\n\n  private renderAttachment(index: number, attachment: Attachment): JSX.Element {\n    let attachments: any = this.state.attachments;\n    return (\n      <div\n        className={styles.url_attachment}\n        key={index > -1 ? 'url_attachment_' + index : createUUID()}\n      >\n        <div className={styles.type_choice}>\n          <SelectElement\n            key={'attachment_type_' + index}\n            style={TembaSelectStyle.small}\n            name={i18n.t('forms.type_options', 'Type Options')}\n            placeholder=\"Add Attachment\"\n            entry={{\n              value: index > -1 ? getAttachmentTypeOption(attachment.type) : null\n            }}\n            onChange={(option: any) => {\n              if (index === -1) {\n                attachments = mutate(attachments, {\n                  $push: [{ type: option.value, url: '' }]\n                });\n              } else {\n                attachments = mutate(attachments, {\n                  [index]: {\n                    $set: { type: option.value, url: attachment.url }\n                  }\n                });\n              }\n              this.setState({ attachments });\n            }}\n            options={TYPE_OPTIONS}\n          />\n        </div>\n        {index > -1 ? (\n          <>\n            <div className={styles.url}>\n              <TextInputElement\n                placeholder=\"URL\"\n                name={i18n.t('forms.url', 'URL')}\n                style={TextInputStyle.small}\n                onChange={(value: string) => {\n                  attachments = mutate(attachments, {\n                    [index]: { $set: { type: attachment.type, url: value } }\n                  });\n                  this.setState({ attachments });\n                }}\n                entry={{ value: attachment.url }}\n                autocomplete={true}\n              />\n            </div>\n            <div className={styles.remove}>\n              <Pill\n                icon=\"fe-x\"\n                text=\" Remove\"\n                large={true}\n                onClick={() => {\n                  this.handleAttachmentRemoved(index);\n                }}\n              />\n            </div>\n          </>\n        ) : null}\n      </div>\n    );\n  }\n\n  private renderAttachments(): JSX.Element {\n    const attachments = this.state.attachments.map((attachment, index: number) =>\n      this.renderAttachment(index, attachment)\n    );\n\n    const emptyOption =\n      this.state.attachments.length < MAX_ATTACHMENTS\n        ? this.renderAttachment(-1, { url: '', type: '' })\n        : null;\n    return (\n      <>\n        <p>\n          <Trans i18nKey=\"forms.add_attachments\" values={{ language: this.props.language.name }}>\n            Add an attachment for this message in [[language]] language\n          </Trans>\n        </p>\n        {attachments}\n        {emptyOption}\n      </>\n    );\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n    const tabs: Tab[] = [];\n\n    if (typeConfig.localizeableKeys.indexOf('attachments') > -1) {\n      tabs.push({\n        name: 'Attachments',\n        body: this.renderAttachments(),\n        checked: this.state.attachments.length > 0\n      });\n    }\n    if (\n      this.state.templating &&\n      typeConfig.localizeableKeys!.indexOf('templating.variables') > -1\n    ) {\n      const hasLocalizedValue = !!this.state.templateVariables.find(\n        (entry: StringEntry) => entry.value.length > 0\n      );\n\n      const variable = i18n.t('forms.variable', 'Variable');\n\n      tabs.push({\n        name: 'WhatsApp',\n        body: (\n          <>\n            <p>\n              {i18n.t(\n                'forms.whatsapp_warning',\n                'Sending messages over a WhatsApp channel requires that a template be used if you have not received a message from a contact in the last 24 hours. Setting a template to use over WhatsApp is especially important for the first message in your flow.'\n              )}\n            </p>\n            {this.state.templating && this.state.templating.variables.length > 0 ? (\n              <>\n                {range(0, this.state.templating.variables.length).map((num: number) => {\n                  const entry = this.state.templateVariables[num] || { value: '' };\n                  return (\n                    <div className={styles.variable} key={'tr_arg_' + num}>\n                      <TextInputElement\n                        name={`${i18n.t('forms.variable', 'Variable')} ${num + 1}`}\n                        showLabel={false}\n                        placeholder={`${this.props.language.name} ${variable} ${num + 1}`}\n                        onChange={(updatedText: string) => {\n                          this.handleTemplateVariableChanged(updatedText, num);\n                        }}\n                        entry={entry}\n                        autocomplete={true}\n                      />\n                    </div>\n                  );\n                })}\n              </>\n            ) : null}\n          </>\n        ),\n        checked: hasLocalizedValue\n      });\n    }\n\n    // if (typeConfig.localizeableKeys!.indexOf('quick_replies') > -1) {\n    //   tabs.push({\n    //     name: 'Quick Replies',\n    //     body: (\n    //       <>\n    //         <MultiChoiceInput\n    //           name={i18n.t('forms.quick_reply', 'Quick Reply')}\n    //           helpText={\n    //             <Trans\n    //               i18nKey=\"forms.localized_quick_replies\"\n    //               values={{ language: this.props.language.name }}\n    //             >\n    //               Add a new [[language]] Quick Reply and press enter.\n    //             </Trans>\n    //           }\n    //           items={this.state.quickReplies}\n    //           onChange={this.handleQuickReplyChanged}\n    //         />\n    //       </>\n    //     ),\n    //     checked: this.state.quickReplies.value.length > 0\n    //   });\n    // }\n\n    let audioButton: JSX.Element | null = null;\n    if (typeConfig.localizeableKeys!.indexOf('audio_url') > 0) {\n      audioButton = (\n        <UploadButton\n          icon=\"fe-mic\"\n          uploadText=\"Upload Recording\"\n          removeText=\"Remove Recording\"\n          url={this.state.audio.value}\n          endpoint={this.context.config.endpoints.attachments}\n          onUploadChanged={this.handleAudioChanged}\n        />\n      );\n    }\n\n    const translation = i18n.t('forms.translation', 'Translation');\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <div data-spec=\"translation-container\">\n          <div data-spec=\"text-to-translate\" className={styles.translate_from}>\n            {(this.props.nodeSettings.originalAction as SendMsg).text}\n          </div>\n        </div>\n\n        <TextInputElement\n          name={i18n.t('forms.message', 'Message')}\n          showLabel={false}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          placeholder={`${this.props.language.name} ${translation}`}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n        />\n\n        {audioButton}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Action } from 'flowTypes';\n\n/* istanbul ignore next */\nconst MissingComp: React.SFC<Action> = ({ type }): JSX.Element => {\n  return <div className=\"placeholder\">No implementation yet for {type}</div>;\n};\n\nexport default MissingComp;\n","import * as React from 'react';\nimport { PlayAudio } from 'flowTypes';\n\nconst PlayAudioComp: React.SFC<PlayAudio> = (action: PlayAudio): JSX.Element => {\n  return <div>{action.audio_url}</div>;\n};\n\nexport default PlayAudioComp;\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { validate, Required } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { renderIssues } from '../helpers';\n\nexport interface PlayAudioFormState extends FormState {\n  audio: StringEntry;\n}\n\nexport default class PlayAudioForm extends React.Component<ActionFormProps, PlayAudioFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleAudioUpdate(text: string): boolean {\n    const updates: Partial<PlayAudioFormState> = {};\n    updates.audio = validate(i18n.t('forms.recording', 'Recording'), text, [Required]);\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // make sure we validate untouched text fields\n    const valid = this.handleAudioUpdate(this.state.audio.value);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>{i18n.t('forms.recording_label', 'Previous Recording')}</p>\n        <TextInputElement\n          name={i18n.t('forms.message', 'Message')}\n          showLabel={false}\n          onChange={this.handleAudioUpdate}\n          entry={this.state.audio}\n          autocomplete={true}\n          focus={true}\n          helpText={\n            <Trans i18nKey=\"forms.play_audio_help_text\">\n              Enter a variable that contains a recording the contact has previously recorded. For\n              example, @results.voicemail or @fields.short_bio.\n            </Trans>\n          }\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { PlayAudioFormState } from 'components/flow/actions/playaudio/PlayAudioForm';\nimport { Types } from 'config/interfaces';\nimport { PlayAudio } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): PlayAudioFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.play_audio) {\n    const action = settings.originalAction as PlayAudio;\n    return {\n      audio: { value: action.audio_url },\n      valid: true\n    };\n  }\n\n  return {\n    audio: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: PlayAudioFormState\n): PlayAudio => ({\n  audio_url: state.audio.value,\n  type: Types.play_audio,\n  uuid: getActionUUID(settings, Types.say_msg)\n});\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\n\nimport styles from './MediaPlayer.module.scss';\n\nexport interface MediaPlayerProps {\n  url: string;\n  triggered?: boolean;\n}\n\ninterface MediaPlayerState {\n  durationSeconds: number;\n  currentSeconds: number;\n  progress: number;\n  playing: boolean;\n}\n\nexport class MediaPlayer extends React.Component<MediaPlayerProps, MediaPlayerState> {\n  private ele: HTMLAudioElement;\n\n  private stroke = 1;\n  private radius = 9;\n\n  private radiusNormalized = this.radius - this.stroke * 2;\n  private circumference = this.radiusNormalized * 2 * Math.PI;\n\n  constructor(props: MediaPlayerProps) {\n    super(props);\n\n    this.state = {\n      durationSeconds: 0,\n      currentSeconds: 0,\n      playing: false,\n      progress: 0\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleTimeUpdate(e: React.SyntheticEvent<HTMLAudioElement>): void {\n    const currentTime = this.ele.currentTime || 0;\n    const duration = this.ele.duration || 0;\n\n    this.setState((prevState: MediaPlayerState) => {\n      if ((this.ele.ended || currentTime === 0) && prevState.playing) {\n        setTimeout(() => {\n          this.setState({ progress: 0, playing: false });\n        }, 500);\n      }\n\n      return {\n        currentSeconds: this.ele.ended ? 0 : currentTime,\n        durationSeconds: duration,\n        playing: currentTime > 0,\n        progress: duration > 0 ? Math.floor((currentTime / duration) * 100) : 0\n      };\n    });\n  }\n\n  public componentDidMount(): void {\n    if (this.props.triggered) {\n      this.handleTogglePlay(null);\n    }\n  }\n\n  private handleTogglePlay(e: React.MouseEvent<HTMLDivElement>): void {\n    if (this.state.playing) {\n      this.ele.pause();\n      this.ele.currentTime = 0;\n    } else {\n      this.ele.play();\n    }\n\n    if (e !== null) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  private handleRef(ref: HTMLAudioElement): any {\n    return (this.ele = ref);\n  }\n\n  public componentDidUpdate(prevProps: MediaPlayerProps): void {\n    if (this.props.url !== prevProps.url) {\n      this.setState({\n        durationSeconds: 0,\n        currentSeconds: 0,\n        playing: false,\n        progress: 0\n      });\n    }\n  }\n\n  public render(): JSX.Element {\n    const progress = this.state.progress || 0;\n    const strokeDashoffset = this.circumference - (progress / 100) * this.circumference;\n\n    return (\n      <div\n        className={styles.player + ' ' + (this.state.playing ? styles.playing : '')}\n        style={{ height: this.radius * 2, width: this.radius * 2 }}\n        onMouseDown={this.handleTogglePlay}\n      >\n        <audio ref={this.handleRef} onTimeUpdate={this.handleTimeUpdate} src={this.props.url} />\n\n        <div className={styles.circles}>\n          <svg height={this.radius * 2} width={this.radius * 2}>\n            <circle\n              className={styles.circle_background}\n              stroke=\"#fff\"\n              fill=\"#fff\"\n              strokeWidth={this.stroke}\n              r={this.radiusNormalized}\n              cx={this.radius}\n              cy={this.radius}\n            />\n            <circle\n              className={styles.circle_background}\n              stroke=\"#ddd\"\n              fill=\"transparent\"\n              strokeWidth={this.stroke}\n              r={this.radiusNormalized}\n              cx={this.radius}\n              cy={this.radius}\n            />\n            <circle\n              className={styles.circle_foreground}\n              stroke=\"cornflowerblue\"\n              fill=\"transparent\"\n              strokeWidth={this.stroke}\n              strokeDasharray={this.circumference + ' ' + this.circumference}\n              style={{ strokeDashoffset }}\n              r={this.radiusNormalized}\n              cx={this.radius}\n              cy={this.radius}\n            />\n          </svg>\n        </div>\n        <div className={styles.button + ' ' + (this.state.playing ? 'fe-stop' : 'fe-play_arrow')} />\n      </div>\n    );\n  }\n}\n","import { MediaPlayer } from 'components/mediaplayer/MediaPlayer';\nimport { SayMsg } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './SayMsg.module.scss';\nimport i18n from 'config/i18n';\n\nexport const PLACEHOLDER = i18n.t('actions.say_msg.placeholder', 'Send a message to the contact');\n\nconst SayMsgComp: React.SFC<SayMsg> = (action: SayMsg): JSX.Element => {\n  if (action.text) {\n    return (\n      <>\n        <div className={styles.text}>{action.text}</div>\n\n        {action.audio_url ? (\n          <div className={styles.recording}>\n            <MediaPlayer url={action.audio_url} />\n          </div>\n        ) : null}\n      </>\n    );\n  }\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\n};\n\nexport default SayMsgComp;\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport UploadButton from 'components/uploadbutton/UploadButton';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../helpers';\n\nexport interface SayMsgFormState extends FormState {\n  message: StringEntry;\n  audio: StringEntry;\n}\n\nexport default class SayMsgForm extends React.Component<ActionFormProps, SayMsgFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleUpdate(keys: { text?: string }, submitting = false): boolean {\n    const updates: Partial<SayMsgFormState> = {};\n\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate(i18n.t('forms.message', 'Message'), keys.text!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleMessageUpdate(text: string, name: string, submitting = false): boolean {\n    return this.handleUpdate({ text }, submitting);\n  }\n\n  private handleSave(): void {\n    // make sure we validate untouched text fields\n    const valid = this.handleUpdate({ text: this.state.message.value }, true);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleUploadChanged(url: string): void {\n    this.setState({ audio: { value: url } });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <TextInputElement\n          name={i18n.t('forms.message', 'Message')}\n          showLabel={false}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n        />\n\n        <UploadButton\n          icon=\"fe-mic\"\n          uploadText=\"Upload Recording\"\n          removeText=\"Remove Recording\"\n          url={this.state.audio.value}\n          endpoint={this.context.config.endpoints.attachments}\n          onUploadChanged={this.handleUploadChanged}\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { SayMsgFormState } from 'components/flow/actions/saymsg/SayMsgForm';\nimport { Types } from 'config/interfaces';\nimport { SayMsg } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): SayMsgFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.say_msg) {\n    const action = settings.originalAction as SayMsg;\n    return {\n      message: { value: action.text },\n      audio: { value: action.audio_url },\n      valid: true\n    };\n  }\n\n  return {\n    message: { value: '' },\n    audio: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (settings: NodeEditorSettings, state: SayMsgFormState): SayMsg => ({\n  text: state.message.value,\n  audio_url: state.audio.value,\n  type: Types.say_msg,\n  uuid: getActionUUID(settings, Types.say_msg)\n});\n","import { getRecipients, renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { BroadcastMsg } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './SendBroadcast.module.scss';\nimport i18n from 'config/i18n';\n\nexport const PLACEHOLDER = i18n.t(\n  'actions.send_broadcast.placeholder',\n  'Send a message to the contact'\n);\n\nconst MAX_TO_SHOW = 5;\n\nconst SendBroadcastComp: React.SFC<BroadcastMsg> = (\n  action: BroadcastMsg,\n  context: any\n): JSX.Element => {\n  const assets = getRecipients(action);\n  if (action.text) {\n    return (\n      <div className={styles.node}>\n        <div className={styles.to} key={action.uuid + '_broadcast_recipients'}>\n          {renderAssetList(assets, MAX_TO_SHOW, context.config.endpoints)}\n        </div>\n        <div className={styles.message}>\n          {action.text.split(/\\r?\\n/).map((line: string, idx: number) => (\n            <div key={action.uuid + idx} className={styles.line}>\n              {line}\n            </div>\n          ))}\n          <div className={styles.icons}>\n            {action.attachments && action.attachments.length > 0 ? (\n              <div className={`${styles.attachment} fe-paperclip`} />\n            ) : null}\n            {action.templating && action.templating.template ? (\n              <div className={`${styles.whatsapp} fe-whatsapp`} />\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  if (action.attachments && action.attachments.length > 0) {\n    return <div className={`${styles.attachment} fe-paperclip`} />;\n  }\n  if (action.templating && action.templating.template) {\n    return <div className={`${styles.whatsapp} fe-whatsapp`} />;\n  }\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\n};\n\nSendBroadcastComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default SendBroadcastComp;\n","import {\n  getActionUUID,\n  getExpressions,\n  getRecipients,\n  getRecipientsByAsset\n} from 'components/flow/actions/helpers';\nimport { SendBroadcastFormState } from 'components/flow/actions/sendbroadcast/SendBroadcastForm';\nimport { Types } from 'config/interfaces';\nimport { Attachment } from 'components/flow/actions/sendmsg/SendMsgForm';\nimport { BroadcastMsg, SendMsg, MsgTemplating } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport const initializeForm = (settings: NodeEditorSettings): SendBroadcastFormState => {\n  let template: any = { value: null };\n  let templateVariables: any = [];\n\n  const finalState: SendBroadcastFormState = {\n    template,\n    templateVariables,\n    message: { value: '' },\n    recipients: { value: [] },\n    valid: true,\n    attachments: [],\n    validAttachment: false,\n    attachmentError: '',\n    attachmentValidityCheck: false,\n    recipientValidate: true\n  };\n\n  if (settings.originalAction && settings.originalAction.type === Types.send_broadcast) {\n    let action = settings.originalAction as BroadcastMsg;\n    const attachments: Attachment[] = [];\n    (action.attachments || []).forEach((attachmentString: string) => {\n      const splitPoint = attachmentString.indexOf(':');\n\n      const type = attachmentString.substring(0, splitPoint);\n      const attachment = {\n        type,\n        url: attachmentString.substring(splitPoint + 1),\n        uploaded: type.indexOf('/') > -1\n      };\n\n      attachments.push(attachment);\n    });\n\n    finalState.attachments = attachments;\n\n    if (action.templating) {\n      const msgTemplate = action.templating.template;\n      template = {\n        value: {\n          uuid: msgTemplate.uuid,\n          name: msgTemplate.name\n        }\n      };\n      templateVariables = action.templating.variables.map((value: string) => {\n        return {\n          value\n        };\n      });\n    }\n\n    finalState.template = template;\n    finalState.templateVariables = templateVariables;\n    // check if our form should use a localized action\n    if (settings.localizations && settings.localizations.length > 0) {\n      const localized = settings.localizations[0];\n      if (localized.isLocalized()) {\n        action = settings.localizations[0].getObject() as BroadcastMsg;\n      } else {\n        return finalState;\n      }\n    }\n\n    finalState.message = { value: action.text };\n    finalState.recipients = { value: getRecipients(action) };\n\n    return finalState;\n  }\n\n  finalState.valid = false;\n\n  return finalState;\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  formState: SendBroadcastFormState\n): BroadcastMsg => {\n  const attachments = formState.attachments\n    .filter((attachment: Attachment) => attachment.url.trim().length > 0)\n    .map((attachment: Attachment) => `${attachment.type}:${attachment.url}`);\n\n  let templating: MsgTemplating = null;\n\n  if (formState.template && formState.template.value) {\n    let templatingUUID = createUUID();\n    if (settings.originalAction && settings.originalAction.type === Types.send_msg) {\n      const action = settings.originalAction as SendMsg;\n      if (\n        action.templating &&\n        action.templating.template &&\n        action.templating.template.uuid === formState.template.value.id\n      ) {\n        templatingUUID = action.templating.uuid;\n      }\n    }\n\n    templating = {\n      uuid: templatingUUID,\n      template: {\n        uuid: formState.template.value.uuid,\n        name: formState.template.value.name\n      },\n\n      variables: formState.templateVariables.map((variable: StringEntry) => variable.value)\n    };\n  }\n\n  let result: any = {\n    attachments,\n    legacy_vars: getExpressions(formState.recipients.value),\n    contacts: getRecipientsByAsset(formState.recipients.value, AssetType.Contact),\n    groups: getRecipientsByAsset(formState.recipients.value, AssetType.Group),\n    text: formState.message.value,\n    type: Types.send_broadcast,\n    uuid: getActionUUID(settings, Types.send_broadcast)\n  };\n\n  if (templating) {\n    result.templating = templating;\n  }\n\n  return result;\n};\n","import * as React from 'react';\nimport { range } from 'utils';\n\nimport styles from './Loading.module.scss';\n\nexport interface LoadingProps {\n  size: number;\n  units: number;\n  color: string;\n  square?: boolean;\n}\n\ninterface Color {\n  r: number;\n  g: number;\n  b: number;\n}\n\ninterface LoadingState {\n  color: Color;\n}\n\nconst hexToRgb = (hex: string): Color => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n      }\n    : null;\n};\n\nexport default class Loading extends React.Component<LoadingProps, LoadingState> {\n  constructor(props: LoadingProps) {\n    super(props);\n\n    this.state = {\n      color: hexToRgb(props.color)\n    };\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div\n        className={styles.loading}\n        style={{\n          width: this.props.size * this.props.units * 2,\n          height: this.props.size\n        }}\n      >\n        {range(0, this.props.units).map((num: number) => (\n          <div\n            key={`ball_${num}`}\n            style={{\n              borderRadius: this.props.square ? '0' : '50%',\n              width: this.props.size,\n              height: this.props.size,\n              margin: this.props.size / 3,\n              animationDelay: `-${1 - num * (1 / this.props.units)}s`,\n              background: `rgba(${this.state.color.r},${this.state.color.g},${\n                this.state.color.b\n              }, ${1 - num * (1 / this.props.units)})`\n            }}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { initializeForm, stateToAction } from 'components/flow/actions/sendbroadcast/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TextInputElement, {\n  Count,\n  TextInputStyle\n} from 'components/form/textinput/TextInputElement';\n\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { hasUseableTranslation } from 'components/form/assetselector/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport mutate from 'immutability-helper';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport { AssetArrayEntry, FormState, mergeForm, FormEntry, StringEntry } from 'store/nodeEditor';\nimport { shouldRequireIf, validate, Required } from 'store/validators';\nimport i18n from 'config/i18n';\n\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { Template, TemplateTranslation } from 'flowTypes';\nimport { createUUID, range } from 'utils';\nimport styles from './SendBroadcastForm.module.scss';\nimport { Attachment } from '../sendmsg/SendMsgForm';\nimport { TembaSelectStyle } from 'temba/TembaSelect';\nimport Pill from 'components/pill/Pill';\nimport Loading from 'components/loading/Loading';\nimport { ImCross } from 'react-icons/im';\nimport { fetchAsset } from 'external';\nimport axios from 'axios';\nexport interface SendBroadcastFormState extends FormState {\n  template: FormEntry;\n  templateVariables: StringEntry[];\n  templateTranslation?: TemplateTranslation;\n  message: StringEntry;\n  recipients: AssetArrayEntry;\n  attachments: Attachment[];\n  validAttachment: any;\n  attachmentError: string;\n  attachmentValidityCheck: any;\n  recipientValidate: any;\n}\n\nconst MAX_ATTACHMENTS = 1;\n\nconst TYPE_OPTIONS: SelectOption[] = [\n  { value: 'image', name: i18n.t('forms.image_url', 'Image URL') },\n  { value: 'audio', name: i18n.t('forms.audio_url', 'Audio URL') },\n  { value: 'video', name: i18n.t('forms.video_url', 'Video URL') },\n  { value: 'application', name: i18n.t('forms.pdf_url', 'PDF Document URL') }\n];\n\nconst getAttachmentTypeOption = (type: string): SelectOption => {\n  return TYPE_OPTIONS.find((option: SelectOption) => option.value === type);\n};\n\n// Note: action prop is only used for its uuid (see onValid)\nexport default class SendBroadcastForm extends React.Component<\n  ActionFormProps,\n  SendBroadcastFormState\n> {\n  public static contextTypes = {\n    endpoints: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n    if (this.state.template.value !== null) {\n      fetchAsset(this.props.assetStore.templates, this.state.template.value.uuid).then(\n        (asset: Asset) => {\n          if (asset !== null) {\n            this.handleTemplateChanged([{ ...this.state.template.value, ...asset.content }]);\n          }\n        }\n      );\n    }\n  }\n\n  public handleRecipientsChanged(recipients: Asset[]): boolean {\n    return this.handleUpdate({ recipients });\n  }\n\n  public handleMessageUpdate(text: string): boolean {\n    return this.handleUpdate({ text });\n  }\n\n  private handleUpdate(keys: { text?: string; recipients?: Asset[] }, submitting = false): boolean {\n    const updates: Partial<SendBroadcastFormState> = {};\n\n    if (keys.hasOwnProperty('recipients')) {\n      updates.recipients = validate(i18n.t('forms.recipients', 'Recipients'), keys.recipients!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate(i18n.t('forms.message', 'Message'), keys.text!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleAxios(body: any, type: any) {\n    axios\n      .get(`${this.props.assetStore.validateMedia.endpoint}?url=${body.url}&type=${body.type}`)\n      .then(response => {\n        if (response.data.is_valid) {\n          this.setState({ validAttachment: false });\n          // make sure we validate untouched text fields and contact fields\n        } else {\n          this.setState({ validAttachment: true, attachmentError: `Not a valid ${type} url` });\n        }\n        let recipientValidate = true;\n        if (this.state.recipients.value!.length <= 0 && !this.state.message.value) {\n          recipientValidate = this.handleUpdate(\n            {\n              recipients: this.state.recipients.value!\n            },\n            true\n          );\n        } else if (this.state.recipients.value!.length > 0 && !this.state.message.value) {\n          recipientValidate = true;\n        }\n        if (recipientValidate) {\n            this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n            this.props.onClose(false); // notify our modal we are done\n        }\n      })\n      .catch(error => {\n        this.setState({ attachmentError: `The attachment url is invalid!: ${error.toString()}` });\n      });\n  }\n\n  private handleSave(): void {\n    if (this.state.attachments.length > 0) {\n      const type = this.state.attachments[0].type;\n      const url = this.state.attachments[0].url;\n\n      let body = {\n        type,\n        url\n      };\n\n      if (type === 'application') {\n        body.type = 'document';\n      }\n      switch (type) {\n        case 'image':\n          this.handleAxios(body, 'image');\n          break;\n        case 'video':\n          this.handleAxios(body, 'video');\n          break;\n        case 'audio':\n          this.handleAxios(body, 'audio');\n          break;\n        case 'application':\n          this.handleAxios(body, 'document');\n          break;\n      }\n      this.setState({ validAttachment: false, attachmentValidityCheck: true, attachmentError: null });\n    } else {\n      // validate in case they never updated an empty field\n      let valid = this.handleUpdate(\n        {\n          text: this.state.message.value,\n          recipients: this.state.recipients.value!\n        },\n        true\n      );\n      let templateVariables = this.state.templateVariables;\n      // make sure we don't have untouched template variables\n      this.state.templateVariables.forEach((variable: StringEntry, num: number) => {\n        const updated = validate(`Variable ${num + 1}`, variable.value, [Required]);\n        templateVariables = mutate(templateVariables, {\n          [num]: { $merge: updated }\n        }) as StringEntry[];\n        valid = valid && !hasErrors(updated);\n      });\n      // check if the template and recipient are added or not\n      // if not, throw required validation\n      if (templateVariables.length > 0) {\n        if (this.state.recipients.value!.length <= 0 && !this.state.message.value) {\n          valid = this.handleUpdate(\n            {\n              recipients: this.state.recipients.value!\n            },\n            true\n          );\n        } else if (this.state.recipients.value!.length > 0 && !this.state.message.value) {\n          valid = true;\n        }\n      }\n      if (valid) {\n        this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n        // notify our modal we are done\n        this.props.onClose(false);\n      } else {\n        this.setState({ templateVariables, valid });\n      }\n    }\n  }\n\n  private handleShouldExcludeTemplate(template: any): boolean {\n    return !hasUseableTranslation(template as Template);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleTemplateChanged(selected: any[]): void {\n    const template = selected ? selected[0] : null;\n\n    if (!template) {\n      this.setState({\n        template: { value: null },\n        templateTranslation: null,\n        templateVariables: []\n      });\n    } else {\n      const templateTranslation = template.translations[0];\n\n      const templateVariables =\n        this.state.templateVariables.length === 0 ||\n        (this.state.template.value && this.state.template.value.id !== template.id)\n          ? range(0, templateTranslation.variable_count).map(() => {\n              return {\n                value: ''\n              };\n            })\n          : this.state.templateVariables;\n      this.setState({\n        template: { value: template },\n        templateTranslation,\n        templateVariables\n      });\n    }\n  }\n\n  private handleTemplateVariableChanged(updatedText: string, num: number): void {\n    const entry = validate(`Variable ${num + 1}`, updatedText, [Required]);\n    const templateVariables = mutate(this.state.templateVariables, {\n      $merge: { [num]: entry }\n    }) as StringEntry[];\n    this.setState({ templateVariables });\n  }\n\n  private renderTemplateConfig(): JSX.Element {\n    return (\n      <>\n        <p>\n          {i18n.t(\n            'forms.whatsapp_warning',\n            'Sending messages over a WhatsApp channel requires that a template be used if you have not received a message from a contact in the last 24 hours. Setting a template to use over WhatsApp is especially important for the first message in your flow.'\n          )}\n        </p>\n        <AssetSelector\n          name={i18n.t('forms.template', 'template')}\n          noOptionsMessage=\"No templates found\"\n          assets={this.props.assetStore.templates}\n          entry={this.state.template}\n          onChange={this.handleTemplateChanged}\n          shouldExclude={this.handleShouldExcludeTemplate}\n          searchable={true}\n          formClearable={true}\n        />\n        {this.state.templateTranslation ? (\n          <>\n            <div className={styles.template_text}>{this.state.templateTranslation.content}</div>\n            {range(0, this.state.templateTranslation.variable_count).map((num: number): any => {\n              return (\n                <div className={styles.variable} key={'tr_arg_' + num}>\n                  <TextInputElement\n                    name={`${i18n.t('forms.variable', 'Variable')} ${num + 1}`}\n                    showLabel={false}\n                    placeholder={`${i18n.t('forms.variable', 'Variable')} ${num + 1}`}\n                    onChange={(updatedText: string): any => {\n                      this.handleTemplateVariableChanged(updatedText, num);\n                    }}\n                    entry={\n                      this.state.templateVariables[num] === undefined\n                        ? { value: '' }\n                        : this.state.templateVariables[num]\n                    }\n                    autocomplete={true}\n                  />\n                </div>\n              );\n            })}\n          </>\n        ) : null}\n      </>\n    );\n  }\n\n  public handleAttachmentRemoved(index: number): void {\n    // we found a match, merge us in\n    const updated: any = mutate(this.state.attachments, {\n      $splice: [[index, 1]]\n    });\n    this.setState({ attachments: updated, attachmentError: null, validAttachment: false });\n  }\n\n  private renderAttachment(index: number, attachment: Attachment): JSX.Element {\n    let attachments: any = this.state.attachments;\n    return (\n      <>\n        <div\n          className={styles.url_attachment}\n          key={index > -1 ? 'url_attachment_' + index : createUUID()}\n        >\n          <div className={styles.type_choice}>\n            <SelectElement\n              key={'attachment_type_' + index}\n              style={TembaSelectStyle.small}\n              name={i18n.t('forms.type_options', 'Type Options')}\n              placeholder=\"Add Attachment\"\n              entry={{\n                value: index > -1 ? getAttachmentTypeOption(attachment.type) : null\n              }}\n              onChange={(option: any) => {\n                if (index === -1) {\n                  attachments = mutate(attachments, {\n                    $push: [{ type: option.value, url: '' }]\n                  });\n                } else {\n                  attachments = mutate(attachments, {\n                    [index]: {\n                      $set: { type: option.value, url: attachment.url }\n                    }\n                  });\n                }\n                this.setState({ attachments });\n              }}\n              options={TYPE_OPTIONS}\n            />\n          </div>\n          {index > -1 ? (\n            <>\n              <div className={styles.url}>\n                <TextInputElement\n                  placeholder=\"URL\"\n                  name={i18n.t('forms.url', 'URL')}\n                  style={TextInputStyle.small}\n                  onChange={(value: string) => {\n                    attachments = mutate(attachments, {\n                      [index]: { $set: { type: attachment.type, url: value } }\n                    });\n                    this.setState({ attachments });\n                  }}\n                  entry={{ value: attachment.url }}\n                  autocomplete={true}\n                />\n              </div>\n              <div className={styles.remove}>\n                <Pill\n                  icon=\"fe-x\"\n                  text=\" Remove\"\n                  large={true}\n                  onClick={() => {\n                    this.handleAttachmentRemoved(index);\n                  }}\n                />\n              </div>\n            </>\n          ) : null}\n        </div>\n        {!this.state.attachmentValidityCheck && !this.state.attachmentError && (this.state.attachments.length > 0 ? this.state.attachments[0].url !== \"\": null) ? (\n          <div className={styles.loading}>\n            Checking URL validity\n            <Loading size={10} units={6} color=\"#999999\" />\n          </div>\n        ) : null}\n        {this.state.attachmentError ? (\n          <div className={styles.error}>\n            <ImCross className={styles.crossIcon} />\n            {this.state.attachmentError}\n          </div>\n        ) : null}\n      </>\n    );\n  }\n\n  private renderAttachments(): JSX.Element {\n    const attachments = this.state.attachments.map((attachment, index: number) =>\n      this.renderAttachment(index, attachment)\n    );\n\n    const emptyOption =\n      this.state.attachments.length < MAX_ATTACHMENTS\n        ? this.renderAttachment(-1, { url: '', type: '' })\n        : null;\n    return (\n      <>\n        <p>\n          {i18n.t(\n            'forms.send_msg_summary',\n            'Add an attachment to each message. The attachment can be a file you upload or a dynamic URL using expressions and variables from your Flow.',\n            { count: MAX_ATTACHMENTS }\n          )}\n        </p>\n        {attachments}\n        {emptyOption}\n      </>\n    );\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    console.log('--', this.state)\n    const templates: any = {\n      name: 'WhatsApp',\n      body: this.renderTemplateConfig(),\n      checked: this.state.template.value != null,\n      hasErrors: !!this.state.templateVariables.find((entry: StringEntry) => hasErrors(entry))\n    };\n\n    const attachments: Tab = {\n      name: 'Attachments',\n      body: this.renderAttachments(),\n      checked: this.state.attachments.length > 0,\n      hasErrors: this.state.validAttachment\n    };\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={[templates, attachments]}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <AssetSelector\n          name={i18n.t('forms.recipients', 'Recipients')}\n          placeholder={i18n.t('forms.select_contacts', 'Select Contacts')}\n          assets={this.props.assetStore.recipients}\n          entry={this.state.recipients}\n          searchable={true}\n          multi={true}\n          expressions={true}\n          onChange={this.handleRecipientsChanged}\n        />\n        <p />\n        <TextInputElement\n          name={i18n.t('forms.message', 'Message')}\n          showLabel={false}\n          count={Count.SMS}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { SendEmail } from 'flowTypes';\n\nconst SendEmailComp: React.SFC<SendEmail> = ({ subject }): JSX.Element => <div>{subject}</div>;\n\nexport default SendEmailComp;\n","import { StylesConfig } from 'react-select';\n\nexport const large = {\n  placeholder: (styles: StylesConfig, state: any) => {\n    return { ...styles, color: '#ddd', marginLeft: '3px' };\n  },\n  singleValue: (styles: StylesConfig, state: any) => {\n    return { ...styles, marginLeft: '3px' };\n  },\n  multiValue: (styles: StylesConfig, state: any) => {\n    return { ...styles, marginLeft: '0px' };\n  },\n  input: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      marginLeft: '0px',\n      caretColor: '#999',\n      marginBottom: '0px',\n      boxShadow: 'none',\n      border: 'none',\n      fontSize: '13px'\n    };\n  },\n  control: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      borderColor: '#e6e6e6',\n      boxShadow: 'none',\n      fontSize: '13px',\n      transition: 'all 0.3s ease-in-out',\n      '&:hover': {\n        borderColor: '#e6e6e6'\n      },\n      '&:focus-within': {\n        boxShadow: 'var(--widget-box-shadow-focused) !important',\n        border: '1px solid #a4cafe !important'\n      }\n    };\n  }\n};\n\nexport const messageStyle = {\n  control: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      borderColor: '#e6e6e6',\n      boxShadow: 'none',\n      borderBottom: 'none',\n      borderBottomRightRadius: '0px',\n      borderBottomLeftRadius: '0px',\n      '&:hover': {\n        borderColor: '#e6e6e6'\n      }\n    };\n  }\n};\n\nexport const getErroredSelect = (baseControl: any): any => {\n  return {\n    control: (styles: StylesConfig) => ({\n      ...styles,\n      ...baseControl,\n      borderColor: 'tomato',\n      boxShadow: '0 0 0 3px rgba(255,196,186,0.5) !important;',\n      '&:hover': {\n        borderColor: 'tomato'\n      }\n    })\n  };\n};\n\nexport const small = {\n  control: (styles: StylesConfig) => ({\n    ...styles,\n    borderColor: '#e6e6e6',\n    boxShadow: 'none',\n    '&:hover': {\n      borderColor: '#e6e6e6'\n    },\n    maxHeight: '28px',\n    minHeight: '28px',\n    fontSize: '12px',\n    lineHeight: '12px',\n    marginBottom: '-10px',\n    '&:focus-within': {\n      boxShadow: 'var(--widget-box-shadow-focused) !important',\n      border: '1px solid #a4cafe !important'\n    }\n  }),\n  menuList: (styles: StylesConfig) => ({\n    ...styles,\n    maxHeight: 200\n  }),\n  option: (styles: StylesConfig) => ({\n    ...styles,\n    fontSize: 12\n  }),\n  singleValue: (styles: StylesConfig) => ({\n    ...styles,\n    maxHeight: 28,\n    lineHeight: '13px'\n  }),\n  indicatorsContainer: (styles: StylesConfig) => ({\n    ...styles,\n    height: 28,\n    maxHeight: 28\n  }),\n  valueContainer: (styles: StylesConfig) => ({\n    ...styles,\n    height: 28,\n    maxHeight: 28\n  }),\n  input: (styles: StylesConfig) => ({\n    ...styles,\n    marginLeft: '-2px',\n    marginTop: '0px',\n    caretColor: '#999',\n    boxShadow: 'none',\n    border: 'none',\n    maxHeight: '20px',\n    minHeight: '20px',\n    lineHeight: '12px'\n  })\n};\n\nexport const tagging = {\n  control: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      borderColor: '#e6e6e6',\n      boxShadow: 'none',\n      transition: 'all 0.3s ease-in-out',\n      '&:hover': {\n        borderColor: '#e6e6e6'\n      },\n      '&:focus-within': {\n        boxShadow: 'var(--widget-box-shadow-focused) !important',\n        border: '1px solid #a4cafe !important'\n      }\n    };\n  },\n  input: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      marginLeft: '0px',\n      caretColor: '#999',\n      marginBottom: '0px',\n      boxShadow: 'none',\n      border: 'none'\n    };\n  },\n  multiValue: (styles: StylesConfig) => {\n    return {\n      ...styles,\n      maxHeight: 24,\n      minHeight: 24,\n      lineHeight: '17px',\n      backgroundColor: 'hsl(0, 0%, 94%)',\n      border: '1px solid hsl(0, 0%, 85%)'\n    };\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\nimport React from 'react';\nimport { StringArrayEntry } from 'store/nodeEditor';\nimport { getSelectClass } from 'utils';\nimport { tagging } from 'utils/reactselect';\nimport CreatableSelect from 'react-select/creatable';\n\nexport type TagList = Array<{ label: string; value: string }>;\n\nexport interface TaggingElementProps extends FormElementProps {\n  placeholder?: string;\n  prompt: string;\n  createPrompt?: string;\n  onChange?: (values: string[]) => void;\n  onCheckValid: (value: string) => boolean;\n}\n\nexport const tagsToOptions = (tags: StringArrayEntry): TagList => {\n  return tags.value.map(tag => ({ label: tag, value: tag }));\n};\n\nexport const optionsToTags = (tags: TagList): string[] =>\n  (tags || []).map(tag => {\n    return tag.label;\n  });\n\nexport default class TaggingElement extends React.Component<TaggingElementProps> {\n  constructor(props: any) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleUpdateTags(tags: TagList): void {\n    if (this.props.onChange) {\n      this.props.onChange(optionsToTags(tags));\n    }\n  }\n\n  public handleCheckValid(label: string): boolean {\n    if (!label || label.trim().length === 0) {\n      return false;\n    }\n    return this.props.onCheckValid(label);\n  }\n\n  private arrowRenderer(): JSX.Element {\n    return <div />;\n  }\n\n  public render(): JSX.Element {\n    const className: string = getSelectClass((this.props.entry.validationFailures || []).length);\n\n    const tags = tagsToOptions(this.props.entry);\n    return (\n      <FormElement name={this.props.name} entry={this.props.entry}>\n        <CreatableSelect\n          styles={tagging as any}\n          className={className}\n          name={this.props.name}\n          placeholder={this.props.placeholder}\n          value={tags}\n          onChange={this.handleUpdateTags as any}\n          isMulti={true}\n          isSearchable={true}\n          isValidNewOption={this.handleCheckValid}\n          noOptionsMessage={() => this.props.prompt}\n          formatCreateLabel={(input: string) => {\n            return this.props.createPrompt !== undefined\n              ? this.props.createPrompt + input\n              : 'Create new ' + input;\n          }}\n          options={[]}\n        />\n      </FormElement>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport TaggingElement from 'components/form/select/tags/TaggingElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, mergeForm, StringArrayEntry, StringEntry } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport styles from './SendEmailForm.module.scss';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../helpers';\n\nconst EMAIL_PATTERN = /\\S+@\\S+\\.\\S+/;\n\nexport interface SendEmailFormState extends FormState {\n  recipients: StringArrayEntry;\n  subject: StringEntry;\n  body: StringEntry;\n}\n\nexport default class SendEmailForm extends React.Component<ActionFormProps, SendEmailFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleRecipientsChanged(recipients: string[]): boolean {\n    return this.handleUpdate({ recipients });\n  }\n\n  public handleSubjectChanged(subject: string): boolean {\n    return this.handleUpdate({ subject });\n  }\n\n  public handleBodyChanged(body: string): boolean {\n    return this.handleUpdate({ body });\n  }\n\n  private handleUpdate(\n    keys: { recipients?: string[]; subject?: string; body?: string },\n    submitting = false\n  ): boolean {\n    const updates: Partial<SendEmailFormState> = {};\n\n    if (keys.hasOwnProperty('recipients')) {\n      updates.recipients = validate(i18n.t('forms.recipients', 'Recipients'), keys.recipients!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('subject')) {\n      updates.subject = validate(i18n.t('forms.subject', 'Subject'), keys.subject!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('body')) {\n      updates.body = validate(i18n.t('forms.body', 'Body'), keys.body!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleSave(): void {\n    // validate in case they never updated an empty field\n    const valid = this.handleUpdate(\n      {\n        recipients: this.state.recipients.value,\n        subject: this.state.subject.value,\n        body: this.state.body.value\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public handleCheckValid(value: string): boolean {\n    return EMAIL_PATTERN.test(value) || value.startsWith('@');\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.ele}>\n          <TaggingElement\n            name={i18n.t('forms.email_recipient_name', 'Recipient')}\n            placeholder={i18n.t('forms.email_recipient_placeholder', 'To')}\n            prompt={i18n.t('forms.email_recipient_prompt', 'Enter email address')}\n            onCheckValid={this.handleCheckValid}\n            entry={this.state.recipients}\n            onChange={this.handleRecipientsChanged}\n            createPrompt={''}\n          />\n          <TextInputElement\n            __className={styles.subject}\n            name={i18n.t('forms.subject', 'Subject')}\n            placeholder={i18n.t('forms.subject', 'Subject')}\n            onChange={this.handleSubjectChanged}\n            entry={this.state.subject}\n            autocomplete={true}\n          />\n          <TextInputElement\n            __className={styles.message}\n            name={i18n.t('forms.message', 'Message')}\n            showLabel={false}\n            onChange={this.handleBodyChanged}\n            entry={this.state.body}\n            autocomplete={true}\n            textarea={true}\n          />\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { SendEmailFormState } from 'components/flow/actions/sendemail/SendEmailForm';\nimport { Types } from 'config/interfaces';\nimport { SendEmail } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): SendEmailFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.send_email) {\n    const action = settings.originalAction as SendEmail;\n    return {\n      body: { value: action.body },\n      subject: { value: action.subject },\n      recipients: { value: action.addresses },\n      valid: true\n    };\n  }\n\n  return {\n    body: { value: '' },\n    subject: { value: '' },\n    recipients: { value: [] },\n    valid: true\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  formState: SendEmailFormState\n): SendEmail => {\n  return {\n    addresses: formState.recipients.value,\n    subject: formState.subject.value,\n    body: formState.body.value,\n    type: Types.send_email,\n    uuid: getActionUUID(settings, Types.send_email)\n  };\n};\n","import Pill from 'components/pill/Pill';\nimport { SendMsg } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './SendMsg.module.scss';\nimport i18n from 'config/i18n';\n\nexport const PLACEHOLDER = i18n.t('actions.send_msg.placeholder', 'Send a message to the contact');\n\nconst SendMsgComp: React.SFC<SendMsg> = (action: SendMsg): JSX.Element => {\n  if (action.text) {\n    let replies = null;\n\n    let quickReplies = action.quick_replies || [];\n    if (quickReplies.length > 0) {\n      replies = (\n        <div className={styles.quick_replies}>\n          {quickReplies.map(reply => (\n            <Pill\n              style={{ marginLeft: 4, marginTop: 4 }}\n              maxLength={20}\n              advanced={true}\n              key={action.uuid + reply}\n              text={reply}\n            />\n          ))}\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div>\n          {action.text.split(/\\r?\\n/).map((line: string, idx: number) => (\n            <div key={action.uuid + idx} className={styles.line}>\n              {line}\n            </div>\n          ))}\n          {action.attachments && action.attachments.length > 0 ? (\n            <div className={`${styles.attachment} fe-paperclip`} />\n          ) : null}\n          {action.templating && action.templating.template ? (\n            <div className={`${styles.whatsapp} fe-whatsapp`} />\n          ) : null}\n          {action.topic ? <div className={`${styles.facebook} fe-facebook`} /> : null}\n        </div>\n        <div className={styles.summary}>{replies}</div>\n      </>\n    );\n  }\n  if (action.attachments && action.attachments.length > 0) {\n    return <div className={`${styles.attachment} fe-paperclip`} />;\n  }\n  if (action.templating && action.templating.template) {\n    return <div className={`${styles.whatsapp} fe-whatsapp`} />;\n  }\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\n};\n\nexport default SendMsgComp;\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { Attachment, SendMsgFormState } from 'components/flow/actions/sendmsg/SendMsgForm';\nimport { Types } from 'config/interfaces';\nimport { MsgTemplating, SendMsg } from 'flowTypes';\nimport { AssetStore } from 'store/flowContext';\nimport { FormEntry, NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { createUUID } from 'utils';\n\nexport const TOPIC_OPTIONS: SelectOption[] = [\n  { value: 'event', name: 'Event' },\n  { value: 'account', name: 'Account' },\n  { value: 'purchase', name: 'Purchase' },\n  { value: 'agent', name: 'Agent' }\n];\n\nexport const initializeForm = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): SendMsgFormState => {\n  let template: FormEntry = { value: null };\n  let templateVariables: StringEntry[] = [];\n\n  if (settings.originalAction && settings.originalAction.type === Types.send_msg) {\n    const action = settings.originalAction as SendMsg;\n    const attachments: Attachment[] = [];\n    (action.attachments || []).forEach((attachmentString: string) => {\n      const splitPoint = attachmentString.indexOf(':');\n\n      const type = attachmentString.substring(0, splitPoint);\n      const attachment = {\n        type,\n        url: attachmentString.substring(splitPoint + 1),\n        uploaded: type.indexOf('/') > -1\n      };\n\n      attachments.push(attachment);\n    });\n\n    if (action.templating) {\n      const msgTemplate = action.templating.template;\n      template = {\n        value: {\n          uuid: msgTemplate.uuid,\n          name: msgTemplate.name\n        }\n      };\n      templateVariables = action.templating.variables.map((value: string) => {\n        return {\n          value\n        };\n      });\n    }\n\n    return {\n      topic: { value: TOPIC_OPTIONS.find(option => option.value === action.topic) },\n      template,\n      templateVariables,\n      attachments,\n      message: { value: action.text },\n      quickReplies: { value: action.quick_replies || [] },\n      quickReplyEntry: { value: '' },\n      sendAll: action.all_urns,\n      valid: true,\n      validAttachment: false,\n      attachmentError: null\n    };\n  }\n\n  return {\n    topic: { value: null },\n    template,\n    templateVariables: [],\n    attachments: [],\n    message: { value: '' },\n    quickReplies: { value: [] },\n    quickReplyEntry: { value: '' },\n    sendAll: false,\n    valid: false,\n    validAttachment: false,\n    attachmentError: null\n  };\n};\n\nexport const stateToAction = (settings: NodeEditorSettings, state: SendMsgFormState): SendMsg => {\n  const attachments = state.attachments\n    .filter((attachment: Attachment) => attachment.url.trim().length > 0)\n    .map((attachment: Attachment) => `${attachment.type}:${attachment.url}`);\n\n  let templating: MsgTemplating = null;\n\n  if (state.template && state.template.value) {\n    let templatingUUID = createUUID();\n    if (settings.originalAction && settings.originalAction.type === Types.send_msg) {\n      const action = settings.originalAction as SendMsg;\n      if (\n        action.templating &&\n        action.templating.template &&\n        action.templating.template.uuid === state.template.value.id\n      ) {\n        templatingUUID = action.templating.uuid;\n      }\n    }\n\n    templating = {\n      uuid: templatingUUID,\n      template: {\n        uuid: state.template.value.uuid,\n        name: state.template.value.name\n      },\n      variables: state.templateVariables.map((variable: StringEntry) => variable.value)\n    };\n  }\n\n  const result: SendMsg = {\n    attachments,\n    text: state.message.value,\n    type: Types.send_msg,\n    all_urns: state.sendAll,\n    quick_replies: state.quickReplies.value,\n    uuid: getActionUUID(settings, Types.send_msg)\n  };\n\n  if (templating) {\n    result.templating = templating;\n  }\n\n  if (state.topic.value) {\n    result.topic = state.topic.value.value;\n  }\n\n  return result;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport { StringArrayEntry, StringEntry } from 'store/nodeEditor';\nimport TembaSelect from 'temba/TembaSelect';\n\nexport interface MultiChoiceInputProps {\n  name: string;\n  items: StringArrayEntry;\n  entry?: StringEntry;\n  onChange?: (values: string[]) => void;\n  helpText?: JSX.Element;\n}\n\ninterface MultiChoiceInputState {\n  currentInput: StringEntry;\n}\n\nexport default class MultiChoiceInput extends React.Component<\n  MultiChoiceInputProps,\n  MultiChoiceInputState\n> {\n  constructor(props: MultiChoiceInputProps) {\n    super(props);\n\n    if (this.props.entry) {\n      this.state = {\n        currentInput: this.props.entry\n      };\n    } else {\n      this.state = {\n        currentInput: { value: '' }\n      };\n    }\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleChange(options: { name: string; value: string }[]): void {\n    this.props.onChange(options.map(option => option.value));\n  }\n\n  public render(): JSX.Element {\n    const values = this.props.items.value.map((value: string) => {\n      return { name: value, value };\n    });\n    return (\n      <>\n        {this.props.helpText ? <p>{this.props.helpText}</p> : <p />}\n        <TembaSelect\n          name={this.props.name}\n          placeholder={this.props.name}\n          onChange={this.handleChange}\n          value={values}\n          multi={true}\n          tags={true}\n          searchable={true}\n          expressions={true}\n        />\n      </>\n    );\n  }\n}\n","/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { react as bindCallbacks } from 'auto-bind';\nimport axios from 'axios';\nimport { ImCross } from 'react-icons/im';\nimport Loading from 'components/loading/Loading';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport {\n  initializeForm as stateToForm,\n  stateToAction,\n  TOPIC_OPTIONS\n} from 'components/flow/actions/sendmsg/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport { hasUseableTranslation } from 'components/form/assetselector/helpers';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport MultiChoiceInput from 'components/form/multichoice/MultiChoice';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TextInputElement, { TextInputStyle } from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport Pill from 'components/pill/Pill';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { fetchAsset, getCookie } from 'external';\nimport { Template, TemplateTranslation } from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport * as React from 'react';\nimport flowContext, { Asset } from 'store/flowContext';\nimport {\n  FormState,\n  mergeForm,\n  StringArrayEntry,\n  StringEntry,\n  SelectOptionEntry,\n  FormEntry\n} from 'store/nodeEditor';\nimport { MaxOfTenItems, Required, shouldRequireIf, validate } from 'store/validators';\nimport { createUUID, range } from 'utils';\n\nimport styles from './SendMsgForm.module.scss';\nimport { hasFeature } from 'config/typeConfigs';\nimport { FeatureFilter } from 'config/interfaces';\n\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { TembaSelectStyle } from 'temba/TembaSelect';\nimport Modal from 'components/modal/Modal';\n\nconst MAX_ATTACHMENTS = 1;\n\nconst TYPE_OPTIONS: SelectOption[] = [\n  { value: 'image', name: i18n.t('forms.image_url', 'Image URL') },\n  { value: 'audio', name: i18n.t('forms.audio_url', 'Audio URL') },\n  { value: 'video', name: i18n.t('forms.video_url', 'Video URL') },\n  { value: 'application', name: i18n.t('forms.pdf_url', 'PDF Document URL') }\n];\n\nconst getAttachmentTypeOption = (type: string): SelectOption => {\n  return TYPE_OPTIONS.find((option: SelectOption) => option.value === type);\n};\n\nexport interface Attachment {\n  type: string;\n  url: string;\n  uploaded?: boolean;\n}\n\nexport interface SendMsgFormState extends FormState {\n  message: StringEntry;\n  quickReplies: StringArrayEntry;\n  quickReplyEntry: StringEntry;\n  sendAll: boolean;\n  attachments: Attachment[];\n  template: FormEntry;\n  topic: SelectOptionEntry;\n  templateVariables: StringEntry[];\n  templateTranslation?: TemplateTranslation;\n  validAttachment: any;\n  attachmentError: any;\n}\n\nexport default class SendMsgForm extends React.Component<ActionFormProps, SendMsgFormState> {\n  private filePicker: any;\n\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = stateToForm(this.props.nodeSettings, this.props.assetStore);\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n    // intialize our templates if we have them\n    if (this.state.template.value !== null) {\n      fetchAsset(this.props.assetStore.templates, this.state.template.value.uuid).then(\n        (asset: Asset) => {\n          if (asset !== null) {\n            this.handleTemplateChanged([{ ...this.state.template.value, ...asset.content }]);\n          }\n        }\n      );\n    }\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleUpdate(\n    keys: {\n      text?: string;\n      sendAll?: boolean;\n      quickReplies?: string[];\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<SendMsgFormState> = {};\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate(i18n.t('forms.message', 'Message'), keys.text, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('sendAll')) {\n      updates.sendAll = keys.sendAll;\n    }\n\n    if (keys.hasOwnProperty('quickReplies')) {\n      updates.quickReplies = validate(\n        i18n.t('forms.quick_replies', 'Quick Replies'),\n        keys.quickReplies,\n        [MaxOfTenItems]\n      );\n    }\n\n    const updated = mergeForm(this.state, updates) as SendMsgFormState;\n\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleMessageInput(event: React.KeyboardEvent) {\n    return this.handleUpdate({ text: (event.target as any).value }, false);\n  }\n\n  public handleMessageUpdate(message: string, name: string, submitting = false): boolean {\n    return this.handleUpdate({ text: message }, submitting);\n  }\n\n  public handleQuickRepliesUpdate(quickReplies: string[]): boolean {\n    return this.handleUpdate({ quickReplies });\n  }\n\n  public handleSendAllUpdate(sendAll: boolean): boolean {\n    return this.handleUpdate({ sendAll });\n  }\n\n  public handleAxios(body: any, type: any) {\n    axios\n      .get(`${this.props.assetStore.validateMedia.endpoint}?url=${body.url}&type=${body.type}`)\n      .then(response => {\n        if (response.data.is_valid) {\n          // make sure we validate untouched text fields and contact fields\n          // let valid = this.handleMessageUpdate(this.state.message.value, null, true);\n          let valid = true;\n\n          let templateVariables = this.state.templateVariables;\n          // make sure we don't have untouched template variables\n          this.state.templateVariables.forEach((variable: StringEntry, num: number) => {\n            const updated = validate(`Variable ${num + 1}`, variable.value, [Required]);\n            templateVariables = mutate(templateVariables, {\n              [num]: { $merge: updated }\n            }) as StringEntry[];\n            valid = valid && !hasErrors(updated);\n          });\n\n          valid = valid && !hasErrors(this.state.quickReplyEntry);\n\n          if (valid) {\n            this.setState({ validAttachment: false });\n            this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n            // notify our modal we are done\n            this.props.onClose(false);\n          } else {\n            this.setState({ templateVariables, valid });\n          }\n        } else {\n          this.setState({ attachmentError: `Not a valid ${type} url` });\n        }\n      })\n      .catch(error => {\n        this.setState({ attachmentError: `The attachment url is invalid!: ${error.toString()}` });\n      });\n  }\n\n  private handleSave(): void {\n    if (this.state.attachments.length > 0) {\n      const type = this.state.attachments[0].type;\n      const url = this.state.attachments[0].url;\n\n      let body = {\n        type,\n        url\n      };\n\n      if (type === 'application') {\n        body.type = 'document';\n      }\n\n      switch (type) {\n        case 'image':\n          this.handleAxios(body, 'image');\n          break;\n\n        case 'video':\n          this.handleAxios(body, 'video');\n          break;\n\n        case 'audio':\n          this.handleAxios(body, 'audio');\n          break;\n        case 'application':\n          this.handleAxios(body, 'document');\n          break;\n      }\n      this.setState({ validAttachment: true, attachmentError: null });\n    } else {\n      // don't continue if our message already has errors\n      if (hasErrors(this.state.message)) {\n        return;\n      }\n\n      // make sure we validate untouched text fields and contact fields\n      let valid = this.handleMessageUpdate(this.state.message.value, null, true);\n      let templateVariables = this.state.templateVariables;\n      // make sure we don't have untouched template variables\n      this.state.templateVariables.forEach((variable: StringEntry, num: number) => {\n        const updated = validate(`Variable ${num + 1}`, variable.value, [Required]);\n        templateVariables = mutate(templateVariables, {\n          [num]: { $merge: updated }\n        }) as StringEntry[];\n        valid = valid && !hasErrors(updated);\n      });\n\n      valid = valid && !hasErrors(this.state.quickReplyEntry);\n\n      if (templateVariables.length > 0 && !this.state.message.value) {\n        valid = !valid;\n      }\n      if (valid) {\n        this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n        // notify our modal we are done\n        this.props.onClose(false);\n      } else {\n        this.setState({ templateVariables, valid });\n      }\n    }\n  }\n\n  public handleAttachmentRemoved(index: number): void {\n    // we found a match, merge us in\n    const updated: any = mutate(this.state.attachments, {\n      $splice: [[index, 1]]\n    });\n    this.setState({ attachments: updated, attachmentError: null, validAttachment: false });\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private renderUpload(index: number, attachment: Attachment): JSX.Element {\n    return (\n      <div\n        className={styles.url_attachment}\n        key={index > -1 ? 'url_attachment_' + index : createUUID()}\n      >\n        <div className={styles.type_choice}>\n          <SelectElement\n            key={'attachment_type_' + index}\n            name={i18n.t('forms.type', 'Type')}\n            style={TembaSelectStyle.small}\n            entry={{\n              value: { name: attachment.type }\n            }}\n            options={TYPE_OPTIONS}\n            disabled={true}\n          />\n        </div>\n        <div className={styles.url}>\n          <span className={styles.upload}>\n            <Pill\n              icon=\"fe-download\"\n              text=\"Download\"\n              large={true}\n              onClick={() => {\n                window.open(attachment.url, '_blank');\n              }}\n            />\n            <div className={styles.remove_upload}>\n              <Pill\n                icon=\"fe-x\"\n                text=\"Remove\"\n                large={true}\n                onClick={() => {\n                  this.handleAttachmentRemoved(index);\n                }}\n              />\n            </div>\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  private handleUploadFile(files: FileList): void {\n    let attachments: any = this.state.attachments;\n\n    // if we have a csrf in our cookie, pass it along as a header\n    const csrf = getCookie('csrftoken');\n    const headers: any = csrf ? { 'X-CSRFToken': csrf } : {};\n\n    // mark us as ajax\n    headers['X-Requested-With'] = 'XMLHttpRequest';\n\n    const data = new FormData();\n    data.append('file', files[0]);\n    axios\n      .post(this.context.config.endpoints.attachments, data, { headers })\n      .then(response => {\n        attachments = mutate(attachments, {\n          $push: [{ type: response.data.type, url: response.data.url, uploaded: true }]\n        });\n        this.setState({ attachments });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  private renderAttachment(index: number, attachment: Attachment): JSX.Element {\n    let attachments: any = this.state.attachments;\n    return (\n      <>\n        <div\n          className={styles.url_attachment}\n          key={index > -1 ? 'url_attachment_' + index : createUUID()}\n        >\n          <div className={styles.type_choice}>\n            <SelectElement\n              key={'attachment_type_' + index}\n              style={TembaSelectStyle.small}\n              name={i18n.t('forms.type_options', 'Type Options')}\n              placeholder=\"Add Attachment\"\n              entry={{\n                value: index > -1 ? getAttachmentTypeOption(attachment.type) : null\n              }}\n              onChange={(option: any) => {\n                if (option.value === 'upload') {\n                  window.setTimeout(() => {\n                    this.filePicker.click();\n                  }, 200);\n                } else {\n                  if (index === -1) {\n                    attachments = mutate(attachments, {\n                      $push: [{ type: option.value, url: '' }]\n                    });\n                  } else {\n                    attachments = mutate(attachments, {\n                      [index]: {\n                        $set: { type: option.value, url: attachment.url }\n                      }\n                    });\n                  }\n                  this.setState({ attachments });\n                }\n              }}\n              options={TYPE_OPTIONS}\n            />\n          </div>\n          {index > -1 ? (\n            <>\n              <div className={styles.url}>\n                <TextInputElement\n                  placeholder=\"URL\"\n                  name={i18n.t('forms.url', 'URL')}\n                  style={TextInputStyle.small}\n                  onChange={(value: string) => {\n                    attachments = mutate(attachments, {\n                      [index]: { $set: { type: attachment.type, url: value } }\n                    });\n                    this.setState({ attachments });\n                  }}\n                  entry={{ value: attachment.url }}\n                  autocomplete={true}\n                />\n              </div>\n              <div className={styles.remove}>\n                <Pill\n                  icon=\"fe-x\"\n                  text=\" Remove\"\n                  large={true}\n                  onClick={() => {\n                    this.handleAttachmentRemoved(index);\n                  }}\n                />\n              </div>\n            </>\n          ) : null}\n        </div>\n        {this.state.validAttachment && !this.state.attachmentError ? (\n          <div className={styles.loading}>\n            Checking URL validity\n            <Loading size={10} units={6} color=\"#999999\" />\n          </div>\n        ) : null}\n        {this.state.attachmentError ? (\n          <div className={styles.error}>\n            <ImCross className={styles.crossIcon} />\n            {this.state.attachmentError}\n          </div>\n        ) : null}\n      </>\n    );\n  }\n\n  private renderAttachments(): JSX.Element {\n    const attachments = this.state.attachments.map((attachment, index: number) =>\n      attachment.uploaded\n        ? this.renderUpload(index, attachment)\n        : this.renderAttachment(index, attachment)\n    );\n\n    const emptyOption =\n      this.state.attachments.length < MAX_ATTACHMENTS\n        ? this.renderAttachment(-1, { url: '', type: '' })\n        : null;\n    return (\n      <>\n        <p>\n          {i18n.t(\n            'forms.send_msg_summary',\n            'Add an attachment to each message. The attachment can be a file you upload or a dynamic URL using expressions and variables from your Flow.',\n            { count: MAX_ATTACHMENTS }\n          )}\n        </p>\n        {attachments}\n        {emptyOption}\n        <input\n          style={{\n            display: 'none'\n          }}\n          ref={ele => {\n            this.filePicker = ele;\n          }}\n          type=\"file\"\n          onChange={e => this.handleUploadFile(e.target.files)}\n        />\n      </>\n    );\n  }\n\n  private handleTemplateChanged(selected: any[]): void {\n    const template = selected ? selected[0] : null;\n\n    if (!template) {\n      this.setState({\n        template: { value: null },\n        templateTranslation: null,\n        templateVariables: []\n      });\n    } else {\n      const templateTranslation = template.translations[0];\n      const templateVariables =\n        this.state.templateVariables.length === 0 ||\n        (this.state.template.value && this.state.template.value.id !== template.id)\n          ? range(0, templateTranslation.variable_count).map(() => {\n              return {\n                value: ''\n              };\n            })\n          : this.state.templateVariables;\n\n      this.setState({\n        template: { value: template },\n        templateTranslation,\n        templateVariables\n      });\n    }\n  }\n\n  private handleTemplateVariableChanged(updatedText: string, num: number): void {\n    const entry = validate(`Variable ${num + 1}`, updatedText, [Required]);\n    const templateVariables = mutate(this.state.templateVariables, {\n      $merge: { [num]: entry }\n    }) as StringEntry[];\n    this.setState({ templateVariables });\n  }\n\n  private handleShouldExcludeTemplate(template: any): boolean {\n    return !hasUseableTranslation(template as Template);\n  }\n\n  private renderTopicConfig(): JSX.Element {\n    return (\n      <>\n        <p>\n          {i18n.t(\n            'forms.send_msg_facebook_warning',\n            'Sending bulk messages over a Facebook channel requires that a topic be specified if the user has not sent a message in the last 24 hours. Setting a topic to use over Facebook is especially important for the first message in your flow.'\n          )}\n        </p>\n        <SelectElement\n          key={'fb_method_select'}\n          name={i18n.t('forms.method', 'Method')}\n          entry={this.state.topic}\n          onChange={this.handleTopicUpdate}\n          options={TOPIC_OPTIONS}\n          placeholder={i18n.t(\n            'forms.send_msg_facebook_topic_placeholder',\n            'Select a topic to use over Facebook'\n          )}\n          clearable={true}\n        />\n      </>\n    );\n  }\n\n  private handleTopicUpdate(topic: SelectOption) {\n    this.setState({ topic: { value: topic } });\n  }\n\n  private renderTemplateConfig(): JSX.Element {\n    return (\n      <>\n        <p>\n          {i18n.t(\n            'forms.whatsapp_warning',\n            'Sending messages over a WhatsApp channel requires that a template be used if you have not received a message from a contact in the last 24 hours. Setting a template to use over WhatsApp is especially important for the first message in your flow.'\n          )}\n        </p>\n        <AssetSelector\n          name={i18n.t('forms.template', 'template')}\n          noOptionsMessage=\"No templates found\"\n          assets={this.props.assetStore.templates}\n          entry={this.state.template}\n          onChange={this.handleTemplateChanged}\n          shouldExclude={this.handleShouldExcludeTemplate}\n          searchable={true}\n          formClearable={true}\n        />\n        {this.state.templateTranslation ? (\n          <>\n            <div className={styles.template_text}>{this.state.templateTranslation.content}</div>\n            {range(0, this.state.templateTranslation.variable_count).map((num: number) => {\n              return (\n                <div className={styles.variable} key={'tr_arg_' + num}>\n                  <TextInputElement\n                    name={`${i18n.t('forms.variable', 'Variable')} ${num + 1}`}\n                    showLabel={false}\n                    placeholder={`${i18n.t('forms.variable', 'Variable')} ${num + 1}`}\n                    onChange={(updatedText: string) => {\n                      this.handleTemplateVariableChanged(updatedText, num);\n                    }}\n                    entry={\n                      this.state.templateVariables[num] === undefined\n                        ? { value: '' }\n                        : this.state.templateVariables[num]\n                    }\n                    autocomplete={true}\n                  />\n                </div>\n              );\n            })}\n          </>\n        ) : null}\n      </>\n    );\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const quickReplies: Tab = {\n      name: 'Quick Replies',\n      body: (\n        <>\n          <p>\n            {i18n.t(\n              'forms.quick_replies_summary',\n              'Quick Replies are made into buttons for supported channels. For example, when asking a question, you might add a Quick Reply for \"Yes\" and one for \"No\".'\n            )}\n          </p>\n\n          <MultiChoiceInput\n            name={i18n.t('forms.quick_reply', 'quick_reply')}\n            helpText={\n              <Trans i18nKey=\"forms.add_quick_reply\">Add a new Quick Reply and press enter.</Trans>\n            }\n            items={this.state.quickReplies}\n            entry={this.state.quickReplyEntry}\n            onChange={this.handleQuickRepliesUpdate}\n          />\n        </>\n      ),\n      checked: this.state.quickReplies.value.length > 0,\n      hasErrors: hasErrors(this.state.quickReplyEntry)\n    };\n\n    const attachments: Tab = {\n      name: 'Attachments',\n      body: this.renderAttachments(),\n      checked: this.state.attachments.length > 0,\n      hasErrors: this.state.validAttachment\n    };\n\n    const advanced: Tab = {\n      name: 'Advanced',\n      body: (\n        <CheckboxElement\n          name={i18n.t('forms.all_destinations', 'All Destinations')}\n          title=\"All Destinations\"\n          labelClassName={styles.checkbox}\n          checked={this.state.sendAll}\n          description={i18n.t(\n            'forms.all_destinations',\n            \"Send a message to all destinations known for this contact. If you aren't sure what this means, leave it unchecked.\"\n          )}\n          onChange={this.handleSendAllUpdate}\n        />\n      ),\n      checked: this.state.sendAll\n    };\n\n    // const tabs = [quickReplies, attachments, advanced];\n    const tabs = [attachments];\n\n    if (hasFeature(this.context.config, FeatureFilter.HAS_WHATSAPP)) {\n      const templates: Tab = {\n        name: 'WhatsApp',\n        body: this.renderTemplateConfig(),\n        checked: this.state.template.value != null,\n        hasErrors: !!this.state.templateVariables.find((entry: StringEntry) => hasErrors(entry))\n      };\n      tabs.splice(0, 0, templates);\n    }\n\n    // currently, we aren't support to facebook\n\n    // if (hasFeature(this.context.config, FeatureFilter.HAS_FACEBOOK)) {\n    //   const templates: Tab = {\n    //     name: 'Facebook',\n    //     body: this.renderTopicConfig(),\n    //     checked: this.state.topic.value != null\n    //   };\n    //   tabs.splice(0, 0, templates);\n    // }\n\n    return (\n      <>\n        <Dialog\n          title={typeConfig.name}\n          headerClass={typeConfig.type}\n          buttons={this.getButtons()}\n          tabs={tabs}\n        >\n          <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n          <TextInputElement\n            name={i18n.t('forms.message', 'Message')}\n            showLabel={false}\n            counter=\".sms-counter\"\n            onChange={this.handleMessageUpdate}\n            entry={this.state.message}\n            autocomplete={true}\n            focus={true}\n            textarea={true}\n          />\n          <temba-charcount class=\"sms-counter\"></temba-charcount>\n          {renderIssues(this.props)}\n        </Dialog>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { SetRunResult } from 'flowTypes';\nimport { ellipsize, emphasize } from 'utils';\n\nexport const getSavePlaceholder = (value: string, name: string): JSX.Element => (\n  <div>\n    Save {emphasize(ellipsize(value, 100))} as {emphasize(name)}\n  </div>\n);\n\nexport const getClearPlaceholder = (name: string) => <div>Clear value for {emphasize(name)}</div>;\n\nconst SetRunResultComp: React.SFC<SetRunResult> = ({ value, name }): JSX.Element => {\n  if (value) {\n    return getSavePlaceholder(value, name);\n  }\n  return getClearPlaceholder(name);\n};\n\nexport default SetRunResultComp;\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { AssetEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, shouldRequireIf, StartIsNonNumeric, validate } from 'store/validators';\nimport { snakify } from 'utils';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport styles from './SetRunResultForm.module.scss';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { SelectOption } from 'components/form/select/SelectElement';\n\nexport interface SetRunResultFormState extends FormState {\n  name: AssetEntry;\n  value: StringEntry;\n  category: StringEntry;\n}\n\nexport default class SetRunResultForm extends React.PureComponent<\n  ActionFormProps,\n  SetRunResultFormState\n> {\n  options: SelectOption[] = [];\n\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n  }\n\n  public componentDidMount(): void {\n    const items = this.props.assetStore.results.items;\n    this.options = Object.keys(items).map((key: string) => {\n      return { name: items[key].name, value: key };\n    });\n  }\n\n  private handleNameUpdate(selected: Asset[]): void {\n    if (selected) {\n      this.handleUpdate({ name: selected[0] });\n    } else {\n      this.handleUpdate({ name: null });\n    }\n  }\n\n  public handleValueUpdate(value: string): boolean {\n    return this.handleUpdate({ value });\n  }\n\n  public handleCategoryUpdate(category: string): boolean {\n    return this.handleUpdate({ category });\n  }\n\n  private handleUpdate(\n    keys: { name?: Asset; value?: string; category?: string },\n    submitting: boolean = false\n  ): boolean {\n    const updates: Partial<SetRunResultFormState> = {};\n\n    if (keys.hasOwnProperty('name')) {\n      updates.name = validate(i18n.t('forms.name', 'Name'), keys.name, [\n        shouldRequireIf(submitting),\n        Alphanumeric,\n        StartIsNonNumeric\n      ]);\n    }\n\n    if (keys.hasOwnProperty('value')) {\n      updates.value = validate(i18n.t('forms.value', 'Value'), keys.value, []);\n    }\n\n    if (keys.hasOwnProperty('category')) {\n      updates.category = validate(i18n.t('forms.category', 'Category'), keys.category, []);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // make sure we validate untouched text fields\n    const valid = this.handleUpdate({ name: this.state.name.value }, true);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleCreateAssetFromInput(input: string): Asset {\n    return {\n      id: snakify(input),\n      name: input,\n      type: AssetType.Result\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    const snaked =\n      !hasErrors(this.state.name) && this.state.name.value\n        ? '.' + snakify(this.state.name.value.name)\n        : '';\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.form}>\n          <AssetSelector\n            name={i18n.t('forms.result', 'Result')}\n            assets={this.props.assetStore.results}\n            entry={this.state.name}\n            searchable={true}\n            createPrefix={i18n.t('forms.create_prefix', 'New: ')}\n            onChange={this.handleNameUpdate}\n            createAssetFromInput={this.handleCreateAssetFromInput}\n            formClearable={true}\n            showLabel={true}\n            valueKey=\"value\"\n            nameKey=\"name\"\n            additionalOptions={this.options}\n            helpText={\n              <Trans\n                i18nKey=\"forms.result_name_help\"\n                values={{ resultFormat: `@results${snaked}` }}\n              >\n                By naming the result, you can reference it later using [[resultFormat]]\n              </Trans>\n            }\n          />\n\n          <TextInputElement\n            __className={styles.value}\n            name={i18n.t('forms.value', 'Value')}\n            showLabel={true}\n            onChange={this.handleValueUpdate}\n            entry={this.state.value}\n            autocomplete={true}\n            helpText=\"The value to save for this result or empty to clears it. You can use expressions, for example: @(title(input))\"\n          />\n          <TextInputElement\n            __className={styles.category}\n            name={i18n.t('forms.category', 'Category')}\n            placeholder=\"Optional\"\n            showLabel={true}\n            onChange={this.handleCategoryUpdate}\n            entry={this.state.category}\n            autocomplete={false}\n            helpText=\"An optional category for your result. For age, the value might be 17, but the category might be 'Young Adult'\"\n          />\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { SetRunResultFormState } from 'components/flow/actions/setrunresult/SetRunResultForm';\nimport { Types } from 'config/interfaces';\nimport { SetRunResult } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { snakify } from 'utils';\n\nexport const initializeForm = (settings: NodeEditorSettings): SetRunResultFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.set_run_result) {\n    const action = settings.originalAction as SetRunResult;\n\n    return {\n      name: {\n        value: {\n          id: snakify(action.name),\n          name: action.name,\n          type: AssetType.Result\n        }\n      },\n      value: { value: action.value },\n      category: { value: action.category },\n      valid: true\n    };\n  }\n\n  return {\n    name: { value: null },\n    value: { value: '' },\n    category: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: SetRunResultFormState\n): SetRunResult => {\n  return {\n    type: Types.set_run_result,\n    name: state.name.value.name,\n    value: state.value.value,\n    category: state.category.value,\n    uuid: getActionUUID(settings, Types.set_run_result)\n  };\n};\n","import * as React from 'react';\nimport { renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { StartFlow } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\n\nconst StartFlowComp: React.SFC<StartFlow> = (\n  { flow: { name, uuid } },\n  context: any\n): JSX.Element => (\n  <>{renderAssetList([{ name, id: uuid, type: AssetType.Flow }], 3, context.config.endpoints)}</>\n);\n\nStartFlowComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default StartFlowComp;\n","import { getRecipients, renderAssetList, renderAsset } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { StartSession } from 'flowTypes';\nimport * as React from 'react';\nimport { AssetType } from 'store/flowContext';\n\nimport styles from './StartSession.module.scss';\n\nconst MAX_TO_SHOW = 5;\n\nexport const StartSessionComp: React.SFC<StartSession> = (\n  action: StartSession,\n  context: any\n): JSX.Element => {\n  const recipients = getRecipients(action);\n  return (\n    <div className={styles.node}>\n      <div className={styles.to}>\n        {action.create_contact\n          ? 'Create a new contact'\n          : action.contact_query\n          ? action.contact_query\n          : renderAssetList(recipients, MAX_TO_SHOW, context.config.endpoints)}\n      </div>\n      <div className={styles.flow}>\n        {renderAsset(\n          {\n            name: action.flow.name,\n            id: action.flow.uuid,\n            type: AssetType.Flow\n          },\n          context.config.endpoints\n        )}\n      </div>\n    </div>\n  );\n};\n\nStartSessionComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default StartSessionComp;\n","import i18n from 'config/i18n';\n\nexport const WAIT_LABEL = i18n.t('forms.message_label', 'If the message response...');\nexport const EXPRESSION_LABEL = i18n.t('forms.expression_label', 'If the expression...');\nexport const GROUP_LABEL = i18n.t(\n  'forms.split_by_groups',\n  \"Select the collections you'd like to split by below\"\n);\n\nexport const OPERAND_LOCALIZATION_DESC = i18n.t(\n  'forms.localize_rules',\n  'Sometimes languages need special rules to route things properly. If a translation is not provided, the original rule will be used.'\n);\n\n// We intentionally don't localize these names\nexport enum DefaultExitNames {\n  All_Responses = 'All Responses',\n  No_Response = 'No Response',\n  Any_Value = 'Any Value',\n  Other = 'Other'\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport {\n  AssetArrayEntry,\n  FormState,\n  mergeForm,\n  StringEntry,\n  SelectOptionEntry,\n  FormEntry\n} from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\nimport { renderIf } from 'utils';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport { initializeForm, stateToAction } from './helpers';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../helpers';\n\nexport const START_TYPE_ASSETS: SelectOption = {\n  name: 'Select recipients manually',\n  value: 'assets'\n};\nexport const START_TYPE_CREATE: SelectOption = {\n  name: 'Create a new contact',\n  value: 'create_contact'\n};\nexport const START_TYPE_QUERY: SelectOption = {\n  name: 'Select recipients from a query',\n  value: 'contact_query'\n};\n\nconst START_TYPE_OPTIONS = [START_TYPE_ASSETS, START_TYPE_QUERY, START_TYPE_CREATE];\n\nexport interface StartSessionFormState extends FormState {\n  recipients: AssetArrayEntry;\n  flow: FormEntry;\n  startType: SelectOptionEntry;\n  contactQuery: StringEntry;\n}\n\nexport class StartSessionForm extends React.Component<ActionFormProps, StartSessionFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleRecipientsChanged(recipients: Asset[]): boolean {\n    return this.handleUpdate({ recipients });\n  }\n\n  public handleFlowChanged(flows: Asset[]): boolean {\n    let flow = null;\n    if (flows && flows.length > 0) {\n      flow = flows[0];\n    }\n    return this.handleUpdate({ flow });\n  }\n\n  public handleStartTypeChanged(startType: SelectOption): boolean {\n    return this.handleUpdate({ startType });\n  }\n\n  public handleContactQueryChanged(contactQuery: string): boolean {\n    return this.handleUpdate({ contactQuery });\n  }\n\n  private handleUpdate(\n    keys: { flow?: Asset; recipients?: Asset[]; startType?: SelectOption; contactQuery?: string },\n    submitting = false\n  ): boolean {\n    const updates: Partial<StartSessionFormState> = {};\n\n    if (keys.hasOwnProperty('startType')) {\n      updates.startType = { value: keys.startType };\n      if (keys.startType !== START_TYPE_ASSETS) {\n        updates.recipients = { value: [] };\n      }\n\n      if (keys.startType !== START_TYPE_QUERY) {\n        updates.contactQuery = { value: '' };\n      }\n    }\n\n    if (keys.hasOwnProperty('contactQuery')) {\n      updates.contactQuery = validate(\n        i18n.t('forms.contact_query', 'Contact Query'),\n        keys.contactQuery,\n        [shouldRequireIf(submitting && this.state.startType.value === START_TYPE_QUERY)]\n      );\n    }\n\n    if (keys.hasOwnProperty('recipients')) {\n      updates.recipients = validate(i18n.t('forms.recipients', 'Recipients'), keys.recipients, [\n        shouldRequireIf(submitting && this.state.startType.value === START_TYPE_ASSETS)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('flow')) {\n      updates.flow = validate(i18n.t('forms.flow', 'Flow'), keys.flow, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate in case they never updated an empty field\n    const valid = this.handleUpdate(\n      {\n        recipients: this.state.recipients.value,\n        flow: this.state.flow.value,\n        contactQuery: this.state.contactQuery.value\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div>\n          <SelectElement\n            key=\"start_type_select\"\n            name={i18n.t('forms.start_type', 'Start Type')}\n            entry={this.state.startType}\n            onChange={this.handleStartTypeChanged}\n            options={START_TYPE_OPTIONS}\n          />\n        </div>\n        <p />\n        <div>\n          {renderIf(this.state.startType.value === START_TYPE_ASSETS)(\n            <div data-testid=\"recipients\">\n              <AssetSelector\n                name={i18n.t('forms.recipients', 'Recipients')}\n                placeholder=\"Choose who should be started in the flow\"\n                assets={this.props.assetStore.recipients}\n                entry={this.state.recipients}\n                searchable={true}\n                multi={true}\n                onChange={this.handleRecipientsChanged}\n              />\n              <p />\n            </div>\n          )}\n\n          {renderIf(this.state.startType.value === START_TYPE_QUERY)(\n            <div data-testid=\"contact_query\">\n              <TextInputElement\n                name={i18n.t('forms.contact_query', 'Contact Query')}\n                placeholder={'household_id = @fields.household_id'}\n                onChange={this.handleContactQueryChanged}\n                entry={this.state.contactQuery}\n                autocomplete={true}\n                focus={true}\n              />\n              <p />\n            </div>\n          )}\n\n          <AssetSelector\n            name={i18n.t('forms.flow', 'Flow')}\n            placeholder=\"Choose which flow to start\"\n            assets={this.props.assetStore.flows}\n            entry={this.state.flow}\n            searchable={true}\n            onChange={this.handleFlowChanged}\n          />\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n\nexport default StartSessionForm;\n","import {\n  getActionUUID,\n  getExpressions,\n  getRecipients,\n  getRecipientsByAsset\n} from 'components/flow/actions/helpers';\nimport {\n  StartSessionFormState,\n  START_TYPE_CREATE,\n  START_TYPE_ASSETS,\n  START_TYPE_QUERY\n} from 'components/flow/actions/startsession/StartSessionForm';\nimport { Types } from 'config/interfaces';\nimport { StartSession } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): StartSessionFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.start_session) {\n    const action = settings.originalAction as StartSession;\n\n    const init = {\n      recipients: {\n        value: getRecipients(action)\n      },\n      flow: {\n        value: action.flow\n      },\n      startType: {\n        value: action.create_contact\n          ? START_TYPE_CREATE\n          : action.contact_query\n          ? START_TYPE_QUERY\n          : START_TYPE_ASSETS\n      },\n      contactQuery: { value: action.contact_query || '' },\n      valid: true\n    };\n\n    return init;\n  }\n\n  return {\n    recipients: { value: [] },\n    flow: { value: null },\n    startType: { value: START_TYPE_ASSETS },\n    contactQuery: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: StartSessionFormState\n): StartSession => {\n  const flow = state.flow.value;\n\n  const action: StartSession = {\n    legacy_vars: getExpressions(state.recipients.value),\n    contacts: getRecipientsByAsset(state.recipients.value, AssetType.Contact),\n    groups: getRecipientsByAsset(state.recipients.value, AssetType.Group),\n    create_contact: state.startType.value === START_TYPE_CREATE,\n    flow: { name: flow.name, uuid: flow.uuid },\n    type: Types.start_session,\n    uuid: getActionUUID(settings, Types.start_session)\n  };\n\n  // only include contact query if it is set\n  if (state.contactQuery.value) {\n    action['contact_query'] = state.contactQuery.value;\n  }\n\n  return action;\n};\n","import { TransferAirtime } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './TransferAirtime.module.scss';\n\nconst TransferAirtimeComp: React.SFC<TransferAirtime> = (transfer): JSX.Element => {\n  const details = Object.keys(transfer.amounts).map((key: string) => {\n    return (\n      <div key={'transfer_' + key}>\n        <div className={styles.amount}>{transfer.amounts[key]}</div>\n        <div className={styles.code}>{key}</div>\n      </div>\n    );\n  });\n\n  return <div>{details}</div>;\n};\n\nexport default TransferAirtimeComp;\n","import { getLanguageForCode } from 'components/flow/actions/updatecontact/helpers';\nimport { Types } from 'config/interfaces';\nimport {\n  SetContactAttribute,\n  SetContactChannel,\n  SetContactLanguage,\n  SetContactName,\n  SetContactStatus\n} from 'flowTypes';\nimport * as React from 'react';\nimport { emphasize } from 'utils';\nconst styles = require('components/shared.module.scss');\n\nconst withEmph = (text: string, emph: boolean) => (emph ? emphasize(text) : text);\n\nexport const renderSetText = (\n  name: string,\n  value: string,\n  emphasizeName: boolean = false\n): JSX.Element => {\n  if (value) {\n    return (\n      <div className={`${styles.node_asset}`}>\n        Set {withEmph(name, emphasizeName)} to {emphasize(value)}.\n      </div>\n    );\n  } else {\n    return <div>Clear {withEmph(name, emphasizeName)}.</div>;\n  }\n};\n\nconst UpdateContactComp: React.SFC<SetContactAttribute> = (\n  action: SetContactAttribute\n): JSX.Element => {\n  if (action.type === Types.set_contact_field) {\n    return renderSetText(action.field.key, action.value, true);\n  }\n\n  if (action.type === Types.set_contact_channel) {\n    const setContactAction = action as SetContactChannel;\n    return renderSetText(\n      'channel',\n      setContactAction.channel ? setContactAction.channel.name : null,\n      false\n    );\n  }\n\n  if (action.type === Types.set_contact_language) {\n    const setLanguageAction = action as SetContactLanguage;\n    return renderSetText(\n      'language',\n      getLanguageForCode(setLanguageAction.language, (action as any).languages),\n      false\n    );\n  }\n\n  if (action.type === Types.set_contact_status) {\n    return renderSetText('status', (action as SetContactStatus).status, false);\n  }\n\n  if (action.type === Types.set_contact_name) {\n    return renderSetText('name', (action as SetContactName).name, false);\n  }\n\n  return null;\n};\n\nexport default UpdateContactComp;\n","import {\n  CHANNEL_PROPERTY,\n  LANGUAGE_PROPERTY,\n  NAME_PROPERTY,\n  STATUS_PROPERTY\n} from 'components/flow/props';\nimport { isOnlineFlowType } from 'config/helpers';\nimport { FlowTypes } from 'config/interfaces';\nimport { Asset, RenderNode } from 'store/flowContext';\n\nexport interface DragPoint {\n  exitUUID: string;\n  nodeUUID: string;\n}\n\nexport const getDraggedFrom = (ghostNode: RenderNode): DragPoint => {\n  if (ghostNode.ghost) {\n    const exitUUIDs = Object.keys(ghostNode.inboundConnections);\n    if (exitUUIDs.length > 0) {\n      const exitUUID = exitUUIDs[0];\n      const nodeUUID = ghostNode.inboundConnections[exitUUID];\n      return { exitUUID, nodeUUID };\n    }\n  }\n};\n\nconst ONLINE_PROPERTIES: Asset[] = [\n  NAME_PROPERTY,\n  LANGUAGE_PROPERTY,\n  CHANNEL_PROPERTY,\n  STATUS_PROPERTY\n];\nconst OFFLINE_PROPERTIES: Asset[] = [NAME_PROPERTY, LANGUAGE_PROPERTY, STATUS_PROPERTY];\n\nexport const getContactProperties = (flowType: FlowTypes = null): Asset[] => {\n  return !flowType || isOnlineFlowType(flowType) ? ONLINE_PROPERTIES : OFFLINE_PROPERTIES;\n};\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { DefaultExitNames } from 'components/flow/routers/constants';\nimport { Operators, Types } from 'config/interfaces';\nimport {\n  Action,\n  CallResthook,\n  CallWebhook,\n  Case,\n  Category,\n  Exit,\n  FlowNode,\n  Router,\n  RouterTypes,\n  SwitchRouter,\n  TransferAirtime,\n  UIConfig,\n  WebhookExitNames,\n  CallClassifier,\n  OpenTicket\n} from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { createUUID, snakify } from 'utils';\n\nexport interface CategorizedCases {\n  cases: Case[];\n  categories: Category[];\n  exits: Exit[];\n  caseConfig: { [uuid: string]: any };\n}\nexport interface ResolvedRoutes extends CategorizedCases {\n  defaultCategory: string;\n  timeoutCategory?: string;\n}\n\nexport const createRenderNode = (\n  uuid: string,\n  router: Router,\n  exits: Exit[],\n  type: Types,\n  actions: Action[] = [],\n  uiConfig: { [key: string]: any } = {}\n): RenderNode => {\n  const renderNode: RenderNode = {\n    node: {\n      uuid,\n      actions,\n      router,\n      exits\n    },\n    ui: {\n      type,\n      position: null,\n      config: uiConfig\n    },\n    inboundConnections: {}\n  };\n  return renderNode;\n};\n\nexport const hasCases = (node: FlowNode): boolean => {\n  if (\n    node.router &&\n    (node.router as SwitchRouter).cases &&\n    (node.router as SwitchRouter).cases.length\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const getCategories = (renderNode: RenderNode): Category[] => {\n  if (renderNode.node.router) {\n    return renderNode.node.router.categories;\n  }\n  return [];\n};\n\nexport const createCaseProps = (cases: Case[], renderNode: RenderNode): CaseProps[] => {\n  const categories: Category[] = getCategories(renderNode);\n\n  // make sure we don't mutate the in memory version of our cases\n  const newCases = JSON.parse(JSON.stringify(cases));\n  return newCases.map((kase: Case) => {\n    const matchingCategory = categories.find(\n      (category: Category) => category.uuid === kase.category_uuid\n    );\n\n    if (isRelativeDate(kase.type)) {\n      if (renderNode.ui.config && renderNode.ui.config.cases) {\n        const caseConfig = renderNode.ui.config.cases[kase.uuid];\n        if (caseConfig && caseConfig.arguments) {\n          kase.arguments = caseConfig.arguments;\n        }\n      }\n    }\n\n    return {\n      uuid: kase.uuid,\n      kase,\n      categoryName: matchingCategory ? matchingCategory.name : null,\n      valid: true\n    };\n  });\n};\n\nexport const isRelativeDate = (operatorType: Operators): boolean => {\n  return !![Operators.has_date_eq, Operators.has_date_gt, Operators.has_date_lt].find(\n    (type: string) => operatorType === type\n  );\n};\n\nconst isCategoryMatch = (cat: Category, kase: CaseProps) => {\n  // see if we have the same name\n  return cat.name.toLowerCase().trim() === kase.categoryName.trim().toLowerCase();\n};\n\n/**\n * Given a set of cases and previous categories, determines correct merging of cases\n * and the union of categories\n */\nexport const categorizeCases = (\n  newCases: CaseProps[],\n  originalNode: FlowNode\n): CategorizedCases => {\n  const categories: Category[] = [];\n  const cases: Case[] = [];\n  const exits: Exit[] = [];\n  const caseConfig: UIConfig = {};\n\n  const originalRouter = originalNode && originalNode.router;\n  const previousCategories = (originalRouter && originalRouter.categories) || [];\n\n  // look over the new cases and match up categories and exits\n  for (const newCase of newCases) {\n    // ignore empty cases\n    if (!newCase.categoryName || newCase.categoryName.trim().length === 0) {\n      continue;\n    }\n\n    // convert relative dates to expressions with configs\n    if (isRelativeDate(newCase.kase.type)) {\n      caseConfig[newCase.uuid] = { arguments: newCase.kase.arguments };\n      newCase.kase.arguments = [`@(datetime_add(today(), ${newCase.kase.arguments[0]}, \"D\"))`];\n    }\n\n    //  see if it exists on a previous case\n    let category = categories.find((cat: Category) => isCategoryMatch(cat, newCase));\n\n    // if not, see if that category exists on our old node\n    if (!category) {\n      category = previousCategories.find((cat: Category) => isCategoryMatch(cat, newCase));\n\n      // still no category, lets see if we can find a case uuid match\n      if (!category) {\n        const router = getSwitchRouter(originalNode);\n        if (router) {\n          const previousCase = router.cases.find((kase: Case) => kase.uuid === newCase.uuid);\n          if (previousCase) {\n            const previousCategory = previousCategories.find(\n              (cat: Category) => cat.uuid === previousCase.category_uuid\n            );\n\n            if (previousCategory) {\n              category = { ...previousCategory, name: newCase.categoryName };\n            }\n          }\n        }\n      }\n\n      // don't pull over an old category more than once\n      if (category && categories.find((cat: Category) => cat.uuid === category.uuid)) {\n        category = null;\n      }\n\n      // we found an old category, bring it and its exit over\n      if (category) {\n        categories.push(category);\n        const previousExit = originalNode.exits.find(\n          (exit: Exit) => category.exit_uuid === exit.uuid\n        );\n        exits.push(previousExit);\n      }\n    }\n\n    // if still no category, finally lets just create a new one\n    if (!category) {\n      const exit: Exit = {\n        uuid: createUUID()\n      };\n\n      exits.push(exit);\n\n      category = {\n        uuid: createUUID(),\n        name: newCase.categoryName,\n        exit_uuid: exit.uuid\n      };\n\n      categories.push(category);\n    }\n\n    // lastly, add our case\n    cases.push({\n      ...newCase.kase,\n      category_uuid: category.uuid\n    });\n  }\n\n  return { cases, categories, exits, caseConfig };\n};\n\nexport const getSwitchRouter = (node: FlowNode): SwitchRouter => {\n  if (node && node.router && node.router.type === RouterTypes.switch) {\n    return node.router as SwitchRouter;\n  }\n  return null;\n};\n\n/**\n * Adds a default route, reusing the previous one if possible\n * @param originalNode\n */\nexport const getDefaultRoute = (\n  defaultCategoryName: string,\n  originalNode: FlowNode\n): { defaultCategory: Category; defaultExit: Exit } => {\n  const originalRouter = getSwitchRouter(originalNode);\n\n  // use the previous default if it had one\n  if (originalRouter) {\n    const defaultCategory = originalRouter.categories.find(\n      (cat: Category) => cat.uuid === originalRouter.default_category_uuid\n    );\n\n    const defaultExit = originalNode.exits.find((e: Exit) => e.uuid === defaultCategory.exit_uuid);\n\n    defaultCategory.name = defaultCategoryName;\n\n    return { defaultCategory, defaultExit };\n  }\n  // otherwise, create a new exit and category\n  else {\n    const defaultExit: Exit = {\n      uuid: createUUID()\n    };\n\n    const defaultCategory = {\n      uuid: createUUID(),\n      name: defaultCategoryName,\n      exit_uuid: defaultExit.uuid\n    };\n\n    return { defaultCategory, defaultExit };\n  }\n};\n\nconst getTimeoutRoute = (\n  originalNode: FlowNode\n): { timeoutCategory: Category; timeoutExit: Exit } => {\n  let timeoutCategory: Category = null;\n  let timeoutExit: Exit = null;\n\n  const originalRouter = getSwitchRouter(originalNode);\n\n  // see if our previous node had a timeout case\n  if (originalRouter) {\n    if (originalRouter.wait && originalRouter.wait.timeout) {\n      const previousCategory = originalRouter.wait.timeout.category_uuid;\n      timeoutCategory = originalRouter.categories.find(\n        (cat: Category) => cat.uuid === previousCategory\n      );\n      timeoutExit = originalNode.exits.find(\n        (exit: Exit) => exit.uuid === timeoutCategory.exit_uuid\n      );\n    }\n  }\n\n  if (!timeoutCategory) {\n    // create a new route\n    timeoutExit = {\n      uuid: createUUID()\n    };\n\n    timeoutCategory = {\n      uuid: createUUID(),\n      name: DefaultExitNames.No_Response,\n      exit_uuid: timeoutExit.uuid\n    };\n  }\n\n  return { timeoutCategory, timeoutExit };\n};\n\n/**\n * Given a set of cases and previous categories, determines correct merging of cases\n * and the union of categories\n */\nexport const resolveRoutes = (\n  newCases: CaseProps[],\n  hasTimeout: boolean,\n  originalNode: FlowNode,\n  defaultCategoryName: string = null\n): ResolvedRoutes => {\n  const resolved = categorizeCases(newCases, originalNode);\n\n  let resolvedDefaultCategory = defaultCategoryName;\n  if (!resolvedDefaultCategory) {\n    resolvedDefaultCategory =\n      resolved.categories.length > 0 ? DefaultExitNames.Other : DefaultExitNames.All_Responses;\n  }\n\n  // tack on our other category\n  const { defaultCategory, defaultExit } = getDefaultRoute(resolvedDefaultCategory, originalNode);\n  resolved.categories.push(defaultCategory);\n  resolved.exits.push(defaultExit);\n\n  const results: ResolvedRoutes = {\n    ...resolved,\n    defaultCategory: defaultCategory.uuid\n  };\n\n  // add in a timeout route if we need one\n  if (hasTimeout) {\n    const { timeoutCategory, timeoutExit } = getTimeoutRoute(originalNode);\n    resolved.categories.push(timeoutCategory);\n    resolved.exits.push(timeoutExit);\n    results.timeoutCategory = timeoutCategory.uuid;\n  }\n\n  return results;\n};\n\nexport const createWebhookBasedNode = (\n  action: CallWebhook | CallResthook | OpenTicket | TransferAirtime,\n  originalNode: RenderNode,\n  useCategoryTest: boolean\n): RenderNode => {\n  const exits: Exit[] = [];\n  let cases: Case[] = [];\n  let categories: Category[] = [];\n\n  // see if we are editing an existing router so we reuse exits\n  if (\n    originalNode &&\n    originalNode.node.actions.length === 1 &&\n    originalNode.node.actions[0].type === action.type\n  ) {\n    const previousRouter = getSwitchRouter(originalNode.node);\n    originalNode.node.exits.forEach((exit: any) => exits.push(exit));\n    previousRouter.cases.forEach(kase => cases.push(kase));\n    originalNode.node.router.categories.forEach(category => categories.push(category));\n  } else {\n    // Otherwise, let's create some new ones\n    exits.push(\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      },\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      }\n    );\n\n    categories = [\n      {\n        uuid: createUUID(),\n        name: WebhookExitNames.Success,\n        exit_uuid: exits[0].uuid\n      },\n      {\n        uuid: createUUID(),\n        name: WebhookExitNames.Failure,\n        exit_uuid: exits[1].uuid\n      }\n    ];\n\n    cases = [\n      {\n        uuid: createUUID(),\n        type: useCategoryTest ? Operators.has_category : Operators.has_only_text,\n        arguments: [WebhookExitNames.Success],\n        category_uuid: categories[0].uuid\n      }\n    ];\n  }\n\n  let operand = '@results.' + snakify(action.result_name);\n  if (!useCategoryTest) {\n    operand += '.category';\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    operand: operand,\n    cases,\n    categories,\n    default_category_uuid: categories[categories.length - 1].uuid\n  };\n\n  let splitType = Types.split_by_webhook;\n  if (action.type === Types.call_resthook) {\n    splitType = Types.split_by_resthook;\n  } else if (action.type === Types.open_ticket) {\n    splitType = Types.split_by_ticket;\n  } else if (action.type === Types.transfer_airtime) {\n    splitType = Types.split_by_airtime;\n  }\n\n  return createRenderNode(originalNode.node.uuid, router, exits, splitType, [action]);\n};\n\nexport const createSplitOnActionResultNode = (\n  action: CallClassifier,\n  originalNode: RenderNode\n): RenderNode => {\n  const splitType = Types.split_by_intent;\n  const exits: Exit[] = [];\n  const router: SwitchRouter = {\n    cases: [],\n    operand: '',\n    categories: [],\n    type: RouterTypes.switch,\n    default_category_uuid: null\n  };\n\n  return createRenderNode(originalNode.node.uuid, router, exits, splitType, [action]);\n};\n","import { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport {\n  CallResthook,\n  CallWebhook,\n  Category,\n  Exit,\n  FlowNode,\n  RouterTypes,\n  TransferAirtime,\n  Action,\n  AnyAction,\n  FlowIssue\n} from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { getType } from 'config/typeConfigs';\n\nexport const getCategoriesForExit = (renderNode: RenderNode, exit: Exit): Category[] => {\n  // if we are\n  const isGroupSplit = getType(renderNode) === Types.split_by_groups;\n\n  if (!renderNode.node.router) {\n    return [];\n  }\n  return renderNode.node.router.categories\n    .filter((cat: Category) => cat.exit_uuid === exit.uuid)\n    .map((cat: Category) => {\n      if (isGroupSplit) {\n        return {\n          ...cat\n        };\n      } else {\n        return { ...cat, missing: false };\n      }\n    });\n};\n\nexport const getResultName = (node: FlowNode) => {\n  const switchRouter = getSwitchRouter(node);\n  if (switchRouter && switchRouter.result_name) {\n    return switchRouter.result_name;\n  }\n\n  if (node.router && node.router.type === RouterTypes.random) {\n    return node.router.result_name;\n  }\n\n  if (node.actions.length === 1) {\n    const action = node.actions[0];\n    if (\n      action.type === Types.call_webhook ||\n      action.type === Types.call_resthook ||\n      action.type === Types.open_ticket ||\n      action.type === Types.transfer_airtime\n    ) {\n      const resultAction = action as CallWebhook | CallResthook | TransferAirtime;\n      return resultAction.result_name;\n    }\n  }\n};\n\nexport const getVisibleActions = (renderNode: RenderNode): Action[] => {\n  // subflow nodes hide their set run results\n  if (getType(renderNode) === Types.split_by_subflow) {\n    return renderNode.node.actions.filter((action: Action) => action.type !== Types.set_run_result);\n  }\n\n  return renderNode.node.actions;\n};\n\nexport const filterIssuesForAction = (\n  nodeUUID: string,\n  action: AnyAction,\n  issues: FlowIssue[]\n): FlowIssue[] => {\n  return issues.filter(issue => issue.node_uuid === nodeUUID && issue.action_uuid === action.uuid);\n};\n","import { getResultName } from 'components/flow/node/helpers';\nimport { Revision } from 'components/revisions/RevisionExplorer';\nimport { Types } from 'config/interfaces';\nimport {\n  AnyAction,\n  Dimensions,\n  FlowDefinition,\n  FlowNode,\n  FlowPosition,\n  RouterTypes,\n  StickyNote,\n  SwitchRouter\n} from 'flowTypes';\nimport {\n  Asset,\n  AssetMap,\n  AssetStore,\n  AssetType,\n  Reference,\n  RenderNode,\n  RenderNodeMap\n} from 'store/flowContext';\nimport { assetListToMap, detectLoops, getActionIndex, getExitIndex, getNode } from 'store/helpers';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { LocalizationUpdates } from 'store/thunks';\nimport { createUUID, merge, push, set, snakify, snapToGrid, splice, unset } from 'utils';\n\nconst mutate = require('immutability-helper');\n\nexport const uniquifyNode = (newNode: FlowNode): FlowNode => {\n  // Give our node a unique uuid\n  return mutate(newNode, merge({ uuid: createUUID() }));\n};\n\nexport const getDefaultExit = (node: FlowNode) => {\n  if (node.router.type === RouterTypes.switch) {\n    const switchRouter = node.router as SwitchRouter;\n    return node.exits.find(exit => exit.uuid === switchRouter.default_category_uuid);\n  }\n};\n\nexport const addAssets = (type: string, store: AssetStore, assets: Asset[]): AssetStore => {\n  const assetMap = assetListToMap(assets);\n  const updated = mutate(store, {\n    [type]: {\n      items: {\n        $merge: assetMap\n      }\n    }\n  });\n  return updated;\n};\n\nexport const removeResultReference = (\n  resultName: string,\n  items: AssetMap,\n  reference: Reference\n): AssetMap => {\n  const key = snakify(resultName);\n\n  if (key in items) {\n    const item = items[key];\n    const filteredRefs = item.references.filter(\n      (ref: Reference) =>\n        ref.nodeUUID !== reference.nodeUUID || ref.actionUUID !== reference.actionUUID\n    );\n\n    if (filteredRefs.length === 0) {\n      return mutate(items, { $unset: [key] });\n    }\n\n    return mutate(items, { [key]: { references: { $set: filteredRefs } } });\n  }\n  return items;\n};\n\nexport const removeResultFromStore = (\n  resultName: string,\n  assets: AssetStore,\n  reference: Reference\n): AssetStore => {\n  if (resultName && assets.results) {\n    const items = removeResultReference(resultName, assets.results.items, reference);\n    return mutate(assets, { results: { items: { $set: items } } });\n  }\n  return assets;\n};\n\nexport const addResultToStore = (\n  resultName: string,\n  assets: AssetStore,\n  reference: Reference\n): AssetStore => {\n  if (resultName) {\n    const items = addResult(resultName, assets.results.items, reference);\n    return mutate(assets, { results: { items: { $set: items } } });\n  }\n};\n\nexport const addResult = (resultName: string, items: AssetMap, reference: Reference): AssetMap => {\n  const key = snakify(resultName);\n  const result =\n    key in items\n      ? items[key]\n      : {\n          name: resultName,\n          id: key,\n          type: AssetType.Result,\n          references: []\n        };\n\n  if (\n    !result.references.find(\n      (ref: Reference) =>\n        ref.nodeUUID === reference.nodeUUID && ref.actionUUID === reference.actionUUID\n    )\n  ) {\n    result.references.push(reference);\n  }\n\n  return mutate(items, { $merge: { [key]: result } });\n};\n\nexport const addRevision = (assets: AssetStore, revision: Revision): AssetStore => {\n  return mutate(assets, {\n    revisions: { items: { $merge: { [revision.id]: revision } } }\n  });\n};\n\nexport const addFlowResult = (assets: AssetStore, node: FlowNode): AssetStore => {\n  let updated = assets;\n\n  // TODO: initialize these to empties further up to avoid this\n  if (!updated) {\n    updated = { results: { items: {}, type: AssetType.Result } };\n  }\n\n  if (!updated.results) {\n    updated.results = { items: {}, type: AssetType.Result };\n  }\n\n  const resultName = getResultName(node);\n  if (resultName) {\n    const items = addResult(resultName, assets.results.items, {\n      nodeUUID: node.uuid\n    });\n    return mutate(assets, { results: { items: { $set: items } } });\n  }\n\n  return assets;\n};\n\n/**\n * Update the destination for a specific exit. Updates destination_uuid and\n * the inboundConnections for the given node\n * @param nodes\n * @param fromNodeUUID\n * @param fromExitUUID\n * @param destination\n */\nexport const updateConnection = (\n  nodes: RenderNodeMap,\n  fromNodeUUID: string,\n  fromExitUUID: string,\n  destinationNodeUUID: string\n): RenderNodeMap => {\n  let updatedNodes = nodes;\n  const fromNode = getNode(nodes, fromNodeUUID);\n\n  // make sure our destination exits if they provided one\n  if (destinationNodeUUID) {\n    getNode(nodes, destinationNodeUUID);\n  }\n\n  const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\n  const previousDestination = fromNode.node.exits[exitIdx].destination_uuid;\n\n  updatedNodes = mutate(updatedNodes, {\n    [fromNodeUUID]: {\n      node: {\n        exits: {\n          [exitIdx]: {\n            destination_uuid: set(destinationNodeUUID)\n          }\n        }\n      }\n    }\n  });\n\n  // update our pointers\n  if (destinationNodeUUID) {\n    updatedNodes = mutate(updatedNodes, {\n      [destinationNodeUUID]: {\n        inboundConnections: merge({ [fromExitUUID]: fromNodeUUID })\n      }\n    });\n  }\n\n  if (previousDestination != null) {\n    updatedNodes = mutate(updatedNodes, {\n      [previousDestination]: { inboundConnections: unset([[fromExitUUID]]) }\n    });\n  }\n\n  return updatedNodes;\n};\n\nexport const addLanguage = (languages: Asset[], language: Asset): Asset[] => {\n  return mutate(languages, push([language]));\n};\n\n/**\n * Removes a spcific destination for an exit and the associated inboundConnection.\n * @param nodes\n * @param fromNodeUUID\n * @param fromExitUUID\n */\nexport const removeConnection = (\n  nodes: RenderNodeMap,\n  fromNodeUUID: string,\n  fromExitUUID: string\n): RenderNodeMap => {\n  return updateConnection(nodes, fromNodeUUID, fromExitUUID, null);\n};\n\n/**\n * Adds a given RenderNode to our node map or updates an existing one.\n * Updates destinations for any inboundConnections provided and updates\n * inboundConnections for any destination_uuid our exits point to.\n * @param nodes\n * @param node the node to add, if unique uuid, it will be added\n */\nexport const mergeNode = (nodes: RenderNodeMap, node: RenderNode): RenderNodeMap => {\n  let updatedNodes = nodes;\n\n  // if the node is already there, remove it first\n  if (updatedNodes[node.node.uuid]) {\n    updatedNodes = removeNode(nodes, node.node.uuid);\n  }\n\n  // add our node upadted node\n  updatedNodes = mutate(nodes, merge({ [node.node.uuid]: node }));\n\n  // if we have inbound connections, update our nodes accordingly\n  for (const fromExitUUID of Object.keys(node.inboundConnections)) {\n    const fromNodeUUID = node.inboundConnections[fromExitUUID];\n\n    const fromNode = getNode(nodes, fromNodeUUID);\n    const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\n\n    updatedNodes = mutate(updatedNodes, {\n      [fromNodeUUID]: {\n        node: {\n          exits: {\n            [exitIdx]: merge({ destination_uuid: node.node.uuid })\n          }\n        }\n      }\n    });\n  }\n\n  return updatedNodes;\n};\n\n/**\n * Adds a given action to the provided node\n * @param nodes\n * @param nodeUUID\n * @param action\n */\nexport const addAction = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  action: AnyAction\n): RenderNodeMap => {\n  // check that our node exists\n  getNode(nodes, nodeUUID);\n  return mutate(nodes, { [nodeUUID]: { node: { actions: push([action]) } } });\n};\n\n/**\n * Updates the given action in place by it's uuid\n * @param nodes\n * @param nodeUUID\n * @param action\n */\nexport const updateAction = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  newAction: AnyAction,\n  originalAction?: AnyAction\n) => {\n  const originalNode = getNode(nodes, nodeUUID);\n  // If we have existing actions, find our action and update it\n  const actionIdx = originalAction ? getActionIndex(originalNode.node, originalAction.uuid) : 0;\n  return mutate(nodes, {\n    [nodeUUID]: {\n      node: {\n        actions: { [actionIdx]: set(newAction) }\n      }\n    }\n  });\n};\n\nexport const spliceInAction = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  action: AnyAction\n): RenderNodeMap => {\n  const { [nodeUUID]: previousNode } = nodes;\n\n  const otherExit = getDefaultExit(previousNode.node);\n  const destination = otherExit ? otherExit.destination_uuid : null;\n\n  // remove our previous node\n  let updatedNodes = removeNode(nodes, previousNode.node.uuid, false);\n\n  const newNode: RenderNode = {\n    node: {\n      uuid: createUUID(),\n      actions: [action],\n      exits: [{ uuid: createUUID(), destination_uuid: destination }]\n    },\n    ui: { position: previousNode.ui.position, type: Types.execute_actions },\n    inboundConnections: previousNode.inboundConnections\n  };\n\n  // add our new node\n  updatedNodes = mergeNode(updatedNodes, newNode);\n\n  return updatedNodes;\n};\n\n/** Removes a specific action from a node */\nexport const removeAction = (nodes: RenderNodeMap, nodeUUID: string, actionUUID: string) => {\n  const renderNode = getNode(nodes, nodeUUID);\n  const actionIdx = getActionIndex(renderNode.node, actionUUID);\n  return mutate(nodes, {\n    [nodeUUID]: { node: { actions: splice([[actionIdx, 1]]) } }\n  });\n};\n\n/**\n * Moves a single action up in the list for the given node\n * @param nodes\n * @param nodeUUID\n * @param action\n */\nexport const moveActionUp = (nodes: RenderNodeMap, nodeUUID: string, actionUUID: string) => {\n  const renderNode = getNode(nodes, nodeUUID);\n\n  const actions = renderNode.node.actions;\n  const actionIdx = getActionIndex(renderNode.node, actionUUID);\n\n  if (actionIdx === 0) {\n    throw new Error('Cannot move an action at the top upwards');\n  }\n\n  const action = actions[actionIdx];\n  const actionAbove = actions[actionIdx - 1];\n\n  return mutate(nodes, {\n    [nodeUUID]: {\n      node: { actions: splice([[actionIdx - 1, 2, action, actionAbove]]) }\n    }\n  });\n};\n\n/**\n * Removes a given node from our node map. Updates destinations for any exits that point to us\n * and removes any inboundConnections that reference our exits. Also will reroute connections\n * that route through us.\n * @param nodes\n * @param nodeToRemove\n */\nexport const removeNode = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  remap: boolean = true\n): RenderNodeMap => {\n  const nodeToRemove = getNode(nodes, nodeUUID);\n  let updatedNodes = nodes;\n\n  // remove us from any inbound connections\n  for (const exit of nodeToRemove.node.exits) {\n    if (exit.destination_uuid) {\n      updatedNodes = mutate(updatedNodes, {\n        [exit.destination_uuid]: {\n          inboundConnections: unset([exit.uuid])\n        }\n      });\n    }\n  }\n\n  // clear any destinations that point to us\n  for (const fromExitUUID of Object.keys(nodeToRemove.inboundConnections)) {\n    // if we have a single destination, reroute those pointing to us\n    let destination = null;\n    if (remap && nodeToRemove.node.exits.length === 1) {\n      ({ destination_uuid: destination } = nodeToRemove.node.exits[0]);\n    }\n\n    const fromNodeUUID = nodeToRemove.inboundConnections[fromExitUUID];\n    const fromNode = getNode(nodes, fromNodeUUID);\n\n    // make sure we aren't creating a loop\n    if (destination) {\n      try {\n        detectLoops(updatedNodes, fromNodeUUID, destination);\n      } catch {\n        destination = null;\n      }\n    }\n\n    const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\n    updatedNodes = mutate(updatedNodes, {\n      [fromNodeUUID]: {\n        node: {\n          exits: {\n            [exitIdx]: { destination_uuid: set(destination) }\n          }\n        }\n      }\n    });\n\n    // if we are setting a new destination, update the inboundConnections\n    if (destination) {\n      // make sure our destination exists\n      getNode(nodes, destination);\n      updatedNodes = mutate(updatedNodes, {\n        [destination]: {\n          inboundConnections: merge({ [fromExitUUID]: fromNodeUUID })\n        }\n      });\n    }\n  }\n\n  // remove the actual node\n  return mutate(updatedNodes, unset([nodeUUID]));\n};\n\n/**\n * Update the position for a given node\n * @param nodes\n * @param nodeUUID\n * @param x\n * @param y\n */\nexport const updatePosition = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  position: FlowPosition,\n  snap: boolean = true\n): RenderNodeMap => {\n  const { left, top } = position;\n\n  // make sure we are on the grid\n  let adjusted = { left, top };\n\n  if (snap) {\n    adjusted = snapToGrid(left, top);\n  }\n\n  return mutate(nodes, {\n    [nodeUUID]: {\n      ui: {\n        position: set({\n          left: adjusted.left,\n          top: adjusted.top\n        })\n      }\n    }\n  });\n};\n\nexport const updateStickyNotePosition = (\n  definition: FlowDefinition,\n  stickyUUID: string,\n  position: FlowPosition,\n  snap: boolean = true\n): FlowDefinition => {\n  if (!definition._ui.stickies) {\n    definition._ui.stickies = {};\n  }\n\n  const lastPos = definition._ui.stickies[stickyUUID].position;\n  const width = lastPos.right - lastPos.left;\n  const height = lastPos.bottom - lastPos.top;\n\n  const { left, top } = position;\n\n  // make sure we are on the grid\n  let adjusted = { left, top };\n\n  if (snap) {\n    adjusted = snapToGrid(left, top);\n  }\n\n  return mutate(definition, {\n    _ui: {\n      stickies: {\n        [stickyUUID]: {\n          position: set({\n            left: adjusted.left,\n            top: adjusted.top,\n            right: adjusted.left + width,\n            bottom: adjusted.top + height\n          })\n        }\n      }\n    }\n  });\n};\n\n/**\n * Update the dimensions for a specific node\n * @param nodes\n * @param nodeUUID\n * @param dimensions\n */\nexport const updateNodeDimensions = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  dimensions: Dimensions\n): RenderNodeMap => {\n  const node = getNode(nodes, nodeUUID);\n  return mutate(nodes, {\n    [nodeUUID]: {\n      ui: {\n        position: merge({\n          bottom: node.ui.position.top + dimensions.height,\n          right: node.ui.position.left + dimensions.width\n        })\n      }\n    }\n  });\n};\n\n/**\n * Update the dimensions for a specific sticky\n * @param definition\n * @param uuuid\n * @param dimensions\n */\nexport const updateStickyDimensions = (\n  definition: FlowDefinition,\n  uuid: string,\n  dimensions: Dimensions\n): FlowDefinition => {\n  const position = definition._ui.stickies[uuid].position;\n  return mutate(definition, {\n    _ui: {\n      stickies: {\n        [uuid]: {\n          position: merge({\n            bottom: position.top + dimensions.height,\n            right: position.left + dimensions.width\n          })\n        }\n      }\n    }\n  });\n};\n\nexport const updateStickyNote = (\n  definition: FlowDefinition,\n  stickyUUID: string,\n  sticky: StickyNote\n): FlowDefinition => {\n  if (!definition._ui.stickies) {\n    definition._ui.stickies = {};\n  }\n  if (sticky) {\n    return mutate(definition, {\n      _ui: { stickies: merge({ [stickyUUID]: sticky }) }\n    });\n  } else {\n    return mutate(definition, { _ui: { stickies: unset([stickyUUID]) } });\n  }\n};\n\nexport const mergeNodeEditorSettings = (\n  current: NodeEditorSettings,\n  newSettings: NodeEditorSettings\n) => {\n  if (!newSettings) {\n    return current;\n  }\n\n  if (!current) {\n    return newSettings;\n  }\n\n  return mutate(current, { $merge: newSettings });\n};\n\n/**\n * Prunes the definition for editing, removing node references\n * @param definition our full definition\n */\nexport const pruneDefinition = (definition: FlowDefinition): FlowDefinition =>\n  mutate(definition, { nodes: [], _ui: { $merge: { nodes: {} } } });\n\n/**\n * Update the localization in the definition with the provided changes for a language\n * @param definition\n * @param language\n * @param changes\n */\nexport const updateLocalization = (\n  definition: FlowDefinition,\n  language: string,\n  changes: LocalizationUpdates\n) => {\n  let newDef = definition;\n\n  // Add language to localization map if not present\n  if (!newDef.localization[language]) {\n    newDef = mutate(newDef, {\n      localization: {\n        [language]: set({})\n      }\n    });\n  }\n\n  // Apply changes\n  changes.forEach(({ translations, uuid }) => {\n    if (translations) {\n      // normalize our translations so all are treated as arrays\n      const normalizedTranslations: { [uuid: string]: string[] } = {};\n      for (const key of Object.keys(translations)) {\n        const prev = translations[key];\n        if (Array.isArray(prev)) {\n          normalizedTranslations[key] = prev;\n        } else {\n          normalizedTranslations[key] = [prev];\n        }\n      }\n\n      // adding localization\n      newDef = mutate(newDef, {\n        localization: { [language]: { [uuid]: set(normalizedTranslations) } }\n      });\n    } else {\n      // removing localization\n      newDef = mutate(newDef, {\n        localization: { [language]: unset([uuid]) }\n      });\n    }\n  });\n\n  return newDef;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport {\n  getName,\n  initializeForm,\n  sortFieldsAndProperties,\n  stateToAction,\n  UpdateContactFormState\n} from 'components/flow/actions/updatecontact/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { getContactProperties } from 'components/helpers';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types, ContactStatus } from 'config/interfaces';\nimport { ContactProperties } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset, AssetType, updateAssets } from 'store/flowContext';\nimport * as mutators from 'store/mutators';\nimport { mergeForm } from 'store/nodeEditor';\nimport { DispatchWithState, GetState } from 'store/thunks';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport styles from './UpdateContactForm.module.scss';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../helpers';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\n\nexport const CONTACT_STATUS_ACTIVE: SelectOption = {\n  name: i18n.t('contact_statuses.active', 'Active'),\n  value: ContactStatus.ACTIVE\n};\nexport const CONTACT_STATUS_BLOCKED: SelectOption = {\n  name: i18n.t('contact_statuses.blocked', 'Blocked - remove from groups, ignore forever'),\n  value: ContactStatus.BLOCKED\n};\nexport const CONTACT_STATUS_STOPPED: SelectOption = {\n  name: i18n.t(\n    'contact_statuses.stopped',\n    'Stopped - remove from groups, ignore until they message again'\n  ),\n  value: ContactStatus.STOPPED\n};\nexport const CONTACT_STATUS_ARCHIVED: SelectOption = {\n  name: i18n.t('contact_statuses.archived', 'Archived - remove from groups, ignore forever'),\n  value: ContactStatus.ARCHIVED\n};\nexport const CONTACT_STATUS_OPTIONS: SelectOption[] = [\n  CONTACT_STATUS_ACTIVE,\n  CONTACT_STATUS_BLOCKED,\n  CONTACT_STATUS_STOPPED,\n  CONTACT_STATUS_ARCHIVED\n];\n\nexport default class UpdateContactForm extends React.Component<\n  ActionFormProps,\n  UpdateContactFormState\n> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings, this.props.assetStore);\n\n    bindCallbacks(this, {\n      include: [/^get/, /^on/, /^handle/]\n    });\n  }\n\n  private handleUpdate(\n    keys: {\n      type?: Types;\n      name?: string;\n      channel?: Asset;\n      language?: Asset;\n      status?: SelectOption;\n      field?: Asset;\n      fieldValue?: string;\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<UpdateContactFormState> = {};\n\n    if (keys.hasOwnProperty('type')) {\n      updates.type = keys.type;\n    }\n\n    if (keys.hasOwnProperty('name')) {\n      updates.name = { value: keys.name };\n    }\n\n    if (keys.hasOwnProperty('channel')) {\n      updates.channel = validate(i18n.t('forms.channel', 'Channel'), keys.channel, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('language')) {\n      updates.language = validate(i18n.t('forms.language', 'Language'), keys.language, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('status')) {\n      updates.status = { value: keys.status };\n    }\n\n    if (keys.hasOwnProperty('field')) {\n      updates.field = { value: keys.field };\n    }\n\n    if (keys.hasOwnProperty('fieldValue')) {\n      updates.fieldValue = { value: keys.fieldValue, validationFailures: [] };\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handlePropertyChange(selected: any[]): boolean {\n    const selection = selected[0];\n    if (selection) {\n      if (selection.type === AssetType.ContactProperty) {\n        switch (selection.id) {\n          case ContactProperties.Name:\n            return this.handleUpdate({\n              field: selection,\n              type: Types.set_contact_name,\n              name: ''\n            });\n          case ContactProperties.Language:\n            return this.handleUpdate({\n              field: selection,\n              type: Types.set_contact_language\n            });\n          case ContactProperties.Status:\n            return this.handleUpdate({\n              field: selection,\n              type: Types.set_contact_status\n            });\n          case ContactProperties.Channel:\n            return this.handleUpdate({\n              field: selection,\n              type: Types.set_contact_channel\n            });\n        }\n      }\n      return this.handleUpdate({\n        type: Types.set_contact_field,\n        field: selection,\n        fieldValue: ''\n      });\n    }\n  }\n\n  private handleChannelUpdate(selection: Asset[], submitting = false): boolean {\n    return this.handleUpdate({ channel: selection[0] }, submitting);\n  }\n\n  private handleLanguageUpdate(selection: any[], submitting = false): boolean {\n    return this.handleUpdate({ language: selection[0] }, submitting);\n  }\n\n  private handleStatusUpdate(status: SelectOption): boolean {\n    return this.handleUpdate({ status, fieldValue: '' });\n  }\n\n  private handleFieldValueUpdate(fieldValue: string): boolean {\n    return this.handleUpdate({ fieldValue, name: '' });\n  }\n\n  private handleNameUpdate(name: string): boolean {\n    return this.handleUpdate({ name, fieldValue: '' });\n  }\n\n  private onUpdated(dispatch: DispatchWithState, getState: GetState): void {\n    const {\n      flowContext: { assetStore }\n    } = getState();\n\n    if (this.state.field.value.type === AssetType.Field) {\n      dispatch(updateAssets(mutators.addAssets('fields', assetStore, [this.state.field.value])));\n    }\n  }\n\n  public handleFieldAdded(field: Asset): void {\n    // update our store with our new group\n    this.props.addAsset('fields', field);\n    this.handlePropertyChange([field]);\n  }\n\n  private handleSave(): void {\n    let valid = this.state.valid;\n\n    // check if language required\n    if (this.state.type === Types.set_contact_language) {\n      valid = this.handleLanguageUpdate([this.state.language.value], true) && valid;\n    }\n\n    // check if channel required\n    if (this.state.type === Types.set_contact_channel) {\n      valid = this.handleChannelUpdate([this.state.channel.value], true) && valid;\n    }\n\n    if (valid) {\n      // do the saving!\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state), this.onUpdated);\n      this.props.onClose(true);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  /**\n   * The value widget varies for the action type\n   */\n  private getValueWidget(): JSX.Element {\n    if (this.state.type === Types.set_contact_channel) {\n      return (\n        <AssetSelector\n          key=\"select_channel\"\n          name={i18n.t('forms.channel', 'Channel')}\n          placeholder=\"Select the channel to use for this contact\"\n          assets={this.props.assetStore.channels}\n          entry={this.state.channel}\n          searchable={true}\n          valueClearable={true}\n          onChange={this.handleChannelUpdate}\n        />\n      );\n    }\n\n    if (this.state.type === Types.set_contact_language) {\n      return (\n        <AssetSelector\n          key=\"select_language\"\n          name={i18n.t('forms.language', 'Language')}\n          placeholder=\"Select the language to use for this contact\"\n          assets={this.props.assetStore.languages}\n          entry={this.state.language}\n          valueClearable={true}\n          onChange={this.handleLanguageUpdate}\n          shouldExclude={(language: any) => {\n            return language.iso === 'base';\n          }}\n        />\n      );\n    } else if (this.state.type === Types.set_contact_status) {\n      return (\n        <SelectElement\n          key=\"contact_status_select\"\n          name={i18n.t('forms.status', 'Status')}\n          entry={this.state.status}\n          onChange={this.handleStatusUpdate}\n          options={CONTACT_STATUS_OPTIONS}\n        />\n      );\n    } else if (this.state.type === Types.set_contact_name) {\n      return (\n        <TextInputElement\n          name={i18n.t('forms.name', 'Name')}\n          placeholder=\"Enter a new name for the contact\"\n          onChange={this.handleNameUpdate}\n          entry={this.state.name}\n          autocomplete={true}\n          focus={true}\n        />\n      );\n    } else {\n      return (\n        <TextInputElement\n          name={i18n.t('forms.field_value', 'Field Value')}\n          placeholder={`Enter a new value for ${this.state.field.value.label}`}\n          onChange={this.handleFieldValueUpdate}\n          entry={this.state.fieldValue}\n          autocomplete={true}\n          focus={true}\n        />\n      );\n    }\n  }\n\n  public handleCreateAssetFromInput(input: string): any {\n    return { label: input, value_type: 'text' };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n\n        <p>Select what to update</p>\n        <AssetSelector\n          name={i18n.t('forms.contact_field', 'Contact Field')}\n          assets={this.props.assetStore.fields}\n          additionalOptions={getContactProperties(this.context.config.flowType)}\n          entry={this.state.field}\n          searchable={true}\n          sortFunction={sortFieldsAndProperties}\n          onChange={this.handlePropertyChange}\n          getName={getName}\n          // Fields can be created on the fly\n          createPrefix=\"Create Contact Field: \"\n          createAssetFromInput={this.handleCreateAssetFromInput}\n          onAssetCreated={this.handleFieldAdded}\n        />\n\n        <div className={styles.value}>{this.getValueWidget()}</div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport { AirtimeTransferEntry } from 'components/flow/routers/airtime/AirtimeRouterForm';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport FormElement from 'components/form/FormElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { ValidationFailure } from 'store/nodeEditor';\n\nimport styles from './CurrencyElement.module.scss';\nimport i18n from 'config/i18n';\nimport { TembaSelectStyle } from 'temba/TembaSelect';\n\nexport interface AirtimeTransfer {\n  amount: string;\n  code: string;\n}\n\nexport interface CurrencyElementProps {\n  currencies: any[];\n  transfer: AirtimeTransferEntry;\n  index: number;\n  exclude: AirtimeTransferEntry[];\n  onChange(index: number, transfer: AirtimeTransferEntry): void;\n  onRemove(index: number): void;\n}\n\nexport default class CurrencyElement extends React.Component<CurrencyElementProps> {\n  constructor(props: CurrencyElementProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleCurrencyChanged(selected: any[]): void {\n    this.props.onChange(this.props.index, {\n      value: { amount: this.props.transfer.value.amount, code: selected[0].id },\n      validationFailures: this.props.transfer.validationFailures\n    });\n  }\n\n  private handleAmountChanged(value: string): void {\n    const validationFailures: ValidationFailure[] = [];\n    if (isNaN(Number(value))) {\n      validationFailures.push({\n        message: 'Invalid amount, please enter a number'\n      });\n    }\n    this.props.onChange(this.props.index, {\n      value: { amount: value, code: this.props.transfer.value.code },\n      validationFailures\n    });\n  }\n\n  public render(): JSX.Element {\n    let placeholder = 'Transfer Amount';\n\n    let amount = '';\n    let currency: any = null;\n\n    if (this.props.transfer.value) {\n      const transfer = this.props.transfer.value;\n      if (transfer.code) {\n        placeholder = `${transfer.code} ${placeholder}`;\n        currency = { id: transfer.code };\n      }\n\n      amount = '' + transfer.amount;\n    }\n\n    const amountInput =\n      this.props.index > -1 ? (\n        <div className={styles.amount}>\n          <TextInputElement\n            placeholder={placeholder}\n            name={i18n.t('forms.value', 'value')}\n            onChange={this.handleAmountChanged}\n            entry={{ value: amount }}\n          />\n        </div>\n      ) : null;\n\n    const removeIco =\n      this.props.index > -1 ? (\n        <div\n          className={styles.remove}\n          onClick={() => {\n            this.props.onRemove(this.props.index);\n          }}\n        >\n          <span className=\"fe-x\" />\n        </div>\n      ) : null;\n\n    const shouldExclude = (asset: Asset): boolean => {\n      return (\n        this.props.exclude.filter(\n          (airtime: AirtimeTransferEntry) => airtime.value.code === asset.id\n        ).length > 1\n      );\n    };\n\n    return (\n      <FormElement\n        name={i18n.t('forms.currency', 'Currency')}\n        entry={this.props.transfer}\n        __className={styles.form_element}\n      >\n        <div className={styles.transfer}>\n          <div className={styles.currency}>\n            <AssetSelector\n              style={TembaSelectStyle.small}\n              name={i18n.t('forms.currency', 'Currency')}\n              shouldExclude={shouldExclude}\n              entry={{ value: currency }}\n              nameKey=\"id\"\n              valueKey=\"id\"\n              onChange={this.handleCurrencyChanged}\n              additionalOptions={this.props.currencies}\n              placeholder={i18n.t('forms.currency', 'Select a Currency')}\n            />\n          </div>\n          {amountInput} {removeIco}\n        </div>\n      </FormElement>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\n\nimport styles from './OptionalTextInput.module.scss';\n\nexport interface OptionalTextInputProps {\n  name: string;\n  value: StringEntry;\n  toggleText: string;\n  onChange(value: string): void;\n  helpText?: string | JSX.Element;\n  maxLength?: number;\n}\n\nexport interface OptionalTextInputState extends FormState {\n  editing: boolean;\n}\n\n/**\n * OptionalText is a hideable text box\n */\nexport default class OptionalTextInput extends React.Component<\n  OptionalTextInputProps,\n  OptionalTextInputState\n> {\n  constructor(props: OptionalTextInputProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n\n    this.state = {\n      editing: this.props.value.value.trim().length > 0,\n      valid: true\n    };\n  }\n\n  private handleTextChanged(text: string): void {\n    this.props.onChange(text);\n  }\n\n  private handleEditingChanged(): void {\n    this.setState({ editing: true });\n  }\n\n  public render(): JSX.Element {\n    let ele: JSX.Element;\n\n    if (this.state.editing) {\n      ele = (\n        <TextInputElement\n          data-testid=\"optional-field\"\n          data-spec=\"optional-field\"\n          name={this.props.name}\n          showLabel={true}\n          entry={this.props.value}\n          onChange={this.handleTextChanged}\n          helpText={this.props.helpText}\n          maxLength={this.props.maxLength}\n        />\n      );\n    } else {\n      ele = (\n        <span\n          data-testid=\"toggle-link\"\n          data-spec=\"toggle-link\"\n          className={styles.toggle_link}\n          onClick={this.handleEditingChanged}\n        >\n          {this.props.toggleText}\n        </span>\n      );\n    }\n\n    return <div className={styles.optional_text_input}>{ele}</div>;\n  }\n}\n","import * as React from 'react';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport OptionalTextInput from 'components/form/optionaltext/OptionalTextInput';\nimport { StringEntry } from 'store/nodeEditor';\nimport { snakify } from 'utils';\nimport { Trans } from 'react-i18next';\nimport i18n from 'config/i18n';\n\nexport const createResultNameInput = (\n  value: StringEntry,\n  onChange: (value: string) => void\n): JSX.Element => {\n  const snaked = !hasErrors(value) && value.value ? '.' + snakify(value.value) : '';\n\n  return (\n    <OptionalTextInput\n      name={i18n.t('forms.save_result_name', 'Result Name')}\n      maxLength={64}\n      value={value}\n      onChange={onChange}\n      toggleText={i18n.t('forms.save_as_title', 'Save as..')}\n      helpText={\n        <Trans i18nKey=\"forms.result_name_help\" values={{ resultFormat: `@results${snaked}` }}>\n          By naming the result, you can reference it later using [[resultFormat]]\n        </Trans>\n      }\n    />\n  );\n};\n","import * as React from 'react';\nimport { ValidationFailure } from 'store/nodeEditor';\n\nimport styles from './ValidationFailures.module.scss';\n\nexport interface Validation {\n  validationFailures: ValidationFailure[];\n}\n\nconst ValidationFailures: React.SFC<Validation> = (validation): JSX.Element => {\n  const errors = validation.validationFailures.map((failure: ValidationFailure, idx: number) => {\n    return (\n      <div key={'validation_' + idx} className={styles.error}>\n        {failure.message}\n      </div>\n    );\n  });\n  return <div className={styles.errors}>{errors}</div>;\n};\n\nexport default ValidationFailures;\n","import {\n  AirtimeRouterFormState,\n  AirtimeTransferEntry\n} from 'components/flow/routers/airtime/AirtimeRouterForm';\nimport { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { TransferAirtime } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport const nodeToState = (settings: NodeEditorSettings): AirtimeRouterFormState => {\n  const originalAction = getOriginalAction(settings);\n  let resultName = { value: 'Result' };\n  let valid = false;\n\n  const amounts: AirtimeTransferEntry[] = [];\n  if (originalAction && originalAction.type === Types.transfer_airtime) {\n    Object.keys(originalAction.amounts).forEach((key: string) => {\n      amounts.push({\n        value: { code: key, amount: '' + originalAction.amounts[key] }\n      });\n    });\n    resultName = { value: originalAction.result_name };\n    valid = true;\n  }\n\n  return {\n    valid,\n    amounts,\n    resultName\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: AirtimeRouterFormState\n): RenderNode => {\n  let uuid = createUUID();\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const amounts = {};\n  state.amounts.forEach((entry: AirtimeTransferEntry) => {\n    if (entry.value.amount.trim().length > 0) {\n      (amounts as any)[entry.value.code] = Number(entry.value.amount);\n    }\n  });\n\n  const newAction: TransferAirtime = {\n    uuid,\n    type: Types.transfer_airtime,\n    amounts,\n    result_name: state.resultName.value\n  };\n\n  return createWebhookBasedNode(newAction, settings.originalNode, true);\n};\n\nexport const getOriginalAction = (settings: NodeEditorSettings): TransferAirtime => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.transfer_airtime) {\n    return action as TransferAirtime;\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CurrencyElement, {\n  AirtimeTransfer\n} from 'components/flow/routers/airtime/currency/CurrencyElement';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport ValidationFailures from 'components/form/ValidationFailures';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport mutate from 'immutability-helper';\nimport * as React from 'react';\nimport { FormEntry, FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, Required, StartIsNonNumeric, validate } from 'store/validators';\n\nimport styles from './AirtimeRouterForm.module.scss';\nimport { nodeToState, stateToNode } from './helpers';\nimport i18n from 'config/i18n';\n\nexport interface AirtimeTransferEntry extends FormEntry {\n  value: AirtimeTransfer;\n}\n\nexport interface AirtimeRouterFormState extends FormState {\n  amounts: AirtimeTransferEntry[];\n  resultName: StringEntry;\n}\n\nexport default class AirtimeRouterForm extends React.PureComponent<\n  RouterFormProps,\n  AirtimeRouterFormState\n> {\n  options: any[] = [];\n\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public componentDidMount(): void {\n    const items = this.props.assetStore.currencies ? this.props.assetStore.currencies.items : {};\n    this.options = Object.keys(items).map((key: string) => {\n      return { id: items[key].id };\n    });\n  }\n\n  private handleSave(): void {\n    const missing: number[] = [];\n\n    this.state.amounts.forEach((entry: AirtimeTransferEntry, index: number) => {\n      if (entry.value.amount.trim().length === 0) {\n        missing.push(index);\n      }\n    });\n\n    let valid: boolean = !!!this.state.amounts.find(\n      (entry: AirtimeTransferEntry) => (entry.validationFailures || []).length > 0\n    );\n\n    // make sure at least one has a value\n    if (valid) {\n      valid =\n        this.state.amounts.find(\n          (entry: AirtimeTransferEntry) => entry.value.amount.trim().length > 0\n        ) !== undefined;\n\n      if (!valid) {\n        this.setState({\n          valid: false,\n          validationFailures: [{ message: 'At least one amount to transfer is required' }]\n        });\n      }\n    }\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private handleUpdateResultName(result: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), result, [\n      Required,\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  public getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public handleRemoved(index: number): void {\n    // we found a match, merge us in\n    const updated: any = mutate(this.state.amounts, {\n      $splice: [[index, 1]]\n    });\n    this.setState({ amounts: updated });\n  }\n\n  public handleTransferChanged(idx: number, transfer: AirtimeTransferEntry): void {\n    let updated: any = this.state.amounts;\n\n    if (idx > -1) {\n      // we found a match, merge us in\n      updated = mutate(this.state.amounts, {\n        $merge: { [idx]: transfer }\n      });\n    } else {\n      // otherwise push us on\n      updated = mutate(this.state.amounts, {\n        $push: [transfer]\n      });\n    }\n\n    this.setState({ amounts: updated, validationFailures: [] });\n  }\n\n  private renderAmount(index: number, entry: AirtimeTransferEntry): JSX.Element {\n    return (\n      <CurrencyElement\n        key={'currency_' + index}\n        exclude={this.state.amounts}\n        currencies={this.options}\n        transfer={entry}\n        index={index}\n        onChange={this.handleTransferChanged}\n        onRemove={this.handleRemoved}\n      />\n    );\n  }\n\n  private renderAmounts(): JSX.Element {\n    const amounts = this.state.amounts.map((entry: AirtimeTransferEntry, index: number) => {\n      return this.renderAmount(index, entry);\n    });\n\n    return (\n      <div>\n        {amounts}\n        {this.renderAmount(-1, { value: { code: null, amount: '' } })}\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const errors = this.state.validationFailures ? (\n      <ValidationFailures validationFailures={this.state.validationFailures} />\n    ) : null;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        {this.renderAmounts()}\n        {errors}\n        <div className={styles.result_name}>\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { HIDDEN, Operator, OperatorMap, Operators, TEXT_TYPES, ONLINE } from 'config/interfaces';\nimport i18n from 'config/i18n';\n\nexport const intentOperatorList: Operator[] = [\n  {\n    type: Operators.has_top_intent,\n    verboseName: i18n.t('operators.has_top_intent', 'has top intent'),\n    operands: 2,\n    visibility: ONLINE\n  },\n  {\n    type: Operators.has_intent,\n    verboseName: i18n.t('operators.has_intent', 'has intent'),\n    operands: 2,\n    visibility: ONLINE\n  }\n];\n\nexport const operatorConfigList: Operator[] = [\n  {\n    type: Operators.has_any_word,\n    verboseName: i18n.t('operators.has_any_word', 'has any of the words'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_all_words,\n    verboseName: i18n.t('operators.has_all_words', 'has all of the words'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_phrase,\n    verboseName: i18n.t('operators.has_phrase', 'has the phrase'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_only_phrase,\n    verboseName: i18n.t('operators.has_only_phrase', 'has only the phrase'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_beginning,\n    verboseName: i18n.t('operators.has_beginning', 'starts with'),\n    operands: 1\n  },\n  {\n    type: Operators.has_text,\n    verboseName: i18n.t('operators.has_text', 'has some text'),\n    operands: 0,\n    categoryName: 'Has Text',\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_number,\n    verboseName: i18n.t('operators.has_number', 'has a number'),\n    operands: 0,\n    categoryName: 'Has Number'\n  },\n  {\n    type: Operators.has_number_between,\n    verboseName: i18n.t('operators.has_number_between', 'has a number between'),\n    operands: 2\n  },\n  {\n    type: Operators.has_number_lt,\n    verboseName: i18n.t('operators.has_number_lt', 'has a number below'),\n    operands: 1\n  },\n  {\n    type: Operators.has_number_lte,\n    verboseName: i18n.t('operators.has_number_lte', 'has a number at or below'),\n    operands: 1\n  },\n  {\n    type: Operators.has_number_eq,\n    verboseName: i18n.t('operators.has_number_eq', 'has a number equal to'),\n    operands: 1\n  },\n  {\n    type: Operators.has_number_gte,\n    verboseName: i18n.t('operators.has_number_gte', 'has a number at or above'),\n    operands: 1\n  },\n  {\n    type: Operators.has_number_gt,\n    verboseName: i18n.t('operators.has_number_gt', 'has a number above'),\n    operands: 1\n  },\n  {\n    type: Operators.has_date,\n    verboseName: i18n.t('operators.has_date', 'has a date'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_date_category', 'Has Date'),\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_date_lt,\n    verboseName: i18n.t('operators.has_date_lt', 'has a date before'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_date_eq,\n    verboseName: i18n.t('operators.has_date_eq', 'has a date equal to'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_date_gt,\n    verboseName: i18n.t('operators.has_date_gt', 'has a date after'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_time,\n    verboseName: i18n.t('operators.has_time', 'has a time'),\n    operands: 0,\n    categoryName: 'Has Time',\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_group,\n    verboseName: i18n.t('operators.has_group', 'is in the group'),\n    operands: 1,\n    visibility: HIDDEN\n  },\n  {\n    type: Operators.has_category,\n    verboseName: i18n.t('operators.has_category', 'has the category'),\n    operands: 0,\n    visibility: HIDDEN\n  },\n  {\n    type: Operators.has_phone,\n    verboseName: i18n.t('operators.has_phone', 'has a phone number'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_phone_category', 'Has Phone')\n  },\n  {\n    type: Operators.has_email,\n    verboseName: i18n.t('operators.has_email', 'has an email'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_email_category', 'Has Email'),\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_state,\n    verboseName: i18n.t('operators.has_state', 'has state'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_state_category', 'Has State')\n  },\n  {\n    type: Operators.has_district,\n    verboseName: i18n.t('operators.has_district', 'has district'),\n    operands: 1,\n    categoryName: i18n.t('operators.has_district_category', 'Has District')\n  },\n  {\n    type: Operators.has_ward,\n    verboseName: i18n.t('operators.has_ward', 'has ward'),\n    operands: 2,\n    categoryName: i18n.t('operators.has_ward_category', 'Has Ward')\n  },\n  {\n    type: Operators.has_error,\n    verboseName: i18n.t('operators.has_error', 'has an error'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_error_category', 'Has Error'),\n    visibility: HIDDEN\n  },\n  {\n    type: Operators.has_value,\n    verboseName: i18n.t('operators.has_value', 'is not empty'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_value_category', 'Not Empty'),\n    visibility: HIDDEN\n  },\n  {\n    type: Operators.has_pattern,\n    verboseName: i18n.t('operator.has_pattern', 'matches regex'),\n    operands: 1\n  },\n\n  {\n    type: Operators.has_media,\n    verboseName: i18n.t('operators.has_media', 'has media'),\n    operands: 0,\n    categoryName: 'Has Media',\n    visibility: TEXT_TYPES\n  },\n\n  {\n    type: Operators.has_location,\n    verboseName: i18n.t('operators.has_location', 'has location'),\n    operands: 0,\n    categoryName: 'Has Location',\n    visibility: TEXT_TYPES\n  }\n];\n\nexport const operatorConfigMap: OperatorMap = [...operatorConfigList, ...intentOperatorList].reduce(\n  (map: OperatorMap, operatorConfig: Operator) => {\n    map[operatorConfig.type] = operatorConfig;\n    return map;\n  },\n  {}\n);\n\n/**\n * Shortcut for constant lookup of operator config in operator configs map\n * @param {string} type - The type of the operator config to return, e.g. 'send_msg'\n * @returns {Object} - The operator config found at operatorConfigs[type] or -1\n */\nexport const getOperatorConfig = (type: Operators): Operator => operatorConfigMap[type];\n","import { isRelativeDate } from 'components/flow/routers/helpers';\nimport { Operator, Operators } from 'config/interfaces';\nimport { getOperatorConfig } from 'config/operatorConfigs';\nimport {\n  LessThan,\n  MoreThan,\n  Numeric,\n  NumOrExp,\n  Required,\n  validate,\n  IsValidIntent\n} from 'store/validators';\nimport { titleCase } from 'utils';\n\nimport { CaseElementProps, CaseElementState } from './CaseElement';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Asset } from 'store/flowContext';\nimport i18n from 'config/i18n';\n\nexport const initializeForm = (props: CaseElementProps): CaseElementState => {\n  const arg1 =\n    props.kase.arguments && props.kase.arguments.length >= 1 ? props.kase.arguments[0] : '';\n  const arg2 =\n    props.kase.arguments && props.kase.arguments.length === 2 ? props.kase.arguments[1] : '';\n\n  return {\n    errors: [],\n    operatorConfig: getOperatorConfig(props.kase.type),\n    argument: { value: arg1 },\n    min: { value: arg1 },\n    max: { value: arg2 },\n    state: { value: arg1 },\n    district: { value: arg2 },\n    intent: { value: arg1 ? { name: arg1, value: arg1 } : null },\n    confidence: { value: arg2 },\n    categoryName: { value: props.categoryName || '' },\n    categoryNameEdited: !!props.categoryName,\n    valid: true\n  };\n};\n/**\n * Determines prefix for case's exit name\n */\nexport const prefix = (operatorType: string): string => {\n  let pre = '';\n\n  if (operatorType.indexOf('_lt') > -1) {\n    if (operatorType.indexOf('date') > -1) {\n      pre = 'Before ';\n    } else {\n      if (operatorType.indexOf('lte') > -1) {\n        pre = '<= ';\n      } else {\n        pre = '< ';\n      }\n    }\n  } else if (operatorType.indexOf('_gt') > -1) {\n    if (operatorType.indexOf('date') > -1) {\n      pre = 'After ';\n    } else {\n      if (operatorType.indexOf('gte') > -1) {\n        pre = '>= ';\n      } else {\n        pre = '>';\n      }\n    }\n  }\n\n  return pre;\n};\n\n/**\n * Returns min, max values for Operators.has_number_between case\n */\nexport const getMinMax = (args: string[] = []): { min: string; max: string } => {\n  let min = '';\n  let max = '';\n  if (args.length) {\n    if (strContainsNum(args[0])) {\n      min = args[0];\n    }\n    if (args[1]) {\n      if (strContainsNum(args[1])) {\n        max = args[1];\n      }\n    }\n  }\n  return {\n    min,\n    max\n  };\n};\n\nexport const isFloat = (val: string): boolean => /^[+-]?\\d?(\\.\\d*)?$/.test(val.trim());\n\nexport const isInt = (val: string): boolean => /^[+-]?\\d+$/.test(val.trim());\n\nexport const strContainsNum = (str: string): boolean => {\n  const trimmed = str.trim();\n  if (isFloat(trimmed)) {\n    return true;\n  } else if (isInt(trimmed)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const parseNum = (str: string): number => {\n  const trimmed = (str || '').trim();\n  if (isFloat(trimmed)) {\n    return parseFloat(str);\n  } else if (isInt(trimmed)) {\n    return parseInt(trimmed, 10);\n  }\n};\n\nexport const validateCase = (keys: {\n  operatorConfig: Operator;\n  argument?: string;\n  state?: string;\n  district?: string;\n  min?: string;\n  max?: string;\n  confidence?: string;\n  intent?: SelectOption;\n  exitName?: string;\n  exitEdited?: boolean;\n  classifier?: Asset;\n}): Partial<CaseElementState> => {\n  // when the exit is set, our arguments become required\n  const validators = keys.exitEdited && keys.exitName ? [Required] : [];\n\n  const updates: Partial<CaseElementState> = {\n    operatorConfig: keys.operatorConfig\n  };\n\n  updates.district = { value: '', validationFailures: [] };\n  updates.state = { value: '', validationFailures: [] };\n  updates.min = { value: '', validationFailures: [] };\n  updates.max = { value: '', validationFailures: [] };\n  updates.argument = { value: '', validationFailures: [] };\n  updates.intent = { value: null, validationFailures: [] };\n  updates.confidence = { value: '', validationFailures: [] };\n\n  if (keys.operatorConfig.operands > 0) {\n    switch (keys.operatorConfig.type) {\n      case Operators.has_number_eq:\n      case Operators.has_number_gt:\n      case Operators.has_number_gte:\n      case Operators.has_number_lt:\n      case Operators.has_number_lte:\n        validators.push(NumOrExp);\n        break;\n      case Operators.has_date_eq:\n      case Operators.has_date_lt:\n      case Operators.has_date_gt:\n        validators.push(Numeric);\n        break;\n    }\n\n    if (keys.operatorConfig.type === Operators.has_number_between) {\n      updates.min = validate(\n        i18n.t('forms.minimum_value', 'Minimum value'),\n        keys.min || '',\n        validators.concat([\n          Numeric,\n          LessThan(parseFloat(keys.max), i18n.t('forms.the_maximum', 'the maximum'))\n        ])\n      );\n\n      updates.max = validate(\n        i18n.t('forms.maximum_value', 'Maximum value'),\n        keys.max || '',\n        validators.concat([\n          Numeric,\n          MoreThan(parseFloat(keys.min), i18n.t('forms.the_minimum', 'the minimum'))\n        ])\n      );\n    } else if (keys.operatorConfig.type === Operators.has_district) {\n      updates.argument = validate(\n        i18n.t('forms.state', 'State'),\n        keys.argument || '',\n        validators.concat([])\n      );\n    } else if (keys.operatorConfig.type === Operators.has_ward) {\n      updates.state = validate(\n        i18n.t('forms.state', 'State'),\n        keys.state || '',\n        validators.concat([])\n      );\n      updates.district = validate(\n        i18n.t('forms.district', 'District'),\n        keys.district || '',\n        validators.concat([])\n      );\n    } else if (\n      keys.operatorConfig.type === Operators.has_top_intent ||\n      keys.operatorConfig.type === Operators.has_intent\n    ) {\n      const intentValidators = [IsValidIntent(keys.classifier)];\n      if (keys.confidence) {\n        intentValidators.push(Required);\n      }\n      updates.intent = validate(i18n.t('forms.intent', 'Intent'), keys.intent, intentValidators);\n      updates.confidence = validate(\n        i18n.t('forms.confidence', 'Confidence'),\n        keys.confidence || '',\n        validators.concat(keys.intent ? [Numeric, Required] : [Numeric])\n      );\n    } else {\n      updates.argument = validate('Value', keys.argument || '', validators);\n    }\n  }\n\n  updates.categoryNameEdited = !!keys.exitEdited;\n  updates.categoryName = validate(\n    i18n.t('forms.category', 'Category'),\n    updates.categoryNameEdited ? keys.exitName : getCategoryName(updates),\n    updates.argument.value ||\n      (updates.min.value && updates.max.value) ||\n      (updates.state.value && updates.district.value)\n      ? [Required]\n      : []\n  );\n\n  updates.valid =\n    updates.state.validationFailures.length === 0 &&\n    updates.district.validationFailures.length === 0 &&\n    updates.min.validationFailures.length === 0 &&\n    updates.max.validationFailures.length === 0 &&\n    updates.argument.validationFailures.length === 0 &&\n    updates.intent.validationFailures.length === 0 &&\n    updates.confidence.validationFailures.length === 0 &&\n    updates.categoryName.validationFailures.length === 0;\n\n  return updates;\n};\n\nexport const getCategoryName = (state: Partial<CaseElementState>): string => {\n  if (state.categoryNameEdited) {\n    return state.categoryName.value;\n  }\n\n  if (state.operatorConfig.operands === 0) {\n    return state.operatorConfig.categoryName;\n  }\n\n  if (\n    state.operatorConfig.type === Operators.has_intent ||\n    state.operatorConfig.type === Operators.has_top_intent\n  ) {\n    if (state.intent.value) {\n      return titleCase(state.intent.value.name.replace('_', ' '));\n    }\n  }\n\n  if (\n    state.operatorConfig.type === Operators.has_number_between &&\n    state.min.value &&\n    state.max.value\n  ) {\n    return `${state.min.value} - ${state.max.value}`;\n  }\n\n  if (isRelativeDate(state.operatorConfig.type)) {\n    const count = parseInt(state.argument.value, 10);\n    if (!isNaN(count)) {\n      const today =\n        state.operatorConfig.type === Operators.has_date_eq\n          ? i18n.t('forms.today_proper', 'Today')\n          : i18n.t('forms.today', 'today');\n      const op = count < 0 ? ' - ' : ' + ';\n      const inDays =\n        ' ' + (Math.abs(count) === 1 ? i18n.t('forms.day', 'day') : i18n.t('forms.days', 'days'));\n      return prefix(state.operatorConfig.type) + today + op + Math.abs(count) + inDays;\n    }\n  }\n\n  if (state.argument && state.argument.value) {\n    const pre = prefix(state.operatorConfig.type);\n    const words = state.argument.value.match(/\\w+/g);\n\n    if (words && words.length > 0) {\n      const [firstWord] = words;\n      return pre + titleCase(firstWord);\n    }\n\n    return pre + titleCase(state.argument.value);\n  }\n\n  return '';\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { isRelativeDate } from 'components/flow/routers/helpers';\nimport FormElement from 'components/form/FormElement';\nimport TextInputElement, { TextInputStyle } from 'components/form/textinput/TextInputElement';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { filterOperators } from 'config/helpers';\nimport { Operator, Operators } from 'config/interfaces';\nimport { operatorConfigList } from 'config/operatorConfigs';\nimport { Case } from 'flowTypes';\nimport * as React from 'react';\nimport { FormState, StringEntry, SelectOptionEntry } from 'store/nodeEditor';\nimport { hasErrorType } from 'utils';\n\nimport styles from './CaseElement.module.scss';\nimport { initializeForm, validateCase } from './helpers';\nimport { Asset } from 'store/flowContext';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport i18n from 'config/i18n';\nimport TembaSelect, { TembaSelectStyle } from 'temba/TembaSelect';\n\nexport interface CaseElementProps {\n  kase: Case;\n  categoryName: string;\n  name?: string; // satisfy form widget props\n  onRemove?(uuid: string): void;\n  onChange?(c: CaseProps): void;\n  operators?: Operator[];\n  classifier?: Asset;\n}\n\nexport interface CaseElementState extends FormState {\n  errors: string[];\n  operatorConfig: Operator;\n  categoryName: StringEntry;\n  categoryNameEdited: boolean;\n\n  // for string based args\n  argument: StringEntry;\n\n  // for numeric operators\n  min: StringEntry;\n  max: StringEntry;\n\n  // intents\n  intent: SelectOptionEntry;\n  confidence: StringEntry;\n\n  state: StringEntry;\n  district: StringEntry;\n}\n\nexport default class CaseElement extends React.Component<CaseElementProps, CaseElementState> {\n  private operators: Operator[];\n\n  constructor(props: CaseElementProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^get/]\n    });\n\n    this.state = initializeForm(props);\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public componentDidMount() {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: this.state.argument.value,\n      min: this.state.min.value,\n      max: this.state.max.value,\n      intent: this.state.intent.value,\n      confidence: this.state.confidence.value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited,\n      classifier: this.props.classifier\n    });\n\n    this.setState(updates as CaseElementState, this.handleChange);\n  }\n\n  public componentDidUpdate(previousProps: CaseElementProps): void {\n    if (\n      this.props.classifier &&\n      this.props.classifier !== previousProps.classifier &&\n      this.state.intent.value\n    ) {\n      const updates = validateCase({\n        operatorConfig: this.state.operatorConfig,\n        argument: this.state.argument.value,\n        min: this.state.min.value,\n        max: this.state.max.value,\n        intent: this.state.intent.value,\n        confidence: this.state.confidence.value,\n        exitName: this.state.categoryName.value,\n        exitEdited: this.state.categoryNameEdited,\n        classifier: this.props.classifier\n      });\n\n      this.setState(updates as CaseElementState, this.handleChange);\n    }\n  }\n\n  private getOperators(): Operator[] {\n    let operators = this.props.operators || operatorConfigList;\n    if (this.operators === undefined) {\n      this.operators = filterOperators(operators, this.context.config);\n    }\n\n    return this.operators;\n  }\n\n  private getArgumentArray(): string[] {\n    if (this.state.operatorConfig.operands === 0) {\n      return [];\n    }\n\n    if (\n      this.state.operatorConfig.type === Operators.has_intent ||\n      this.state.operatorConfig.type === Operators.has_top_intent\n    ) {\n      if (this.state.intent.value) {\n        return [this.state.intent.value.value, this.state.confidence.value];\n      } else {\n        return ['', this.state.confidence.value];\n      }\n    }\n\n    if (this.state.operatorConfig.type === Operators.has_number_between) {\n      return [this.state.min.value, this.state.max.value];\n    }\n\n    if (this.state.operatorConfig.type === Operators.has_ward) {\n      return [this.state.state.value, this.state.district.value];\n    }\n\n    return [this.state.argument.value];\n  }\n\n  private handleOperatorChanged(operatorConfig: Operator): void {\n    const updates = validateCase({\n      operatorConfig,\n      argument: this.state.argument.value,\n      min: this.state.min.value,\n      max: this.state.max.value,\n      intent: this.state.intent.value,\n      confidence: this.state.confidence.value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited,\n      classifier: this.props.classifier\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleArgumentChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleDistrictChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: this.state.argument.value,\n      state: this.state.state.value,\n      district: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  /** The user changed the value for the state (a location-based state) */\n  private handleStateChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: this.state.argument.value,\n      district: this.state.district.value,\n      state: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleIntentChanged(selected: SelectOption): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      intent: selected,\n      confidence: this.state.confidence.value || '.9',\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited,\n      classifier: this.props.classifier\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleConfidenceChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      intent: this.state.intent.value,\n      confidence: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited,\n      classifier: this.props.classifier\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleMinChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      min: value,\n      max: this.state.max.value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleMaxChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      min: this.state.min.value,\n      max: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleExitChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      state: this.state.state.value,\n      district: this.state.district.value,\n      argument: this.state.argument.value,\n      min: this.state.min.value,\n      max: this.state.max.value,\n      intent: this.state.intent.value,\n      confidence: this.state.confidence.value,\n      classifier: this.props.classifier,\n      exitName: value,\n      exitEdited: true\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleRemoveClicked(): void {\n    this.props.onRemove(this.props.kase.uuid);\n  }\n\n  private getCaseProps(): CaseProps {\n    const props = {\n      uuid: this.props.kase.uuid,\n      categoryName: this.state.categoryName.value,\n      kase: {\n        arguments: this.getArgumentArray(),\n        type: this.state.operatorConfig.type,\n        uuid: this.props.kase.uuid,\n\n        // if the exit name changed, we'll need to recompute our exit\n        category_uuid: this.state.categoryNameEdited ? null : this.props.kase.category_uuid\n      },\n      valid: this.state.valid\n    };\n\n    return props;\n  }\n\n  private handleChange(): void {\n    // If the case doesn't have arguments & an exit name, remove it\n    if (!this.state.categoryName.value) {\n      // see if we are clearing out a between\n      if (this.state.operatorConfig.type === Operators.has_number_between) {\n        if (!this.state.min.value && !this.state.max.value) {\n          // this.handleRemoveClicked();\n          // return;\n        }\n      }\n      // see if we are clearing out a single operand\n      else {\n        if (!this.state.argument.value) {\n          // this.handleRemoveClicked();\n          // return;\n        }\n      }\n    }\n\n    this.props.onChange(this.getCaseProps());\n  }\n\n  private handleIntentMenuOpened() {\n    // hiding any errors when the menu opens\n    this.setState({ intent: { value: this.state.intent.value } });\n  }\n\n  private handleIntentMenuClosed() {\n    // we want to revalidate close without selection\n    // wait a cycle for selection event to fire first\n    window.setTimeout(() => {\n      this.handleIntentChanged(this.state.intent.value);\n    }, 0);\n  }\n\n  private renderArguments(): JSX.Element {\n    if (this.state.operatorConfig.operands > 0) {\n      // First pass at displaying, handling Operators.has_number_between inputs\n      if (this.state.operatorConfig.operands > 1) {\n        if (this.state.operatorConfig.type === Operators.has_number_between) {\n          return (\n            <>\n              <TextInputElement\n                name={i18n.t('forms.arguments', 'arguments')}\n                style={TextInputStyle.small}\n                onChange={this.handleMinChanged}\n                entry={this.state.min}\n              />\n              <span className={styles.divider} data-draggable={true}>\n                and\n              </span>\n              <TextInputElement\n                name={i18n.t('forms.arguments', 'arguments')}\n                style={TextInputStyle.small}\n                onChange={this.handleMaxChanged}\n                entry={this.state.max}\n              />\n            </>\n          );\n        } else if (\n          this.state.operatorConfig.type === Operators.has_intent ||\n          this.state.operatorConfig.type === Operators.has_top_intent\n        ) {\n          let intents: SelectOption[] = [];\n\n          if (this.props.classifier && this.props.classifier.content) {\n            intents = this.props.classifier.content.intents.map((intent: string) => {\n              const option: SelectOption = {\n                name: intent,\n                value: intent\n              };\n              return option;\n            });\n          }\n\n          return (\n            <>\n              <div style={{ width: '114px' }}>\n                <SelectElement\n                  key=\"intent_select\"\n                  style={TembaSelectStyle.small}\n                  name={i18n.t('forms.intent', 'Intent')}\n                  placeholder={i18n.t('forms.select_intent', 'Select intent')}\n                  entry={this.state.intent}\n                  onChange={this.handleIntentChanged}\n                  options={intents}\n                  onMenuOpen={this.handleIntentMenuOpened}\n                  onMenuClose={this.handleIntentMenuClosed}\n                  hideError={true}\n                ></SelectElement>\n              </div>\n              <div className={styles.divider} data-draggable={true}>\n                above\n              </div>\n              <div style={{ width: '34px' }}>\n                <TextInputElement\n                  name={i18n.t('forms.confidence', 'confidence')}\n                  onChange={this.handleConfidenceChanged}\n                  entry={this.state.confidence}\n                  style={TextInputStyle.small}\n                  placeholder=\".9\"\n                />\n              </div>\n            </>\n          );\n        } else {\n          return (\n            <>\n              <TextInputElement\n                name={i18n.t('forms.state', 'State')}\n                placeholder=\"State\"\n                onChange={this.handleStateChanged}\n                style={TextInputStyle.small}\n                entry={this.state.state}\n              />\n              <span className={styles.divider} data-draggable={true}>\n                and\n              </span>\n              <TextInputElement\n                name={i18n.t('forms.district', 'District')}\n                placeholder={i18n.t('forms.district', 'District')}\n                onChange={this.handleDistrictChanged}\n                style={TextInputStyle.small}\n                entry={this.state.district}\n              />\n            </>\n          );\n        }\n      } else if (isRelativeDate(this.state.operatorConfig.type)) {\n        return (\n          <>\n            <span className={styles.divider} data-draggable={true}>\n              today +{' '}\n            </span>\n            <TextInputElement\n              __className={styles.relative_date}\n              name={i18n.t('forms.arguments', 'arguments')}\n              onChange={this.handleArgumentChanged}\n              entry={this.state.argument}\n              style={TextInputStyle.small}\n              autocomplete={false}\n            />\n            <span className={styles.divider}>days</span>\n          </>\n        );\n      } else {\n        return (\n          <TextInputElement\n            name={i18n.t('forms.arguments', 'arguments')}\n            onChange={this.handleArgumentChanged}\n            entry={this.state.argument}\n            style={TextInputStyle.small}\n            placeholder={this.state.operatorConfig.type === Operators.has_district ? 'State' : ''}\n            autocomplete={true}\n          />\n        );\n      }\n    }\n\n    return null;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <FormElement\n        data-spec=\"case-form\"\n        name={this.props.name}\n        __className={styles.group}\n        kaseError={this.state.errors.length > 0}\n      >\n        <div\n          className={`${styles.kase} ${styles[this.state.operatorConfig.type]}`}\n          data-draggable={true}\n        >\n          <span className={`fe-chevrons-expand ${styles.dnd_icon}`} data-draggable={true} />\n          <div className={styles.choice}>\n            <TembaSelect\n              name={i18n.t('forms.operator', 'operator')}\n              style={TembaSelectStyle.small}\n              options={this.getOperators()}\n              nameKey=\"verboseName\"\n              valueKey=\"type\"\n              onChange={this.handleOperatorChanged}\n              value={this.state.operatorConfig}\n            ></TembaSelect>\n          </div>\n          <div\n            className={\n              this.state.operatorConfig.operands > 1 ? styles.multi_operand : styles.single_operand\n            }\n          >\n            {this.renderArguments()}\n          </div>\n          <div className={styles.categorize_as} data-draggable={true}>\n            categorize as\n          </div>\n          <div className={styles.category}>\n            <TextInputElement\n              name={i18n.t('forms.exit_name', 'Exit Name')}\n              style={TextInputStyle.small}\n              onChange={this.handleExitChanged}\n              entry={this.state.categoryName}\n              maxLength={36}\n              showInvalid={hasErrorType(this.state.errors, [/category/])}\n            />\n          </div>\n          <span\n            data-testid={'remove-case-' + this.props.kase.uuid}\n            className={`fe-x ${styles.remove_icon}`}\n            onClick={this.handleRemoveClicked}\n          />\n        </div>\n      </FormElement>\n    );\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { Operators } from 'config/interfaces';\nimport { createUUID } from 'utils';\n\nexport const createEmptyCase = (): CaseProps => {\n  const uuid = createUUID();\n  return {\n    uuid,\n    kase: {\n      uuid,\n      type: Operators.has_any_word,\n      arguments: [''],\n      category_uuid: null\n    },\n    categoryName: '',\n    valid: true\n  };\n};\n","import arrayMove from 'array-move';\nimport { react as bindCallbacks } from 'auto-bind';\nimport CaseElement from 'components/flow/routers/case/CaseElement';\nimport { createEmptyCase } from 'components/flow/routers/caselist/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Case } from 'flowTypes';\nimport * as React from 'react';\nimport { FormState, mergeForm } from 'store/nodeEditor';\nimport { SortableElement, SortEnd, SortableContainer } from 'react-sortable-hoc';\n\nimport styles from './CaseList.module.scss';\nimport { Operator } from 'config/interfaces';\nimport { Asset } from 'store/flowContext';\n\nexport enum DragCursor {\n  move = 'move',\n  pointer = 'pointer'\n}\n\nexport interface CaseProps {\n  uuid: string;\n  kase: Case;\n  categoryName: string;\n  valid: boolean;\n  operators?: Operator[];\n  classifier?: Asset;\n}\n\nexport interface CaseListProps {\n  cases: CaseProps[];\n  onCasesUpdated(cases: CaseProps[]): void;\n  operators?: Operator[];\n  classifier?: Asset;\n  createEmptyCase?: () => CaseProps;\n}\n\nexport interface CaseListState extends FormState {\n  currentCases: CaseProps[];\n}\n\nconst SortableItem = SortableElement(({ value: row }: any) => {\n  const caseProps = row.item;\n  return (\n    <div className={styles.kase + ' case_list_case'}>\n      <CaseElement\n        key={caseProps.uuid}\n        {...caseProps}\n        onRemove={row.list.handleRemoveCase}\n        onChange={row.list.handleUpdateCase}\n        operators={row.list.props.operators}\n        classifier={row.list.props.classifier}\n      />\n    </div>\n  );\n});\n\n/**\n * CaseList is a component made up of case elements that lets\n * the user configure rules and drag and drop to set their order.\n */\nexport default class CaseList extends React.Component<CaseListProps, CaseListState> {\n  private sortableList = SortableContainer(({ items }: any) => {\n    return (\n      <div className={styles.case_list}>\n        {items.map((value: any, index: any) => (\n          <SortableItem\n            key={`item-${index}`}\n            index={index}\n            value={{ item: value, list: this }}\n            disabled={index === this.state.currentCases.length - 1}\n            shouldCancelStart={(e: any) => {\n              console.log(e);\n              return true;\n            }}\n          />\n        ))}\n      </div>\n    );\n  });\n\n  constructor(props: CaseListProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n\n    const caseProps = this.props.cases;\n\n    if (!this.hasEmptyCase(caseProps)) {\n      caseProps.push(this.createEmptyCase());\n    }\n\n    // initialize our cases\n    this.state = {\n      currentCases: caseProps,\n      valid: true\n    };\n  }\n\n  private createEmptyCase(): CaseProps {\n    return this.props.createEmptyCase ? this.props.createEmptyCase() : createEmptyCase();\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleUpdate(keys: { caseProps?: CaseProps; removeCase?: any }) {\n    const updates: Partial<CaseListState> = {};\n\n    let ensureEmptyCase = false;\n\n    if (keys.hasOwnProperty('caseProps')) {\n      updates.currentCases = [keys.caseProps];\n      ensureEmptyCase = true;\n      if (!keys.caseProps.valid) {\n        // TODO: refactor this to be a form entry\n        // mock our case to have validation failures, this is so the case list sees\n        // the existence of errors which mergeForm uses when merging form validity\n        // (keys.caseProps as any).validationFailures = [{ message: 'invalid case' }];\n        updates.valid = false;\n      }\n    }\n\n    let toRemove: any[] = [];\n    if (keys.hasOwnProperty('removeCase')) {\n      toRemove = [{ currentCases: [keys.removeCase] }];\n      ensureEmptyCase = true;\n    }\n\n    // update our form\n    this.setState(\n      (prevState: CaseListState) => {\n        const updated = mergeForm(prevState, updates, toRemove) as CaseListState;\n\n        // notify our listener\n        this.props.onCasesUpdated(updated.currentCases);\n        return updated;\n      },\n      () => {\n        // if we no longer have an empty case, add one\n        if (ensureEmptyCase) {\n          if (!this.hasEmptyCase(this.state.currentCases)) {\n            this.handleUpdate({ caseProps: this.createEmptyCase() });\n          }\n        }\n      }\n    );\n  }\n\n  private hasEmptyCase(cases: CaseProps[]): boolean {\n    return cases.find((caseProps: CaseProps) => caseProps.categoryName.trim().length === 0) != null;\n  }\n\n  private handleRemoveCase(uuid: string) {\n    return this.handleUpdate({\n      removeCase: { uuid }\n    });\n  }\n\n  private handleUpdateCase(caseProps: CaseProps) {\n    this.handleUpdate({ caseProps });\n  }\n\n  private handleSortEnd({ oldIndex, newIndex }: SortEnd): void {\n    this.setState(\n      ({ currentCases }) => ({\n        currentCases: arrayMove(\n          currentCases,\n          oldIndex,\n          newIndex === this.state.currentCases.length - 1 ? newIndex - 1 : newIndex\n        )\n      }),\n      () => {\n        this.props.onCasesUpdated(this.state.currentCases);\n      }\n    );\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div\n        className={\n          styles.case_list_container +\n          ' ' +\n          (this.state.currentCases.length > 5 ? styles.scrolling : '')\n        }\n        tabIndex={0}\n      >\n        <this.sortableList\n          items={this.state.currentCases}\n          onSortEnd={this.handleSortEnd}\n          shouldCancelStart={(e: React.MouseEvent<HTMLDivElement>) => {\n            if (!(e.target instanceof HTMLElement)) {\n              return true;\n            }\n            return !e.target.dataset.draggable;\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { nodeToState, stateToNode } from 'components/flow/routers/expression/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, Required, StartIsNonNumeric, validate } from 'store/validators';\nimport i18n from 'config/i18n';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface ExpressionRouterFormState extends FormState {\n  cases: CaseProps[];\n  resultName: StringEntry;\n  operand: StringEntry;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class ExpressionRouterForm extends React.Component<\n  RouterFormProps,\n  ExpressionRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleOperandUpdated(value: string): void {\n    this.setState({\n      operand: validate(i18n.t('forms.operand', 'Operand'), value, [Required])\n    });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>If the expression...</p>\n        <TextInputElement\n          name={i18n.t('forms.operand', 'Operand')}\n          showLabel={false}\n          autocomplete={true}\n          onChange={this.handleOperandUpdated}\n          entry={this.state.operand}\n        />\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport styles from './DigitsRouterForm.module.scss';\nimport { nodeToState, stateToNode } from './helpers';\nimport i18n from 'config/i18n';\n\nexport interface DigitsRouterFormState extends FormState {\n  cases: CaseProps[];\n  resultName: StringEntry;\n}\n\nexport default class DigitsRouterForm extends React.Component<\n  RouterFormProps,\n  DigitsRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p className={styles.lead_in}>If the keypad entry before the # symbol..</p>\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { HintTypes, Router, RouterTypes, SwitchRouter, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nimport { DigitsRouterFormState } from './DigitsRouterForm';\nimport { DIGITS_OPERAND } from 'components/nodeeditor/constants';\n\nexport const nodeToState = (settings: NodeEditorSettings): DigitsRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  if (getType(settings.originalNode) === Types.wait_for_digits) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: DigitsRouterFormState\n): RenderNode => {\n  const { cases, exits, categories, defaultCategory: defaultExit, caseConfig } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    categories,\n    cases,\n    operand: DIGITS_OPERAND,\n    wait: { type: WaitTypes.msg, hint: { type: HintTypes.digits } },\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","export const DEFAULT_OPERAND = '@input.text';\nexport const GROUPS_OPERAND = '@contact.groups';\nexport const WEBHOOK_OPERAND = '@run.webhook';\nexport const SUBFLOW_OPERAND = '@child.run.status';\nexport const MEDIA_OPERAND = '@input';\nexport const DIGITS_OPERAND = '@input.text';\nexport const MENU_OPERAND = '@input.text';\nexport const SCHEMES_OPERAND = '@(urn_parts(contact.urn).scheme)';\n\n// default body for non-GET webhook actions\n// export const DEFAULT_BODY: string = `@(json(object(\n//   \"contact\", object(\n//     \"uuid\", contact.uuid,\n//     \"name\", contact.name,\n//     \"urn\", contact.urn\n//   ),\n//   \"flow\", object(\n//     \"uuid\", run.flow.uuid,\n//     \"name\", run.flow.name\n//   ),\n//   \"results\", foreach_value(results, extract_object, \"value\", \"category\")\n// )))`;\n\nexport const DEFAULT_BODY: string = `{\n  \"contact\": \"@contact\",\n  \"results\": \"@results\",\n  \"custom_key\": \"custom_value\"\n}`;\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { getName, sortFieldsAndProperties } from 'components/flow/actions/updatecontact/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { FormEntry, FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport styles from './FieldRouterForm.module.scss';\nimport { getRoutableFields, nodeToState, stateToNode } from './helpers';\nimport i18n from 'config/i18n';\nimport { TembaSelectStyle } from 'temba/TembaSelect';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface FieldRouterFormState extends FormState {\n  field: FormEntry;\n  cases: CaseProps[];\n  resultName: StringEntry;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class FieldRouterForm extends React.Component<\n  RouterFormProps,\n  FieldRouterFormState\n> {\n  public static contextTypes = {\n    assetService: fakePropType,\n    config: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings, this.props.assetStore);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleFieldChanged(selected: any[]): void {\n    this.setState({ field: { value: selected[0] } });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.lead_in}>\n          If the contact's\n          <div className={`${styles.field_select} select-small`}>\n            <AssetSelector\n              name={i18n.t('forms.contact_field', 'Contact Field')}\n              style={TembaSelectStyle.small}\n              assets={this.props.assetStore.fields}\n              additionalOptions={getRoutableFields(this.context.config.flowType)}\n              valueKey=\"id\"\n              getName={getName}\n              entry={this.state.field}\n              searchable={true}\n              sortFunction={sortFieldsAndProperties}\n              onChange={this.handleFieldChanged}\n            />\n          </div>\n        </div>\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { ExpressionRouterFormState } from 'components/flow/routers/expression/ExpressionRouterForm';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const nodeToState = (settings: NodeEditorSettings): ExpressionRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  let operand = DEFAULT_OPERAND;\n\n  if (settings.originalNode && getType(settings.originalNode) === Types.split_by_expression) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    operand = router.operand;\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    operand: { value: operand },\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ExpressionRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    categories,\n    cases,\n    operand: state.operand.value,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_expression,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { NAME_PROPERTY } from 'components/flow/props';\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { FieldRouterFormState } from 'components/flow/routers/field/FieldRouterForm';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { getContactProperties } from 'components/helpers';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { FlowTypes, Types } from 'config/interfaces';\nimport { getType, Scheme, SCHEMES } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { Asset, AssetStore, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const getRoutableFields = (flowType: FlowTypes = null): Asset[] => {\n  return [\n    ...getContactProperties(flowType),\n    ...SCHEMES.map((scheme: Scheme) => ({\n      name: scheme.path,\n      id: scheme.scheme,\n      type: AssetType.Scheme\n    }))\n  ];\n};\n\nexport const nodeToState = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): FieldRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  let field: any = null;\n\n  const type = getType(settings.originalNode);\n  if (settings.originalNode && type === Types.split_by_contact_field) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    const operand = settings.originalNode.ui.config.operand;\n\n    if (assetStore.fields) {\n      if (operand.id in assetStore.fields.items) {\n        const name = assetStore.fields.items[operand.id].name;\n        field = { key: operand.id, label: name, type: operand.type };\n      }\n    }\n\n    // couldn't find the asset, check our routable fields\n    if (!field) {\n      field = getRoutableFields().find((asset: Asset) => asset.id === operand.id);\n    }\n  }\n\n  // our default is name\n  if (!field) {\n    field = NAME_PROPERTY;\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    field: { value: field },\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: FieldRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let operand = DEFAULT_OPERAND;\n\n  const asset = state.field.value;\n\n  let operandConfig = {\n    id: asset.id,\n    type: asset.type,\n    name: asset.name\n  };\n\n  if (asset.type === AssetType.Scheme) {\n    operand = `@(default(urn_parts(urns.${asset.id}).path, \"\"))`;\n  } else if (asset.type === AssetType.ContactProperty) {\n    operand = `@contact.${asset.id}`;\n  } else if (asset.key) {\n    operand = `@fields.${asset.key}`;\n    operandConfig = {\n      id: asset.key,\n      name: asset.label,\n      type: AssetType.Field\n    };\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    cases,\n    categories,\n    operand,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_contact_field,\n    [],\n    {\n      operand: operandConfig,\n      cases: caseConfig\n    }\n  );\n\n  return newRenderNode;\n};\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { GroupsRouterFormState } from 'components/flow/routers/groups/GroupsRouterForm';\nimport { createRenderNode, getSwitchRouter, resolveRoutes } from 'components/flow/routers/helpers';\nimport { GROUPS_OPERAND } from 'components/nodeeditor/constants';\nimport { Operators, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Category, FlowNode, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport const nodeToState = (settings: NodeEditorSettings): GroupsRouterFormState => {\n  const state: GroupsRouterFormState = {\n    groups: { value: [] },\n    resultName: { value: '' },\n    valid: false\n  };\n\n  if (getType(settings.originalNode) === Types.split_by_groups) {\n    state.groups.value = extractGroups(settings.originalNode.node);\n    state.resultName = {\n      value: (settings.originalNode.node.router as SwitchRouter).result_name || ''\n    };\n    state.valid = true;\n  }\n\n  return state;\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: GroupsRouterFormState\n): RenderNode => {\n  const currentCases = groupsToCases(state.groups.value);\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    currentCases,\n    false,\n    settings.originalNode.node\n  );\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    cases,\n    categories,\n    default_category_uuid: defaultExit,\n    operand: GROUPS_OPERAND,\n    result_name: state.resultName.value\n  };\n\n  return createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_groups,\n    [],\n    { cases: caseConfig }\n  );\n};\n\nexport const extractGroups = (node: FlowNode): any[] => {\n  let groups: any[] = [];\n  const router = getSwitchRouter(node);\n  if (router) {\n    groups = (router as SwitchRouter).cases.map(kase => {\n      const category = router.categories.find((cat: Category) => cat.uuid === kase.category_uuid);\n      return {\n        name: category.name,\n        uuid: kase.arguments[0]\n      };\n    });\n  }\n  return groups;\n};\nexport const groupsToCases = (groups: any[] = []): CaseProps[] => {\n  return groups.map(({ name, uuid }: any) => ({\n    uuid,\n    kase: {\n      uuid: createUUID(),\n      type: Operators.has_group,\n      arguments: [uuid, name],\n      category_uuid: ''\n    },\n    categoryName: name,\n    valid: true\n  }));\n};\n","import { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Case, Category, SwitchRouter } from 'flowTypes';\nimport { LocalizedObject } from 'services/Localization';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport enum LocalizedType {\n  Category,\n  Case\n}\n\nexport const getOriginalCase = (nodeSettings: NodeEditorSettings, uuid: string) => {\n  const cases = (nodeSettings.originalNode.node.router as SwitchRouter).cases;\n  return cases.find((item: any) => item.uuid === uuid);\n};\n\nexport const getOriginalCategory = (nodeSettings: NodeEditorSettings, uuid: string) => {\n  const items = nodeSettings.originalNode.node.router.categories;\n  return items.find((item: any) => item.uuid === uuid);\n};\n\nexport const hasLocalizableCases = (renderNode: RenderNode) => {\n  const type = getType(renderNode);\n  return type === Types.wait_for_response || type === Types.split_by_expression;\n};\n\nexport const getLocalizedObjects = (\n  nodeSettings: NodeEditorSettings,\n  localizedType: LocalizedType\n): Category[] | Case[] => {\n  const filtered: any = [];\n\n  let items: Category[] | Case[] = nodeSettings.originalNode.node.router.categories;\n  if (localizedType === LocalizedType.Case) {\n    if (hasLocalizableCases(nodeSettings.originalNode)) {\n      items = (nodeSettings.originalNode.node.router as SwitchRouter).cases;\n    } else {\n      items = [];\n    }\n  }\n\n  for (const original of items) {\n    const [localized] = nodeSettings.localizations.filter(\n      (localizedObject: LocalizedObject) => localizedObject.getObject().uuid === original.uuid\n    );\n\n    if (localized.isLocalized()) {\n      filtered.push(localized.getObject());\n    } else {\n      filtered.push({ uuid: original.uuid });\n    }\n  }\n  return filtered;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { RouterFormProps } from 'components/flow/props';\nimport { GROUP_LABEL } from 'components/flow/routers/constants';\nimport { nodeToState, stateToNode } from 'components/flow/routers/groups/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Asset } from 'store/flowContext';\nimport { AssetArrayEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { Required, validate } from 'store/validators';\nimport i18n from 'config/i18n';\nimport { renderIssues } from 'components/flow/actions/helpers';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport interface GroupsRouterFormState extends FormState {\n  groups: AssetArrayEntry;\n  resultName: StringEntry;\n}\n\nexport default class GroupsRouterForm extends React.Component<\n  RouterFormProps,\n  GroupsRouterFormState\n> {\n  public static contextTypes = {\n    endpoints: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleGroupsChanged(groups: Asset[]): void {\n    this.handleUpdate({ groups });\n  }\n\n  private handleUpdateResultName(resultName: string): void {\n    this.handleUpdate({ resultName });\n  }\n\n  private handleUpdate(keys: { groups?: Asset[]; resultName?: string }): boolean {\n    const updates: Partial<GroupsRouterFormState> = {};\n\n    if (keys.hasOwnProperty('groups')) {\n      updates.groups = validate(i18n.t('forms.groups', 'Groups'), keys.groups, [Required]);\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = { value: keys.resultName };\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>{GROUP_LABEL}</p>\n        <AssetSelector\n          name={i18n.t('forms.groups', 'Groups')}\n          assets={this.props.assetStore.groups}\n          entry={this.state.groups}\n          searchable={true}\n          onChange={this.handleGroupsChanged}\n          multi={true}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { determineTypeConfig } from 'components/flow/helpers';\nimport { LocalizationFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { getOperatorConfig } from 'config/operatorConfigs';\nimport { Case, Category } from 'flowTypes';\nimport * as React from 'react';\nimport { FormState, mergeForm } from 'store/nodeEditor';\n\nimport {\n  getLocalizedObjects,\n  getOriginalCase,\n  getOriginalCategory,\n  LocalizedType\n} from './helpers';\nimport styles from './RouterLocalizationForm.module.scss';\nimport i18n from 'config/i18n';\nimport { renderIssues } from 'components/flow/actions/helpers';\n\nexport interface RouterLocalizationFormState extends FormState {\n  categories: Category[];\n  cases: Case[];\n}\n\nexport default class RouterLocalizationForm extends React.Component<\n  LocalizationFormProps,\n  RouterLocalizationFormState\n> {\n  constructor(props: LocalizationFormProps) {\n    super(props);\n\n    const categories: Category[] = getLocalizedObjects(\n      props.nodeSettings,\n      LocalizedType.Category\n    ) as Category[];\n    const cases: Case[] = getLocalizedObjects(props.nodeSettings, LocalizedType.Case) as Case[];\n\n    this.state = { categories, cases, valid: true };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleUpdate(keys: { category?: Category; kase?: Case }): boolean {\n    const updates: Partial<RouterLocalizationFormState> = {};\n\n    if (keys.hasOwnProperty('category')) {\n      updates.categories = [keys.category];\n    }\n\n    if (keys.hasOwnProperty('kase')) {\n      updates.cases = [keys.kase];\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleUpdateCategoryName(category: Category, name: string): boolean {\n    category.name = name;\n    return this.handleUpdate({ category });\n  }\n\n  private handleUpdateCaseArgument(kase: Case, arg: string): boolean {\n    kase.arguments = [arg];\n    return this.handleUpdate({ kase });\n  }\n\n  private handleSave(): void {\n    // collect up our category localizations\n    const translations: any[] = this.state.categories.map((cat: Category) => {\n      return cat.name\n        ? {\n            uuid: cat.uuid,\n            translations: {\n              name: cat.name\n            }\n          }\n        : { uuid: cat.uuid };\n    });\n\n    // same thing for any cases\n    translations.push(\n      ...this.state.cases.map((kase: Case) => {\n        return kase.arguments\n          ? {\n              uuid: kase.uuid,\n              translations: {\n                arguments: kase.arguments\n              }\n            }\n          : { uuid: kase.uuid };\n      })\n    );\n\n    this.props.updateLocalizations(this.props.language.id, translations);\n\n    // notify our modal we are done\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderCases(): JSX.Element[] {\n    return this.state.cases.map((kase: Case) => {\n      const originalCase = getOriginalCase(this.props.nodeSettings, kase.uuid) as Case;\n\n      const { verboseName } = getOperatorConfig(originalCase.type);\n\n      const [orginalArgument] = originalCase.arguments;\n\n      let argument = '';\n      if (kase.arguments && kase.arguments.length > 0) {\n        argument = kase.arguments[0];\n      }\n      const translation = i18n.t('forms.translation', 'Translation');\n\n      return (\n        <div\n          key={`translate_${kase.uuid}`}\n          data-spec=\"operator-field\"\n          className={styles.translating_operator_container}\n        >\n          <div data-spec=\"verbose-name\" className={styles.translating_operator}>\n            {verboseName}\n          </div>\n          <div data-spec=\"argument-to-translate\" className={styles.translating_from}>\n            {orginalArgument}\n          </div>\n          <div className={styles.translating_to}>\n            <TextInputElement\n              data-spec=\"localize-case\"\n              name={kase.uuid}\n              placeholder={`${this.props.language.name} ${translation}`}\n              showLabel={false}\n              onChange={(arg: string) => this.handleUpdateCaseArgument(kase, arg)}\n              entry={{ value: argument }}\n            />\n          </div>\n        </div>\n      );\n    });\n  }\n\n  public renderCategories(): JSX.Element[] {\n    return this.state.categories.map((cat: Category) => {\n      const originalCategory = getOriginalCategory(this.props.nodeSettings, cat.uuid);\n\n      const placeholder = `${this.props.language.name} Translation`;\n\n      if (!cat.name) {\n        cat.name = '';\n      }\n\n      return (\n        <div key={cat.uuid} className={styles.translating_category}>\n          <div data-spec=\"category-name\" className={styles.translating_from}>\n            {originalCategory.name}\n          </div>\n          <div className={styles.translating_to}>\n            <TextInputElement\n              data-spec=\"localize-category\"\n              name={cat.name}\n              placeholder={placeholder}\n              showLabel={false}\n              entry={{ value: cat.name }}\n              onChange={(name: string) => this.handleUpdateCategoryName(cat, name)}\n            />\n          </div>\n        </div>\n      );\n    });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n\n    const tabs: Tab[] = [];\n\n    if (this.state.cases.length > 0) {\n      tabs.push({\n        name: 'Rule Translations',\n        body: (\n          <>\n            <p data-spec=\"instructions\">\n              Sometimes languages need special rules to route things properly. If a translation is\n              not provided, the original rule will be used.\n            </p>\n            {this.renderCases()}\n          </>\n        )\n      });\n    }\n\n    const categories = (\n      <Dialog\n        title={`${this.props.language.name} Category Names`}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <p data-spec=\"instructions\">\n          When category names are referenced later in the flow, the appropriate language for the\n          category will be used. If no translation is provided, the original text will be used.\n        </p>\n        {this.renderCategories()}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n\n    // if we have cases, use a flipper\n    return categories;\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createRenderNode, resolveRoutes } from 'components/flow/routers/helpers';\nimport { Operators, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Case, Category, HintTypes, Router, RouterTypes, SwitchRouter, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nimport { MenuRouterFormState } from './MenuRouterForm';\nimport { MENU_OPERAND } from 'components/nodeeditor/constants';\n\nexport const nodeToState = (settings: NodeEditorSettings): MenuRouterFormState => {\n  let resultName: StringEntry = { value: '' };\n\n  const menu: string[] = [];\n  for (let i = 0; i < 10; i++) {\n    menu.push('');\n  }\n\n  if (getType(settings.originalNode) === Types.wait_for_menu) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    for (const kase of router.cases) {\n      let idx = parseInt(kase.arguments[0], 10) - 1;\n      if (idx === -1) {\n        idx = menu.length - 1;\n      }\n\n      menu[idx] = settings.originalNode.node.router.categories.find(\n        (category: Category) => category.uuid === kase.category_uuid\n      ).name;\n    }\n    resultName = { value: router.result_name || '' };\n  }\n\n  return {\n    resultName,\n    menu,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: MenuRouterFormState\n): RenderNode => {\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let originalCases: Case[] = [];\n  if (getType(settings.originalNode) === Types.wait_for_menu) {\n    originalCases = (settings.originalNode.node.router as SwitchRouter).cases;\n  }\n\n  const caseProps = menuToCases(state.menu, originalCases);\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    caseProps,\n    false,\n    settings.originalNode.node\n  );\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    operand: MENU_OPERAND,\n    default_category_uuid: defaultExit,\n    cases,\n    categories,\n    wait: { type: WaitTypes.msg, hint: { type: HintTypes.digits, count: 1 } },\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n\nexport const menuToCases = (menu: string[] = [], previousCases: Case[]): CaseProps[] =>\n  menu\n    .map((categoryName: string, index: number) => {\n      const idx = index === 9 ? 0 : index + 1;\n\n      const kase =\n        previousCases.find((c: Case) => c.arguments[0] === '' + idx) ||\n        ({\n          uuid: createUUID(),\n          arguments: ['' + idx],\n          type: Operators.has_number_eq,\n          category_uuid: ''\n        } as Case);\n\n      return {\n        uuid: kase.uuid,\n        kase,\n        categoryName,\n        valid: true\n      };\n    })\n    .filter((caseProps: CaseProps) => caseProps.categoryName.trim().length > 0);\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport { nodeToState, stateToNode } from './helpers';\nimport styles from './MenuRouterForm.module.scss';\nimport i18n from 'config/i18n';\n\nconst mutate = require('immutability-helper');\n\nexport interface MenuRouterFormState extends FormState {\n  resultName: StringEntry;\n  menu: string[];\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class MenuRouterForm extends React.Component<RouterFormProps, MenuRouterFormState> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleSave(): void {\n    this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleMenuChanged(index: number, value: string): void {\n    const menu = mutate(this.state.menu, { [index]: { $set: value } });\n    this.setState({ menu });\n  }\n\n  private renderOption(index: number): JSX.Element {\n    return (\n      <div key={'menuoption-' + index} className={styles.menu_option}>\n        <div className={styles.digit}>{index === 9 ? 0 : index + 1}</div>\n        <div className={styles.category}>\n          <TextInputElement\n            name={'Menu ' + index}\n            entry={{ value: this.state.menu[index] }}\n            onChange={(value: string) => {\n              this.handleMenuChanged(index, value);\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private renderMenu(): any {\n    const options: JSX.Element[] = [];\n    for (let i = 0; i < 10; i++) {\n      options.push(this.renderOption(i));\n    }\n\n    return options;\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.menu}>{this.renderMenu()}</div>\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { createRenderNode } from 'components/flow/routers/helpers';\nimport { RandomRouterFormState } from 'components/flow/routers/random/RandomRouterForm';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Category, Exit, Router, RouterTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID, range } from 'utils';\n\nexport const BUCKET_OPTIONS: SelectOption[] = range(2, 11).map((count: number) => {\n  return { value: count + '', name: count + ' buckets' };\n});\n\nexport const getOption = (value: number): SelectOption => {\n  let option = BUCKET_OPTIONS.find(\n    (bucketOption: SelectOption) => bucketOption.value === value + ''\n  );\n  if (!option) {\n    option = { name: `${value} Buckets`, value: value + '' };\n  }\n  return option;\n};\n\nexport const nodeToState = (settings: NodeEditorSettings): RandomRouterFormState => {\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n  let buckets = 2;\n\n  let categories: Category[] = [];\n  if (settings.originalNode && getType(settings.originalNode) === Types.split_by_random) {\n    const router = settings.originalNode.node.router as Router;\n    resultName = { value: router.result_name || '' };\n    buckets = settings.originalNode.node.exits.length;\n\n    // use any existing random buckets if we have any\n    categories = settings.originalNode.node.router.categories;\n  }\n\n  categories = fillOutCategories(categories, buckets);\n\n  return {\n    categories,\n    resultName,\n    bucketChoice: { value: getOption(buckets) },\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: RandomRouterFormState\n): RenderNode => {\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const exits =\n    getType(settings.originalNode) === Types.split_by_random\n      ? settings.originalNode.node.exits\n      : [];\n\n  const count = parseInt(state.bucketChoice.value.value, 10);\n  exits.splice(count, exits.length - count);\n\n  state.categories.forEach((category: Category, idx: number) => {\n    if (idx < exits.length) {\n      category.exit_uuid = exits[idx].uuid;\n    } else {\n      const newExit: Exit = {\n        uuid: createUUID(),\n        destination_uuid: null\n      };\n      category.exit_uuid = newExit.uuid;\n      exits.push(newExit);\n    }\n  });\n\n  const router: Router = {\n    type: RouterTypes.random,\n    categories: state.categories,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_random,\n    [],\n    null\n  );\n\n  return newRenderNode;\n};\n\nexport const fillOutCategories = (categories: Category[], buckets: number): Category[] => {\n  // add any that we still need\n  return categories.concat(\n    range(categories.length, buckets).map((idx: number) => {\n      return { uuid: createUUID(), name: `Bucket ${idx + 1}`, exit_uuid: null };\n    })\n  );\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Category } from 'flowTypes';\nimport * as React from 'react';\nimport { FormState, mergeForm, SelectOptionEntry, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport { BUCKET_OPTIONS, fillOutCategories, nodeToState, stateToNode } from './helpers';\nimport styles from './RandomRouterForm.module.scss';\nimport i18n from 'config/i18n';\nimport { TembaSelectStyle } from 'temba/TembaSelect';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface RandomRouterFormState extends FormState {\n  bucketChoice: SelectOptionEntry;\n  resultName: StringEntry;\n  categories: Category[];\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class RandomRouterForm extends React.Component<\n  RouterFormProps,\n  RandomRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleBucketsChanged(selected: SelectOption): boolean {\n    // create new exits if needed\n\n    const count = parseInt(selected.value, 10);\n\n    let categories = this.state.categories.concat([]);\n\n    // prune off if we have too many\n    categories = categories.slice(0, count);\n\n    // add any that we still need\n    categories = fillOutCategories(categories, count);\n\n    const updates: Partial<RandomRouterFormState> = {\n      bucketChoice: { value: selected }\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState({ ...updated, categories });\n\n    return updated.valid;\n  }\n\n  public handleSave(): void {\n    this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleBucketNameChanged(category: Category, value: string): void {\n    const categories = this.state.categories;\n    categories.find((cat: Category) => cat.uuid === category.uuid).name = value;\n    this.setState({ categories });\n  }\n\n  private renderBucketNames(): any {\n    return this.state.categories.map((cat: Category) => (\n      <TextInputElement\n        key={cat.uuid}\n        __className={styles.bucket_name}\n        name={cat.uuid}\n        entry={{ value: cat.name }}\n        onChange={(value: string) => {\n          this.handleBucketNameChanged(cat, value);\n        }}\n      />\n    ));\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const OPTIONS = BUCKET_OPTIONS.concat([]);\n    if (BUCKET_OPTIONS.indexOf(this.state.bucketChoice.value) === -1) {\n      OPTIONS.push(this.state.bucketChoice.value);\n    }\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.options}>\n          <div className={styles.lead_in}>Split them randomly into one of</div>\n          <div className={styles.bucket_select}>\n            <SelectElement\n              key=\"buckets_select\"\n              style={TembaSelectStyle.small}\n              name={i18n.t('forms.buckets', 'Buckets')}\n              entry={this.state.bucketChoice}\n              onChange={this.handleBucketsChanged}\n              options={OPTIONS}\n            />\n          </div>\n        </div>\n        <div className={styles.bucket_list}>{this.renderBucketNames()}</div>\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { ResponseRouterFormState } from 'components/flow/routers/response/ResponseRouterForm';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter, Wait, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const nodeToState = (settings: NodeEditorSettings): ResponseRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: 'Result' };\n  let timeout = 0;\n\n  if (settings.originalNode && getType(settings.originalNode) === Types.wait_for_response) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    if (settings.originalNode.node.router.wait && settings.originalNode.node.router.wait.timeout) {\n      timeout = settings.originalNode.node.router.wait.timeout.seconds || 0;\n    }\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    timeout,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ResponseRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory, timeoutCategory, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    state.timeout > 0,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const wait = { type: WaitTypes.msg } as Wait;\n  if (state.timeout > 0) {\n    wait.timeout = {\n      seconds: state.timeout,\n      category_uuid: timeoutCategory\n    };\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultCategory,\n    cases,\n    categories,\n    operand: DEFAULT_OPERAND,\n    wait,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { nodeToState, stateToNode } from 'components/flow/routers/response/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TimeoutControl from 'components/form/timeout/TimeoutControl';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\nimport { WAIT_LABEL } from 'components/flow/routers/constants';\nimport i18n from 'config/i18n';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface ResponseRouterFormState extends FormState {\n  cases: CaseProps[];\n  resultName: StringEntry;\n  timeout: number;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class ResponseRouterForm extends React.Component<\n  RouterFormProps,\n  ResponseRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleUpdateTimeout(timeout: number): void {\n    this.setState({ timeout });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    const invalidCase = cases.find((caseProps: CaseProps) => !caseProps.valid);\n    this.setState({ cases, valid: !invalidCase });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        gutter={\n          <TimeoutControl timeout={this.state.timeout} onChanged={this.handleUpdateTimeout} />\n        }\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div>{WAIT_LABEL}</div>\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport * as React from 'react';\nimport { renderIf } from 'utils';\n\nimport styles from './TimeoutControl.module.scss';\nimport i18n from 'config/i18n';\nimport TembaSelect, { TembaSelectStyle } from 'temba/TembaSelect';\nimport { SelectOption } from '../select/SelectElement';\n\nexport const TIMEOUT_OPTIONS: SelectOption[] = [\n  { value: '60', name: i18n.t('forms.timeout_1 minute', '1 minute') },\n  { value: '120', name: i18n.t('forms.timeout_2 minutes', '2 minutes') },\n  { value: '180', name: i18n.t('forms.timeout_3 minutes', '3 minutes') },\n  { value: '240', name: i18n.t('forms.timeout_4 minutes', '4 minutes') },\n  { value: '300', name: i18n.t('forms.timeout_5 minutes', '5 minutes') },\n  { value: '600', name: i18n.t('forms.timeout_10 minutes', '10 minutes') },\n  { value: '900', name: i18n.t('forms.timeout_15 minutes', '15 minutes') },\n  { value: '3600', name: i18n.t('forms.timeout_1 hour', '1 hour') },\n  { value: '7200', name: i18n.t('forms.timeout_2 hours', '2 hours') },\n  { value: '10800', name: i18n.t('forms.timeout_3 hours', '3 hours') },\n  { value: '21600', name: i18n.t('forms.timeout_6 hours', '6 hours') },\n  { value: '43200', name: i18n.t('forms.timeout_12 hours', '12 hours') },\n  { value: '64800', name: i18n.t('forms.timeout_18 hours', '18 hours') },\n  { value: '86400', name: i18n.t('forms.timeout_1 day', '1 day') },\n  { value: '172800', name: i18n.t('forms.timeout_2 days', '2 days') },\n  { value: '259200', name: i18n.t('forms.timeout_3 days', '3 days') },\n  { value: '604800', name: i18n.t('forms.timeout_1 week', '1 week') }\n];\n\nexport const DEFAULT_TIMEOUT = TIMEOUT_OPTIONS[4];\n\nexport const ellipsize = (str: string) => `${str}...`;\n\nexport interface TimeoutControlProps {\n  timeout: number;\n  onChanged(timeout: number): void;\n}\n\nexport default class TimeoutControl extends React.Component<TimeoutControlProps> {\n  constructor(props: TimeoutControlProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private getSelected(timeout: number): any {\n    for (const [idx, { value }] of TIMEOUT_OPTIONS.entries()) {\n      if (value === '' + timeout) {\n        return TIMEOUT_OPTIONS[idx];\n      }\n    }\n    return null;\n  }\n\n  private isChecked(): boolean {\n    return this.props.timeout > 0;\n  }\n\n  private getInstructions(): string {\n    const base = 'Continue when there is no response';\n    return this.isChecked() ? `${base} for` : ellipsize(base);\n  }\n\n  private handleChecked(): void {\n    if (this.props.timeout > 0) {\n      this.props.onChanged(0);\n    } else {\n      this.props.onChanged(parseInt(DEFAULT_TIMEOUT.value));\n    }\n  }\n\n  private handleTimeoutChanged(selected: any): void {\n    this.props.onChanged(parseInt(selected.value));\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={styles.timeout_control_container}>\n        <div className={styles.left_section}>\n          <CheckboxElement\n            name={i18n.t('forms.timeout', 'Timeout')}\n            checked={this.isChecked()}\n            description={this.getInstructions()}\n            checkboxClassName={styles.checkbox}\n            onChange={this.handleChecked}\n          />\n        </div>\n        {renderIf(this.isChecked())(\n          <div className={styles.drop_down}>\n            <TembaSelect\n              name={i18n.t('forms.timeout', 'Timeout')}\n              style={TembaSelectStyle.small}\n              value={this.getSelected(this.props.timeout)}\n              options={TIMEOUT_OPTIONS}\n              onChange={this.handleTimeoutChanged}\n            ></TembaSelect>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { CallResthook } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { FormEntry, NodeEditorSettings } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nimport { ResthookRouterFormState } from './ResthookRouterForm';\n\nexport const nodeToState = (settings: NodeEditorSettings): ResthookRouterFormState => {\n  let resthookAsset: FormEntry = { value: null };\n  let resultName = { value: 'Result' };\n  let valid = false;\n\n  const originalAction = getOriginalAction(settings) as CallResthook;\n  if (originalAction && originalAction.type === Types.call_resthook) {\n    const resthook = originalAction.resthook;\n    resthookAsset = {\n      value: { resthook }\n    };\n    resultName = { value: originalAction.result_name };\n    valid = true;\n  }\n\n  return {\n    resthook: resthookAsset,\n    resultName,\n    valid\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ResthookRouterFormState\n): RenderNode => {\n  let uuid = createUUID();\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const newAction: CallResthook = {\n    uuid,\n    resthook: state.resthook.value.resthook,\n    type: Types.call_resthook,\n    result_name: state.resultName.value\n  };\n\n  return createWebhookBasedNode(newAction, settings.originalNode, false);\n};\n\nexport const getOriginalAction = (settings: NodeEditorSettings): CallResthook => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.call_resthook) {\n    return action as CallResthook;\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport {\n  Alphanumeric,\n  Required,\n  shouldRequireIf,\n  StartIsNonNumeric,\n  validate\n} from 'store/validators';\n\nimport { nodeToState, stateToNode } from './helpers';\nimport styles from './ResthookRouterForm.module.scss';\nimport i18n from 'config/i18n';\nimport { SelectOption } from 'components/form/select/SelectElement';\n\n// TODO: Remove use of Function\nexport interface ResthookRouterFormState extends FormState {\n  resthook: FormEntry;\n  resultName: StringEntry;\n}\n\nexport default class ResthookRouterForm extends React.PureComponent<\n  RouterFormProps,\n  ResthookRouterFormState\n> {\n  options: SelectOption[] = [];\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public componentDidMount(): void {\n    const items = this.props.assetStore.resthooks ? this.props.assetStore.resthooks.items : {};\n    this.options = Object.keys(items).map((key: string) => {\n      return { name: items[key].name, value: key };\n    });\n  }\n\n  private handleUpdateResultName(result: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), result, [\n      Required,\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  public handleResthookChanged(selected: any[], submitting = false): boolean {\n    const updates: Partial<ResthookRouterFormState> = {\n      resthook: validate(i18n.t('forms.resthook', 'Resthook'), selected[0], [\n        shouldRequireIf(submitting)\n      ])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate our resthook in case they haven't interacted\n    const valid = this.handleResthookChanged([this.state.resthook.value], true);\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  public getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <AssetSelector\n          name={i18n.t('forms.resthook', 'Resthook')}\n          placeholder={i18n.t('forms.resthook_to_call', 'Select the resthook to call')}\n          assets={this.props.assetStore.resthooks}\n          entry={this.state.resthook}\n          searchable={true}\n          onChange={this.handleResthookChanged}\n          nameKey=\"resthook\"\n          valueKey=\"resthook\"\n        />\n        <div className={styles.result_name}>\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { AssetStore, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nimport { ResultRouterFormState } from './ResultRouterForm';\n\nexport const FIELD_NUMBER_OPTIONS: SelectOption[] = [\n  { value: '0', name: 'first' },\n  { value: '1', name: 'second' },\n  { value: '2', name: 'third' },\n  { value: '3', name: 'fourth' },\n  { value: '4', name: 'fifth' },\n  { value: '5', name: 'sixth' },\n  { value: '6', name: 'seventh' },\n  { value: '7', name: 'eighth' },\n  { value: '8', name: 'ninth' },\n  { value: '9', name: 'tenth' },\n  { value: '10', name: '11th' },\n  { value: '11', name: '12th' },\n  { value: '12', name: '13th' },\n  { value: '13', name: '14th' },\n  { value: '14', name: '15th' },\n  { value: '15', name: '16th' },\n  { value: '16', name: '17th' },\n  { value: '17', name: '18th' },\n  { value: '18', name: '19th' },\n  { value: '19', name: '20th' }\n];\n\nexport const getFieldOption = (value: number): SelectOption => {\n  return FIELD_NUMBER_OPTIONS.find((option: SelectOption) => option.value === '' + value);\n};\n\nexport const DELIMITER_OPTIONS: SelectOption[] = [\n  { value: ' ', name: 'spaces' },\n  { value: '.', name: 'periods' },\n  { value: '+', name: 'plusses' }\n];\n\nexport const getDelimiterOption = (value: string): SelectOption => {\n  return DELIMITER_OPTIONS.find((option: SelectOption) => option.value === value);\n};\n\nexport const nodeToState = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): ResultRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  let result: any = null;\n  let fieldNumber = 1;\n  let delimiter = ' ';\n  let shouldDelimit = false;\n\n  const type = getType(settings.originalNode);\n\n  if (\n    (settings.originalNode && type === Types.split_by_run_result) ||\n    type === Types.split_by_run_result_delimited\n  ) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    const config = settings.originalNode.ui.config;\n    if (config && config.operand) {\n      if (config.operand.id in assetStore.results.items) {\n        result = assetStore.results.items[config.operand.id];\n      } else {\n        result = null;\n      }\n    }\n\n    if (type === Types.split_by_run_result_delimited) {\n      fieldNumber = config.index;\n      delimiter = config.delimiter;\n      shouldDelimit = true;\n    }\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    result: { value: result },\n    shouldDelimit,\n    fieldNumber,\n    delimiter,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ResultRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let nodeType = Types.split_by_run_result;\n\n  const result = state.result.value;\n  let operand = `@results.${result.id}`;\n\n  const config: any = {\n    operand: {\n      name: result.name,\n      id: result.id,\n      type: AssetType.Result\n    },\n    cases: caseConfig\n  };\n\n  if (state.shouldDelimit) {\n    config.index = state.fieldNumber;\n    config.delimiter = state.delimiter;\n    operand = `@(field(results.${result.id}, ${state.fieldNumber}, \"${state.delimiter}\"))`;\n    nodeType = Types.split_by_run_result_delimited;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    categories,\n    cases,\n    operand,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    nodeType,\n    [],\n    config\n  );\n\n  return newRenderNode;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { FormEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, shouldRequireIf, StartIsNonNumeric, validate } from 'store/validators';\n\nimport {\n  DELIMITER_OPTIONS,\n  FIELD_NUMBER_OPTIONS,\n  getDelimiterOption,\n  getFieldOption,\n  nodeToState,\n  stateToNode\n} from './helpers';\nimport styles from './ResultRouterForm.module.scss';\nimport i18n from 'config/i18n';\nimport { TembaSelectStyle } from 'temba/TembaSelect';\n\nexport interface ResultRouterFormState extends FormState {\n  result: FormEntry;\n  cases: CaseProps[];\n  resultName: StringEntry;\n  shouldDelimit: boolean;\n\n  fieldNumber: number;\n  delimiter: string;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class ResultRouterForm extends React.Component<\n  RouterFormProps,\n  ResultRouterFormState\n> {\n  options: SelectOption[] = [];\n\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings, this.props.assetStore);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public componentDidMount(): void {\n    const items = this.props.assetStore.results.items;\n    this.options = Object.keys(items).map((key: string) => {\n      return { name: items[key].name, value: key };\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleResultChanged(selected: Asset[], submitting = false): boolean {\n    const updates: Partial<ResultRouterFormState> = {\n      result: validate(i18n.t('forms.result_to_split_on', 'Result to split on'), selected[0], [\n        shouldRequireIf(submitting)\n      ])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    const valid = this.handleResultChanged([this.state.result.value], true);\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleShouldDelimitChanged(checked: boolean): void {\n    this.setState({ shouldDelimit: checked });\n  }\n\n  private handleFieldNumberChanged(selected: SelectOption): void {\n    this.setState({ fieldNumber: parseInt(selected.value, 10) });\n  }\n\n  private handleDelimiterChanged(selected: SelectOption): void {\n    this.setState({ delimiter: selected.value });\n  }\n\n  private renderField(): JSX.Element {\n    return (\n      <div className={styles.non_delimited}>\n        <div className={styles.lead_in}>If the flow result</div>\n        <div className={styles.result_select}>\n          <AssetSelector\n            entry={this.state.result}\n            style={TembaSelectStyle.small}\n            name={i18n.t('forms.flow_result', 'Flow Result')}\n            placeholder=\"Select Result\"\n            searchable={false}\n            assets={this.props.assetStore.results}\n            onChange={this.handleResultChanged}\n            additionalOptions={this.options}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private renderFieldDelimited(): JSX.Element {\n    return (\n      <div className={styles.delimited}>\n        <div className={styles.lead_in}>If the</div>\n        <div className={styles.field_number}>\n          <SelectElement\n            key=\"field_number_select\"\n            style={TembaSelectStyle.small}\n            name={i18n.t('forms.field_number', 'Field Number')}\n            entry={{ value: getFieldOption(this.state.fieldNumber) }}\n            onChange={this.handleFieldNumberChanged}\n            options={FIELD_NUMBER_OPTIONS}\n          />\n        </div>\n        <div className={styles.lead_in_sub}>field of</div>\n        <div className={styles.result_select_delimited}>\n          <AssetSelector\n            entry={this.state.result}\n            style={TembaSelectStyle.small}\n            name={i18n.t('forms.flow_result', 'Flow Result')}\n            placeholder={i18n.t('forms.select_result', 'Select Result')}\n            searchable={false}\n            assets={this.props.assetStore.results}\n            onChange={this.handleResultChanged}\n            additionalOptions={this.options}\n          />\n        </div>\n        <div className={styles.lead_in_sub}>delimited by</div>\n        <div className={styles.delimiter}>\n          <SelectElement\n            key=\"delimiter_select\"\n            style={TembaSelectStyle.small}\n            name={i18n.t('forms.delimiter', 'Delimiter')}\n            entry={{ value: getDelimiterOption(this.state.delimiter) }}\n            onChange={this.handleDelimiterChanged}\n            options={DELIMITER_OPTIONS}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    const advanced: Tab = {\n      name: 'Advanced',\n      body: (\n        <div className={styles.should_delimit}>\n          <CheckboxElement\n            name={i18n.t('forms.delimit', 'Delimit')}\n            title={i18n.t('forms.delimit_result', 'Delimit Result')}\n            checked={this.state.shouldDelimit}\n            description={i18n.t(\n              'forms.delimit_result_description',\n              'Evaluate your rules against a delimited part of your result'\n            )}\n            onChange={this.handleShouldDelimitChanged}\n          />\n        </div>\n      ),\n      checked: this.state.shouldDelimit\n    };\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={[advanced]}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n\n        {this.state.shouldDelimit ? this.renderFieldDelimited() : this.renderField()}\n\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { RouterFormProps } from 'components/flow/props';\nimport { nodeToState, stateToNode } from 'components/flow/routers/subflow/helpers';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { FormEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\nimport i18n from 'config/i18n';\nimport { fetchAsset } from 'external';\nimport styles from './SubflowRouterForm.module.scss';\nimport { Trans } from 'react-i18next';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\n\n// TODO: Remove use of Function\nexport interface SubflowRouterFormState extends FormState {\n  flow: FormEntry;\n  params: { [name: string]: StringEntry };\n}\n\nexport default class SubflowRouterForm extends React.PureComponent<\n  RouterFormProps,\n  SubflowRouterFormState\n> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public componentDidMount() {\n    // we need to resolve our flow for it's parent refs\n    // todo: just fetch this is a plan flow result without the asset translation\n    if (this.state.flow.value) {\n      fetchAsset(this.props.assetStore.flows, this.state.flow.value.uuid).then((flow: Asset) => {\n        if (flow) {\n          this.handleFlowChanged([\n            { name: flow.name, uuid: flow.id, parent_refs: flow.content.parent_refs }\n          ]);\n        }\n      });\n    }\n  }\n\n  public handleFlowChanged(flows: any[], submitting = false): boolean {\n    const flow = flows[0];\n\n    const updates: Partial<SubflowRouterFormState> = {\n      flow: validate(i18n.t('forms.flow', 'Flow'), flow, [shouldRequireIf(submitting)])\n    };\n\n    const params: { [key: string]: StringEntry } = {};\n    // ensure our parameters are initialized\n    if (flow && flow.parent_refs) {\n      for (const key of flow.parent_refs) {\n        if (this.state.params[key]) {\n          params[key] = { ...this.state.params[key] };\n        } else {\n          params[key] = { value: '' };\n        }\n      }\n      updates.params = params;\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate our flow in case they haven't interacted\n    this.handleFlowChanged([this.state.flow.value], true);\n\n    const hasFieldErrors = Object.keys(this.state.params).find((key: string) =>\n      hasErrors(this.state.params[key])\n    );\n\n    if (this.state.valid && !hasFieldErrors) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleFilter(asset: Asset): boolean {\n    // only show flows that match our flow type\n    return asset.content.type === this.context.config.flowType;\n  }\n\n  private handleParamChanged(text: string, name: string) {\n    const params = { ...this.state.params };\n    params[name] = { value: text };\n    this.setState({ params });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const tabs: Tab[] = [];\n    const flow = this.state.flow.value;\n\n    const hasFieldErrors = !!Object.keys(this.state.params).find((key: string) =>\n      hasErrors(this.state.params[key])\n    );\n\n    if (flow && flow.parent_refs && flow.parent_refs.length > 0) {\n      tabs.push({\n        name: i18n.t('forms.enter_flow_parameters_tab', 'Parameters'),\n        body: (\n          <div>\n            <p className={styles.info}>\n              <Trans\n                i18nKey=\"forms.enter_flow_parameters_summary\"\n                values={{\n                  flow: this.state.flow.value.name,\n                  url: this.context.config.endpoints.editor + '/' + this.state.flow.value.id\n                }}\n              >\n                <a\n                  target=\"_\"\n                  href={this.context.config.endpoints.editor + '/' + this.state.flow.value.id}\n                >\n                  [[flow]]\n                </a>{' '}\n                expects the following parameters to be set by this flow. These can be set using a{' '}\n                <span>Save Flow Result</span> action or directly below.\n              </Trans>\n            </p>\n            <table className={styles.params}>\n              <tbody>\n                {flow.parent_refs.map((name: string) => {\n                  return (\n                    <tr key={'param_' + name} className={styles.param}>\n                      <td className={styles.param_name}>{name}</td>\n                      <td className={styles.param_input}>\n                        <TextInputElement\n                          name={name}\n                          showLabel={false}\n                          placeholder={name}\n                          onChange={(updatedText: string) => {\n                            this.handleParamChanged(updatedText, name);\n                          }}\n                          entry={this.state.params[name]}\n                          autocomplete={true}\n                        />\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        ),\n        hasErrors: hasFieldErrors,\n        checked: !!Object.keys(this.state.params).find(\n          (key: string) => this.state.params[key] && this.state.params[key].value.trim().length > 0\n        )\n      });\n    }\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <AssetSelector\n          name={i18n.t('forms.flow', 'Flow')}\n          placeholder=\"Select the flow to start\"\n          assets={this.props.assetStore.flows}\n          entry={this.state.flow}\n          searchable={true}\n          onFilter={this.handleFilter}\n          onChange={this.handleFlowChanged}\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { createRenderNode } from 'components/flow/routers/helpers';\nimport { SubflowRouterFormState } from 'components/flow/routers/subflow/SubflowRouterForm';\nimport { SUBFLOW_OPERAND } from 'components/nodeeditor/constants';\nimport { Operators, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport {\n  Case,\n  Category,\n  Exit,\n  RouterTypes,\n  StartFlow,\n  StartFlowExitNames,\n  SwitchRouter,\n  SetRunResult,\n  AnyAction,\n  Action\n} from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport const nodeToState = (settings: NodeEditorSettings): SubflowRouterFormState => {\n  const params: { [key: string]: StringEntry } = {};\n  if (\n    getType(settings.originalNode) === Types.split_by_subflow ||\n    (settings.originalAction && settings.originalAction.type === Types.enter_flow)\n  ) {\n    let action = settings.originalAction as StartFlow;\n    if (!action || action.type !== Types.enter_flow) {\n      action = settings.originalNode.node.actions.find(\n        (action: Action) => action.type === Types.enter_flow\n      ) as StartFlow;\n    }\n\n    // look for any run result actions\n    settings.originalNode.node.actions.forEach((action: AnyAction) => {\n      if (action.type === Types.set_run_result) {\n        const setRunResult = action as SetRunResult;\n        params[setRunResult.name] = { value: setRunResult.value };\n      }\n    });\n\n    return { flow: { value: action.flow }, params, valid: true };\n  }\n\n  return {\n    flow: { value: null },\n    params: {},\n    valid: false\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: SubflowRouterFormState\n): RenderNode => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  const startFlowAction: StartFlow = {\n    uuid: action.uuid || createUUID(),\n    type: Types.enter_flow,\n    flow: { uuid: state.flow.value.uuid, name: state.flow.value.name }\n  };\n\n  // If we're already a subflow, lean on those exits and cases\n  let exits: Exit[];\n  let cases: Case[];\n  let categories: Category[];\n\n  if (getType(settings.originalNode) === Types.split_by_subflow) {\n    ({ exits } = settings.originalNode.node);\n    ({ cases, categories } = settings.originalNode.node.router as SwitchRouter);\n  } else {\n    // Otherwise, let's create some new ones\n    exits = [\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      },\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      }\n    ];\n\n    categories = [\n      {\n        uuid: createUUID(),\n        name: StartFlowExitNames.Complete,\n        exit_uuid: exits[0].uuid\n      },\n      {\n        uuid: createUUID(),\n        name: StartFlowExitNames.Expired,\n        exit_uuid: exits[1].uuid\n      }\n    ];\n\n    cases = [\n      {\n        uuid: createUUID(),\n        type: Operators.has_only_text,\n        arguments: ['completed'],\n        category_uuid: categories[0].uuid\n      },\n      {\n        uuid: createUUID(),\n        arguments: ['expired'],\n        type: Operators.has_only_text,\n        category_uuid: categories[1].uuid\n      }\n    ];\n  }\n\n  const actions = [];\n\n  // add some set result actions if needed\n  Object.keys(state.params).forEach((key: string) => {\n    const value = state.params[key] ? state.params[key].value || '' : '';\n    if (value.trim().length > 0) {\n      const setResultAction: SetRunResult = {\n        uuid: createUUID(),\n        name: key,\n        value,\n        type: Types.set_run_result\n      };\n      actions.push(setResultAction);\n    }\n  });\n\n  actions.push(startFlowAction);\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    operand: SUBFLOW_OPERAND,\n    cases,\n    categories,\n    default_category_uuid: categories[categories.length - 1].uuid\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_subflow,\n    actions\n  );\n\n  return newRenderNode;\n};\n","import { createRenderNode, resolveRoutes } from 'components/flow/routers/helpers';\nimport { WaitRouterFormState } from 'components/flow/routers/wait/WaitRouterForm';\nimport { DEFAULT_OPERAND, MEDIA_OPERAND } from 'components/nodeeditor/constants';\nimport { Type, Types } from 'config/interfaces';\nimport { HintTypes, Router, RouterTypes, SwitchRouter, Wait, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const nodeToState = (settings: NodeEditorSettings): WaitRouterFormState => {\n  let resultName: StringEntry = { value: 'Result' };\n\n  // look at the actual ui type instead of the hint here, we want results for any kind of wait\n  if (settings.originalNode && settings.originalNode.ui.type === Types.wait_for_response) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      resultName = { value: router.result_name || '' };\n    }\n  }\n\n  return {\n    resultName,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: WaitRouterFormState,\n  typeConfig: Type\n): RenderNode => {\n  const { exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    [],\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let operand = DEFAULT_OPERAND;\n  const wait = { type: WaitTypes.msg } as Wait;\n  switch (typeConfig.type) {\n    case Types.wait_for_audio:\n      wait.hint = { type: HintTypes.audio };\n      operand = MEDIA_OPERAND;\n      break;\n    case Types.wait_for_image:\n      wait.hint = { type: HintTypes.image };\n      operand = MEDIA_OPERAND;\n      break;\n    case Types.wait_for_location:\n      wait.hint = { type: HintTypes.location };\n      operand = MEDIA_OPERAND;\n      break;\n    case Types.wait_for_video:\n      wait.hint = { type: HintTypes.video };\n      operand = MEDIA_OPERAND;\n      break;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    cases: [],\n    categories,\n    wait,\n    operand,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { WebhookRouterFormState } from 'components/flow/routers/webhook/WebhookRouterForm';\nimport { DEFAULT_BODY } from 'components/nodeeditor/constants';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { CallWebhook } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { ValidatorFunc } from 'store/validators';\nimport { createUUID } from 'utils';\n\nexport enum Methods {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  HEAD = 'HEAD',\n  PATCH = 'PATCH'\n}\n\nexport interface MethodOption {\n  value: string;\n  name: string;\n}\n\ninterface HeaderMap {\n  [name: string]: string;\n}\n\nexport const GET_METHOD: MethodOption = {\n  value: Methods.GET,\n  name: Methods.GET\n};\n\nexport const METHOD_OPTIONS: MethodOption[] = [\n  GET_METHOD,\n  { value: Methods.POST, name: Methods.POST },\n  { value: Methods.PUT, name: Methods.PUT },\n  { value: Methods.DELETE, name: Methods.DELETE },\n  { value: Methods.HEAD, name: Methods.HEAD },\n  { value: Methods.PATCH, name: Methods.PATCH }\n];\n\nexport const getOriginalAction = (settings: NodeEditorSettings): CallWebhook => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.call_webhook) {\n    return action as CallWebhook;\n  }\n};\n\nexport const nodeToState = (settings: NodeEditorSettings): WebhookRouterFormState => {\n  // TODO: work out an incremental result name\n  const resultName: StringEntry = { value: 'Result' };\n\n  const state: WebhookRouterFormState = {\n    headers: [],\n    resultName,\n    method: { value: GET_METHOD },\n    url: { value: '' },\n    body: { value: getDefaultBody(Methods.GET) },\n    valid: false\n  };\n\n  if (getType(settings.originalNode) === Types.split_by_webhook) {\n    const action = getOriginalAction(settings) as CallWebhook;\n\n    // add in our headers\n    for (const name of Object.keys(action.headers || []).sort()) {\n      state.headers.push({\n        value: {\n          uuid: createUUID(),\n          value: action.headers[name],\n          name\n        }\n      });\n    }\n\n    state.resultName = { value: action.result_name };\n    state.url = { value: action.url };\n    state.method = { value: { name: action.method, value: action.method } };\n    state.body = { value: action.body };\n    state.valid = true;\n  } else {\n    state.headers.push({\n      value: {\n        uuid: createUUID(),\n        name: 'Accept',\n        value: 'application/json'\n      }\n    });\n  }\n\n  // one empty header\n  state.headers.push({\n    value: {\n      uuid: createUUID(),\n      name: '',\n      value: ''\n    }\n  });\n\n  return state;\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: WebhookRouterFormState\n): RenderNode => {\n  const headers: HeaderMap = {};\n\n  for (const entry of state.headers) {\n    if (entry.value.name.trim().length !== 0) {\n      headers[entry.value.name] = entry.value.value;\n    }\n  }\n\n  let uuid = createUUID();\n\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const newAction: CallWebhook = {\n    uuid,\n    headers,\n    type: Types.call_webhook,\n    url: state.url.value,\n    body: state.body.value,\n    method: state.method.value.value as Methods,\n    result_name: state.resultName.value\n  };\n\n  return createWebhookBasedNode(newAction, settings.originalNode, false);\n};\n\nexport const getDefaultBody = (method: string): string => {\n  return method === Methods.GET ? '' : DEFAULT_BODY;\n};\n\nexport const isValidJson = (): ValidatorFunc => (name, body: any) => {\n  try {\n    var o = JSON.parse(body);\n\n    if (o && typeof o === 'object') {\n      return { failures: [], value: body };\n    }\n  } catch (e) {\n    return { failures: [{ message: 'Not a valid JSON' }], value: body };\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport { nodeToState, stateToNode } from './helpers';\nimport styles from './WaitRouterForm.module.scss';\nimport i18n from 'config/i18n';\n\nexport interface WaitRouterFormState extends FormState {\n  resultName: StringEntry;\n}\n\nexport default class WaitRouterForm extends React.Component<RouterFormProps, WaitRouterFormState> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(\n        stateToNode(this.props.nodeSettings, this.state, this.props.typeConfig)\n      );\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.result_name}>\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport { getAllErrors } from 'components/flow/actions/helpers';\nimport { HeaderEntry } from 'components/flow/routers/webhook/WebhookRouterForm';\nimport styles from 'components/flow/routers/webhook/WebhookRouterForm.module.scss';\nimport FormElement from 'components/form/FormElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport * as React from 'react';\nimport { StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport { HeaderName, validate } from 'store/validators';\nimport i18n from 'config/i18n';\n\n// TODO: move this into webhook router component\nexport interface Header {\n  uuid: string;\n  name: string;\n  value: string;\n}\n\nexport interface HeaderElementProps {\n  entry: HeaderEntry;\n  index: number;\n  onRemove: (header: Header) => void;\n  onChange: (header: Header, validationFailures: ValidationFailure[]) => void;\n  empty?: boolean;\n}\n\ninterface HeaderElementState {\n  name: StringEntry;\n  value: StringEntry;\n}\n\nexport const headerContainerSpecId = 'header-container';\nexport const nameContainerSpecId = 'name-container';\nexport const valueConatainerSpecId = 'value-container';\nexport const removeIcoSpecId = 'remove-icon';\n\nexport const HEADER_NAME_ERROR = i18n.t(\n  'errors.http_header_missing_name',\n  'HTTP headers must have a name'\n);\nexport const NAME_PLACEHOLDER = i18n.t('forms.webhook_header_name', 'Header Name');\nexport const VALUE_PLACEHOLDER = i18n.t('forms.value', 'Value');\n\nexport default class HeaderElement extends React.Component<HeaderElementProps, HeaderElementState> {\n  constructor(props: HeaderElementProps) {\n    super(props);\n\n    const header = this.props.entry.value;\n    const name = header.name || '';\n    const value = header.value || '';\n\n    this.state = {\n      name: { value: name },\n      value: { value }\n    };\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private getHeader(): Header {\n    return {\n      name: this.state.name.value,\n      value: this.state.value.value,\n      uuid: this.props.entry.value.uuid\n    };\n  }\n\n  private handleChangeName(value: string): void {\n    const name = validate(i18n.t('forms.header_name', 'Header name'), value, [HeaderName]);\n    this.setState({ name: { value: name.value } }, () =>\n      this.props.onChange(\n        this.getHeader(),\n        getAllErrors(this.state.value).concat(getAllErrors(name))\n      )\n    );\n  }\n\n  private handleChangeValue(value: string): void {\n    this.setState({ value: { value } }, () => {\n      const name = validate(i18n.t('forms.header_name', 'Header name'), this.state.name.value, [\n        HeaderName\n      ]);\n      this.props.onChange(\n        this.getHeader(),\n        getAllErrors(this.state.value).concat(getAllErrors(name))\n      );\n    });\n  }\n\n  private handleRemove(): void {\n    this.props.onRemove(this.getHeader());\n  }\n\n  private getRemoveIco(): JSX.Element {\n    return (\n      <div className={styles.remove_ico} onClick={this.handleRemove} data-spec={removeIcoSpecId}>\n        <span className=\"fe-x\" />\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    const removeIco: JSX.Element = this.getRemoveIco();\n    return (\n      <FormElement name={i18n.t('forms.webhook_header', 'Header')} entry={this.props.entry}>\n        <div className={styles.header} data-spec={headerContainerSpecId}>\n          <div className={styles.header_name} data-spec={nameContainerSpecId}>\n            <TextInputElement\n              placeholder={NAME_PLACEHOLDER}\n              name={NAME_PLACEHOLDER}\n              onChange={this.handleChangeName}\n              entry={this.state.name}\n            />\n          </div>\n          <div className={styles.header_value} data-spec={valueConatainerSpecId}>\n            <TextInputElement\n              placeholder={VALUE_PLACEHOLDER}\n              name={VALUE_PLACEHOLDER}\n              onChange={this.handleChangeValue}\n              entry={this.state.value}\n              autocomplete={true}\n            />\n          </div>\n          {removeIco}\n        </div>\n      </FormElement>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport HeaderElement, { Header } from 'components/flow/routers/webhook/header/HeaderElement';\nimport {\n  METHOD_OPTIONS,\n  MethodOption,\n  Methods,\n  nodeToState,\n  stateToNode,\n  getDefaultBody,\n  isValidJson\n} from 'components/flow/routers/webhook/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport SelectElement from 'components/form/select/SelectElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormEntry, FormState, mergeForm, StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport {\n  Alphanumeric,\n  Required,\n  shouldRequireIf,\n  StartIsNonNumeric,\n  validate,\n  ValidURL,\n  validateIf\n} from 'store/validators';\nimport { createUUID } from 'utils';\n\nimport styles from './WebhookRouterForm.module.scss';\nimport { Trans } from 'react-i18next';\nimport i18n from 'config/i18n';\n\nexport interface HeaderEntry extends FormEntry {\n  value: Header;\n}\n\nexport interface MethodEntry extends FormEntry {\n  value: MethodOption;\n}\n\nexport interface WebhookRouterFormState extends FormState {\n  headers: HeaderEntry[];\n  method: MethodEntry;\n  url: StringEntry;\n  body: StringEntry;\n  resultName: StringEntry;\n}\n\nexport default class WebhookRouterForm extends React.Component<\n  RouterFormProps,\n  WebhookRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleUpdate(\n    keys: {\n      method?: MethodOption;\n      url?: string;\n      body?: string;\n      header?: Header;\n      removeHeader?: Header;\n      validationFailures?: ValidationFailure[];\n      resultName?: string;\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<WebhookRouterFormState> = {};\n\n    let ensureEmptyHeader = false;\n    let toRemove: any[] = [];\n\n    if (keys.hasOwnProperty('method')) {\n      updates.method = { value: keys.method };\n\n      const oldMethod = this.state.method.value.value;\n      const newMethod = keys.method.value;\n\n      if (oldMethod !== newMethod) {\n        const existingContentTypeHeader = this.state.headers.find(\n          (header: HeaderEntry) => header.value.name.toLowerCase() === 'content-type'\n        );\n\n        // whenever our method changes, update the default body\n        updates.body = { value: getDefaultBody(newMethod) };\n\n        // switching from a GET, add a content-type\n        if (oldMethod === Methods.GET && newMethod !== Methods.GET) {\n          if (!existingContentTypeHeader) {\n            let uuid = createUUID();\n            // if we have an empty header, use that one\n            const lastHeader =\n              this.state.headers.length > 0\n                ? this.state.headers[this.state.headers.length - 1]\n                : null;\n            if (lastHeader && !lastHeader.value.name) {\n              uuid = lastHeader.value.uuid;\n            }\n            keys.header = { uuid, name: 'Content-Type', value: 'application/json' };\n          }\n        } else if (oldMethod !== Methods.GET && newMethod === Methods.GET) {\n          // remove content type if switching to a GET\n          if (existingContentTypeHeader) {\n            toRemove = [{ headers: [{ value: existingContentTypeHeader.value }] }];\n          }\n        }\n      }\n    }\n\n    if (keys.hasOwnProperty('url')) {\n      updates.url = validate(i18n.t('forms.url', 'URL'), keys.url, [\n        shouldRequireIf(submitting),\n        validateIf(ValidURL, keys.url.indexOf('@') === -1)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = validate(i18n.t('forms.result_name', 'Result Name'), keys.resultName, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('body')) {\n      updates.body = validate('POST body', keys.body, [isValidJson()]);\n    }\n\n    if (keys.hasOwnProperty('header')) {\n      updates.headers = [{ value: keys.header, validationFailures: keys.validationFailures }];\n      ensureEmptyHeader = true;\n    }\n\n    if (keys.hasOwnProperty('removeHeader')) {\n      toRemove = [{ headers: [{ value: keys.removeHeader }] }];\n      ensureEmptyHeader = true;\n    }\n\n    const updated = mergeForm(this.state, updates, toRemove);\n\n    // update our form\n    this.setState(updated, () => {\n      // if we updated headers, check if we need a new one\n      if (ensureEmptyHeader) {\n        let needsHeader = true;\n        for (const header of this.state.headers) {\n          if (header.value.name.trim() === '') {\n            needsHeader = false;\n            break;\n          }\n        }\n\n        if (needsHeader) {\n          this.handleCreateHeader();\n        }\n      }\n    });\n    return updated.valid;\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Required,\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleMethodUpdate(method: MethodOption): boolean {\n    return this.handleUpdate({ method });\n  }\n\n  private handleUrlUpdate(url: string, name: string, submitting = false): boolean {\n    return this.handleUpdate({ url }, submitting);\n  }\n\n  private handleHeaderRemoved(removeHeader: Header): boolean {\n    return this.handleUpdate({ removeHeader });\n  }\n\n  private handleHeaderUpdated(header: Header, validationFailures: ValidationFailure[]): boolean {\n    return this.handleUpdate({ header, validationFailures });\n  }\n\n  private handleCreateHeader(): boolean {\n    return this.handleUpdate({\n      header: {\n        uuid: createUUID(),\n        name: '',\n        value: ''\n      }\n    });\n  }\n\n  private handleBodyUpdate(body: string): boolean {\n    return this.handleUpdate({ body });\n  }\n\n  private handleSave(): void {\n    // validate our url in case they haven't interacted\n    const valid = this.handleUpdate(\n      { url: this.state.url.value, resultName: this.state.resultName.value },\n      true\n    );\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const headerElements: JSX.Element[] = this.state.headers.map(\n      (header: HeaderEntry, index: number, arr: HeaderEntry[]) => {\n        return (\n          <div key={`header_${header.value.uuid}`}>\n            <HeaderElement\n              entry={header}\n              onRemove={this.handleHeaderRemoved}\n              onChange={this.handleHeaderUpdated}\n              index={index}\n            />\n          </div>\n        );\n      }\n    );\n\n    const tabs: Tab[] = [];\n    tabs.push({\n      name: 'HTTP Headers',\n      hasErrors: !!this.state.headers.find((header: HeaderEntry) => hasErrors(header)),\n      body: (\n        <>\n          <p className={styles.info}>\n            <Trans i18nKey=\"forms.webhook_header_summary\">\n              Add any additional headers below that you would like to send along with your request.\n            </Trans>\n          </p>\n          {headerElements}\n        </>\n      ),\n      checked: this.state.headers.length > 1\n    });\n\n    const method = this.state.method.value.value;\n    const name = this.state.method.value.name + ' ' + i18n.t('body', 'Body');\n    tabs.push({\n      name,\n      body: (\n        <div key=\"post_body\" className={styles.body_form}>\n          <h4>{name}</h4>\n          <p>\n            <Trans\n              i18nKey=\"forms.webhook_body_summary\"\n              values={{ method: this.state.method.value.name }}\n            >\n              Modify the body of the [[method]] request that will be sent to your webhook.\n            </Trans>\n          </p>\n          <TextInputElement\n            __className={styles.req_body}\n            name={name}\n            showLabel={false}\n            entry={this.state.body}\n            onChange={this.handleBodyUpdate}\n            helpText={\n              <Trans\n                i18nKey=\"forms.webhook_body_summary\"\n                values={{ method: this.state.method.value.name }}\n              >\n                Modify the body of the [[method]] request that will be sent to your webhook.\n              </Trans>\n            }\n            autocomplete={true}\n            textarea={true}\n          />\n        </div>\n      ),\n      checked: this.state.body.value !== getDefaultBody(method),\n      hasErrors: this.state.body.validationFailures\n        ? this.state.body.validationFailures.length > 0\n        : false\n    });\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div style={{ display: 'flex', alignItems: 'flex-end' }}>\n          <div className={styles.method}>\n            <SelectElement\n              key=\"method_select\"\n              name={i18n.t('forms.method', 'Method')}\n              entry={this.state.method}\n              onChange={this.handleMethodUpdate}\n              options={METHOD_OPTIONS}\n            />\n          </div>\n          <div className={styles.url}>\n            <TextInputElement\n              name={i18n.t('forms.url', 'URL')}\n              placeholder={i18n.t('forms.enter_a_url', 'Enter a URL')}\n              entry={this.state.url}\n              onChange={this.handleUrlUpdate}\n              autocomplete={true}\n            />\n          </div>\n        </div>\n        <div className={styles.instructions}>\n          <p>\n            <Trans i18nKey=\"forms.webhook_help\">\n              If your server responds with JSON, each property will be added to the Flow.\n            </Trans>\n          </p>\n          <pre className={styles.code}>\n            {'{ \"product\": \"Solar Charging Kit\", \"stock level\": 32 }'}\n          </pre>\n          <p>\n            <Trans i18nKey=\"forms.webhook_example\">\n              This response would add <span className={styles.example}>@webhook.product</span> and{' '}\n              <span className={styles.example}>@webhook[\"stock level\"]</span> for use in the flow.\n            </Trans>\n          </p>\n        </div>\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import * as React from 'react';\nimport { CallClassifier } from 'flowTypes';\nimport { renderAsset } from '../helpers';\nimport { AssetType } from 'store/flowContext';\nimport { fakePropType } from 'config/ConfigProvider';\n\nconst CallClassifierComp: React.SFC<CallClassifier> = (\n  { classifier },\n  context: any\n): JSX.Element => {\n  return renderAsset(\n    {\n      id: classifier.uuid,\n      name: classifier.name,\n      type: AssetType.Classifier\n    },\n    context.config.endpoints\n  );\n};\n\nCallClassifierComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default CallClassifierComp;\n","import ConfigProvider from 'config/ConfigProvider';\nimport { getOperatorConfig, operatorConfigList } from 'config/operatorConfigs';\nimport { getTypeConfig, typeConfigList } from 'config/typeConfigs';\n\nexport { typeConfigList, getTypeConfig, operatorConfigList, getOperatorConfig };\n\nexport default ConfigProvider;\n","import {\n  hasCases,\n  createCaseProps,\n  resolveRoutes,\n  ResolvedRoutes,\n  createRenderNode\n} from 'components/flow/routers/helpers';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { Types, Operators, HIDDEN } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { CallClassifier, SwitchRouter, Case, Exit, Category, RouterTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry, FormEntry } from 'store/nodeEditor';\nimport { createUUID, scalarArrayEquals, snakify } from 'utils';\nimport { ClassifyRouterFormState } from 'components/flow/routers/classify/ClassifyRouterForm';\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { getOperatorConfig } from 'config';\n\nexport const getOriginalAction = (settings: NodeEditorSettings): CallClassifier => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.call_classifier) {\n    return action as CallClassifier;\n  }\n};\n\nexport const nodeToState = (settings: NodeEditorSettings): ClassifyRouterFormState => {\n  // TODO: work out an incremental result name\n  const resultName: StringEntry = { value: 'Result' };\n  let initialCases: CaseProps[] = [];\n\n  let operand = DEFAULT_OPERAND;\n  let classifier: FormEntry = { value: null };\n\n  let hiddenCases: CaseProps[] = [];\n\n  if (getType(settings.originalNode) === Types.split_by_intent) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n\n    if (hasCases(settings.originalNode.node)) {\n      initialCases = createCaseProps(router.cases, settings.originalNode);\n\n      hiddenCases = initialCases.filter(\n        (kase: CaseProps) => getOperatorConfig(kase.kase.type).visibility === HIDDEN\n      );\n\n      initialCases = initialCases.filter(\n        (kase: CaseProps) => getOperatorConfig(kase.kase.type).visibility !== HIDDEN\n      );\n    }\n\n    const action = getOriginalAction(settings) as CallClassifier;\n    classifier = { value: action.classifier };\n    operand = action.input;\n  }\n\n  const state: ClassifyRouterFormState = {\n    hiddenCases,\n    resultName,\n    classifier,\n    operand: { value: operand },\n    cases: initialCases,\n    valid: true\n  };\n\n  return state;\n};\n\nexport interface Route {\n  type: Operators;\n  arguments: string[];\n  name: 'Other';\n}\n\nexport const ensureRoute = (routes: ResolvedRoutes, route: Route) => {\n  const existingCasePosition = routes.cases.findIndex(\n    kase => kase.type === route.type && scalarArrayEquals(kase.arguments, route.arguments)\n  );\n\n  // if it already exists, make sure it's at the end\n  if (existingCasePosition >= 0) {\n    // already in the right place we are done\n    if (existingCasePosition === routes.cases.length - 1) {\n      return;\n    }\n\n    const [existingCase] = routes.cases.splice(existingCasePosition, 1);\n    routes.cases.push(existingCase);\n\n    return;\n  }\n\n  const exit: Exit = {\n    uuid: createUUID()\n  };\n\n  const category: Category = {\n    uuid: createUUID(),\n    name: route.name,\n    exit_uuid: exit.uuid\n  };\n\n  // otherwise let's add it\n  const kase: Case = {\n    uuid: createUUID(),\n    type: route.type,\n    arguments: route.arguments,\n    category_uuid: category.uuid\n  };\n\n  routes.categories.push(category);\n  routes.cases.push(kase);\n\n  // our new exit should go right in front of the default exit\n  routes.exits.splice(routes.exits.length - 1, 0, exit);\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ClassifyRouterFormState\n): RenderNode => {\n  let uuid = createUUID();\n\n  const routes = resolveRoutes(\n    [...state.cases, ...state.hiddenCases],\n    false,\n    settings.originalNode.node,\n    'Failure'\n  );\n\n  // make sure we have an other route since failure is our default\n  ensureRoute(routes, {\n    type: Operators.has_category,\n    arguments: ['Success', 'Skipped'],\n    name: 'Other'\n  });\n\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const routerResultName = state.resultName.value;\n  const actionResultName = '_' + routerResultName + ' Classification';\n\n  const newAction: CallClassifier = {\n    uuid,\n    type: Types.call_classifier,\n    result_name: actionResultName,\n    input: state.operand.value,\n    classifier: {\n      uuid: state.classifier.value.uuid,\n      name: state.classifier.value.name\n    }\n  };\n\n  const router: SwitchRouter = {\n    cases: routes.cases,\n    operand: `@results.${snakify(actionResultName)}`,\n    categories: routes.categories,\n    type: RouterTypes.switch,\n    default_category_uuid: routes.defaultCategory,\n    result_name: routerResultName\n  };\n\n  return createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    routes.exits,\n    Types.split_by_intent,\n    [newAction]\n  );\n};\n\nexport const createEmptyCase = (): CaseProps => {\n  const uuid = createUUID();\n  return {\n    uuid,\n    kase: {\n      uuid,\n      type: Operators.has_top_intent,\n      arguments: ['', ''],\n      category_uuid: null\n    },\n    categoryName: '',\n    valid: true\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { nodeToState, stateToNode, createEmptyCase } from './helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, mergeForm, StringEntry, FormEntry } from 'store/nodeEditor';\nimport {\n  Alphanumeric,\n  Required,\n  shouldRequireIf,\n  StartIsNonNumeric,\n  validate\n} from 'store/validators';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport { Asset } from 'store/flowContext';\nimport { renderIf } from 'utils';\nimport { intentOperatorList } from 'config/operatorConfigs';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { fetchAsset } from 'external';\nimport styles from './ClassifyRouterForm.module.scss';\nimport i18n from 'config/i18n';\n\nexport interface ClassifyRouterFormState extends FormState {\n  hiddenCases: CaseProps[];\n  resultName: StringEntry;\n  classifier: FormEntry;\n  cases: CaseProps[];\n  operand: StringEntry;\n}\n\nexport default class ClassifyRouterForm extends React.Component<\n  RouterFormProps,\n  ClassifyRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n\n    // we need to resolve our classifier for intent selection\n    if (this.state.classifier.value) {\n      fetchAsset(this.props.assetStore.classifiers, this.state.classifier.value.id).then(\n        (classifier: Asset) => {\n          if (classifier) {\n            this.handleUpdate({ classifier: { name: classifier.name, uuid: classifier.id } });\n          }\n        }\n      );\n    }\n  }\n\n  private handleUpdate(\n    keys: {\n      resultName?: string;\n      classifier?: any;\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<ClassifyRouterFormState> = {};\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = validate(i18n.t('forms.result_name', 'Result Name'), keys.resultName, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('classifier')) {\n      updates.classifier = validate(i18n.t('forms.classifier', 'Classifier'), keys.classifier, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n\n    // update our form\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    const invalidCase = cases.find((caseProps: CaseProps) => !caseProps.valid);\n    this.setState({ cases, valid: !invalidCase });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Required,\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleSave(): void {\n    // if we still have invalid cases, don't move forward\n    const invalidCase = this.state.cases.find((caseProps: CaseProps) => !caseProps.valid);\n    if (invalidCase) {\n      return;\n    }\n\n    // validate our result name in case they haven't interacted\n    const valid = this.handleUpdate(\n      {\n        resultName: this.state.resultName.value,\n        classifier: this.state.classifier.value\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private handleClassifierUpdated(selected: Asset[]): void {\n    this.handleUpdate({ classifier: selected[0] });\n  }\n\n  private handleOperandUpdated(value: string): void {\n    this.setState({\n      operand: validate(i18n.t('forms.operand', 'Operand'), value, [Required])\n    });\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private dialog: Dialog;\n\n  private renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const tabs: Tab[] = [\n      {\n        name: 'Classifier Input',\n        checked: this.state.operand.value !== DEFAULT_OPERAND,\n        body: (\n          <>\n            <p>\n              Enter an expression to use as the input to your classifier. To classify the last\n              response from the contact use <code>{DEFAULT_OPERAND}</code>.\n            </p>\n            <TextInputElement\n              name={i18n.t('forms.operand', 'Operand')}\n              showLabel={false}\n              autocomplete={true}\n              onChange={this.handleOperandUpdated}\n              entry={this.state.operand}\n            />\n          </>\n        )\n      }\n    ];\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n        ref={ele => {\n          this.dialog = ele;\n        }}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>\n          <span>Run </span>\n          <span\n            className={styles.link}\n            onClick={() => {\n              this.dialog.showTab(0);\n            }}\n          >\n            {this.state.operand.value === DEFAULT_OPERAND\n              ? 'the last response'\n              : this.state.operand.value}\n          </span>\n          <span> through the classifier...</span>\n        </p>\n        <AssetSelector\n          key=\"select_classifier\"\n          name={i18n.t('forms.classifier', 'Classifier')}\n          placeholder=\"Select the classifier to use\"\n          assets={this.props.assetStore.classifiers}\n          onChange={this.handleClassifierUpdated}\n          entry={this.state.classifier}\n        />\n\n        {renderIf(!!this.state.classifier.value)(\n          <CaseList\n            data-spec=\"cases\"\n            cases={this.state.cases}\n            onCasesUpdated={this.handleCasesUpdated}\n            operators={intentOperatorList}\n            createEmptyCase={createEmptyCase}\n            classifier={this.state.classifier.value}\n          />\n        )}\n\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { SCHEMES, Scheme, getType } from 'config/typeConfigs';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { SchemeRouterFormState } from './SchemeRouterForm';\nimport { getSwitchRouter, resolveRoutes, createRenderNode } from '../helpers';\nimport { RenderNode } from 'store/flowContext';\nimport { SwitchRouter, FlowNode, RouterTypes, Case } from 'flowTypes';\nimport { CaseProps } from '../caselist/CaseList';\nimport { createUUID } from 'utils';\nimport { Operators, Types } from 'config/interfaces';\nimport { SCHEMES_OPERAND } from 'components/nodeeditor/constants';\n\nexport const getChannelTypeOptions = (): SelectOption[] => {\n  // get our scheme list as select options, ignore hidden schemes\n  return SCHEMES.filter((scheme: Scheme) => !scheme.excludeFromSplit).map((scheme: Scheme) => {\n    return { value: scheme.scheme, name: scheme.name };\n  });\n};\n\nexport const nodeToState = (settings: NodeEditorSettings): SchemeRouterFormState => {\n  const state: SchemeRouterFormState = {\n    schemes: { value: [] },\n    resultName: { value: '' },\n    valid: false\n  };\n\n  if (getType(settings.originalNode) === Types.split_by_scheme) {\n    state.schemes.value = extractSchemes(settings.originalNode.node);\n    state.resultName = {\n      value: (settings.originalNode.node.router as SwitchRouter).result_name || ''\n    };\n    state.valid = true;\n  }\n\n  return state;\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: SchemeRouterFormState\n): RenderNode => {\n  let orginalCases: Case[] = [];\n  if (getType(settings.originalNode) === Types.split_by_scheme) {\n    orginalCases = getSwitchRouter(settings.originalNode.node).cases;\n  }\n\n  const currentCases = schemesToCases(state.schemes.value, orginalCases);\n\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    currentCases,\n    false,\n    settings.originalNode.node\n  );\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    cases,\n    categories,\n    default_category_uuid: defaultExit,\n    operand: SCHEMES_OPERAND,\n    result_name: state.resultName.value\n  };\n\n  return createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_scheme,\n    [],\n    { cases: caseConfig }\n  );\n};\n\nexport const extractSchemes = (node: FlowNode): SelectOption[] => {\n  let schemes: SelectOption[] = [];\n  const router = getSwitchRouter(node);\n  const selectOptions = getChannelTypeOptions();\n\n  if (router) {\n    schemes = (router as SwitchRouter).cases\n      .map(kase => {\n        if (kase.arguments) {\n          const [scheme] = kase.arguments;\n          return selectOptions.find((option: SelectOption) => option.value === scheme);\n        }\n        return null;\n      })\n      .filter((option: SelectOption) => option !== null);\n  }\n  return schemes;\n};\n\nexport const schemesToCases = (\n  schemes: SelectOption[] = [],\n  originalCases: Case[]\n): CaseProps[] => {\n  return schemes.map(({ value, name }: SelectOption) => {\n    // try to use the same case uuids for consistency\n    const originalCase = originalCases.find((kase: Case) => kase.arguments[0] === value);\n    const uuid = originalCase ? originalCase.uuid : createUUID();\n    return {\n      uuid: createUUID(),\n      kase: {\n        uuid,\n        type: Operators.has_only_phrase,\n        arguments: [value],\n        category_uuid: ''\n      },\n      categoryName: name,\n      valid: true\n    };\n  });\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { FormState, mergeForm, StringEntry, SelectOptionArrayEntry } from 'store/nodeEditor';\nimport { Required, validate } from 'store/validators';\nimport i18n from 'config/i18n';\nimport { getChannelTypeOptions, nodeToState, stateToNode } from './helpers';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport { renderIssues } from 'components/flow/actions/helpers';\n\nexport interface SchemeRouterFormState extends FormState {\n  schemes: SelectOptionArrayEntry;\n  resultName: StringEntry;\n}\n\nexport default class SchemeRouterForm extends React.Component<\n  RouterFormProps,\n  SchemeRouterFormState\n> {\n  public static contextTypes = {\n    endpoints: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleSchemesChanged(schemes: SelectOption[]): void {\n    this.handleUpdate({ schemes });\n  }\n\n  private handleUpdateResultName(resultName: string): void {\n    this.handleUpdate({ resultName });\n  }\n\n  private handleUpdate(keys: { schemes?: SelectOption[]; resultName?: string }): boolean {\n    const updates: Partial<SchemeRouterFormState> = {};\n\n    if (keys.hasOwnProperty('schemes')) {\n      updates.schemes = validate(i18n.t('forms.split_by_scheme', 'Channel types'), keys.schemes, [\n        Required\n      ]);\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = { value: keys.resultName };\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>\n          {i18n.t(\n            'forms.split_by_scheme_summary',\n            \"The contact's URN is the address they used to reach you such as their phone number or a Facebook ID. Select which URN types to split by below.\"\n          )}\n        </p>\n        <SelectElement\n          key=\"channel_type_select\"\n          name={i18n.t('forms.channel_type', 'Channel Type')}\n          placeholder={i18n.t(\n            'forms.split_by_channel_placeholder',\n            'Select the channels to split by'\n          )}\n          entry={this.state.schemes}\n          onChange={this.handleSchemesChanged}\n          options={getChannelTypeOptions()}\n          multi={true}\n          hideError={true}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { OpenTicket } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, FormEntry } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\nimport { TicketRouterFormState } from 'components/flow/routers/ticket/TicketRouterForm';\n\nexport const nodeToState = (settings: NodeEditorSettings): TicketRouterFormState => {\n  let ticketer: FormEntry = { value: null };\n  let subject = { value: '@run.flow.name' };\n  let body = { value: '@results' };\n  let resultName = { value: 'Result' };\n\n  if (getType(settings.originalNode) === Types.split_by_ticket) {\n    const action = getOriginalAction(settings) as OpenTicket;\n    ticketer = { value: action.ticketer };\n    subject = { value: action.subject };\n    body = { value: action.body };\n    resultName = { value: action.result_name };\n  }\n\n  const state: TicketRouterFormState = {\n    ticketer,\n    subject,\n    body,\n    resultName,\n    valid: true\n  };\n\n  return state;\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: TicketRouterFormState\n): RenderNode => {\n  let uuid = createUUID();\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const newAction: OpenTicket = {\n    uuid,\n    type: Types.open_ticket,\n    ticketer: state.ticketer.value,\n    subject: state.subject.value,\n    body: state.body.value,\n    result_name: state.resultName.value\n  };\n\n  return createWebhookBasedNode(newAction, settings.originalNode, true);\n};\n\nexport const getOriginalAction = (settings: NodeEditorSettings): OpenTicket => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.open_ticket) {\n    return action as OpenTicket;\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { nodeToState, stateToNode } from './helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, mergeForm, StringEntry, FormEntry } from 'store/nodeEditor';\nimport {\n  Alphanumeric,\n  Required,\n  shouldRequireIf,\n  StartIsNonNumeric,\n  validate\n} from 'store/validators';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport { Asset } from 'store/flowContext';\nimport styles from './TicketRouterForm.module.scss';\nimport i18n from 'config/i18n';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\n\nexport interface TicketRouterFormState extends FormState {\n  ticketer: FormEntry;\n  subject: StringEntry;\n  body: StringEntry;\n  resultName: StringEntry;\n}\n\nexport default class TicketRouterForm extends React.Component<\n  RouterFormProps,\n  TicketRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleUpdate(\n    keys: {\n      ticketer?: Asset;\n      subject?: string;\n      body?: string;\n      resultName?: string;\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<TicketRouterFormState> = {};\n\n    if (keys.hasOwnProperty('ticketer')) {\n      updates.ticketer = validate(i18n.t('forms.ticketer', 'Ticketer'), keys.ticketer, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('subject')) {\n      updates.subject = validate(i18n.t('forms.subject', 'Subject'), keys.subject, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('body')) {\n      updates.body = validate(i18n.t('forms.body', 'Body'), keys.body, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = validate(i18n.t('forms.result_name', 'Result Name'), keys.resultName, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n\n    // update our form\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleTicketerUpdate(selected: Asset[]): void {\n    this.handleUpdate({ ticketer: selected[0] });\n  }\n\n  private handleSubjectUpdate(subject: string, name: string, submitting = false): boolean {\n    return this.handleUpdate({ subject }, submitting);\n  }\n\n  private handleBodyUpdate(body: string): boolean {\n    return this.handleUpdate({ body });\n  }\n\n  private handleResultNameUpdate(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Required,\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleSave(): void {\n    // validate all fields in case they haven't interacted\n    const valid = this.handleUpdate(\n      {\n        ticketer: this.state.ticketer.value,\n        subject: this.state.subject.value,\n        body: this.state.body.value,\n        resultName: this.state.resultName.value\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>\n          <span>Open ticket via... </span>\n        </p>\n        <AssetSelector\n          key=\"select_ticketer\"\n          name={i18n.t('forms.ticketer', 'Ticketer')}\n          placeholder=\"Select the ticketing service to use\"\n          assets={this.props.assetStore.ticketers}\n          onChange={this.handleTicketerUpdate}\n          entry={this.state.ticketer}\n        />\n        <div className={styles.subject}>\n          <TextInputElement\n            name={i18n.t('forms.subject', 'Subject')}\n            placeholder={i18n.t('forms.enter_a_subject', 'Enter a subject')}\n            entry={this.state.subject}\n            onChange={this.handleSubjectUpdate}\n            autocomplete={true}\n          />\n        </div>\n        <div className={styles.body}>\n          <TextInputElement\n            name={i18n.t('forms.body', 'Body')}\n            placeholder={i18n.t('forms.enter_a_body', 'Enter a body')}\n            entry={this.state.body}\n            onChange={this.handleBodyUpdate}\n            autocomplete={true}\n            textarea={true}\n          />\n        </div>\n\n        {createResultNameInput(this.state.resultName, this.handleResultNameUpdate)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import * as React from 'react';\nimport { OpenTicket } from 'flowTypes';\nimport { renderAsset } from '../helpers';\nimport { AssetType } from 'store/flowContext';\nimport { fakePropType } from 'config/ConfigProvider';\n\nconst OpenTicketComp: React.SFC<OpenTicket> = ({ ticketer }, context: any): JSX.Element => {\n  return renderAsset(\n    {\n      id: ticketer.uuid,\n      name: ticketer.name,\n      type: AssetType.Ticketer\n    },\n    context.config.endpoints\n  );\n};\n\nOpenTicketComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default OpenTicketComp;\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { ActionFormProps, RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\n\nimport { actionToState, stateToAction } from 'components/flow/routers/sequence/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TimeoutControl from 'components/form/timeout/TimeoutControl';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\nimport { WAIT_LABEL } from 'components/flow/routers/constants';\nimport i18n from 'config/i18n';\nimport TextInputElement, { TextInputStyle } from 'components/form/textinput/TextInputElement';\nimport styles from 'components/flow/routers/sequence/SequenceForm.module.scss';\n\nexport interface SequenceFormState extends FormState {\n  days: string;\n  hours: string;\n  minutes: string;\n}\n\nexport default class SequenceForm extends React.Component<ActionFormProps, SequenceFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = actionToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleSave(): void {\n    if (\n      !isNaN(parseInt(this.state.hours) + parseInt(this.state.minutes) + parseInt(this.state.days))\n    ) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div>Wait for time</div>\n\n        <div className={styles.delay_container}>\n          <div className={styles.input}>\n            <span className={styles.title}>Days</span>\n            <TextInputElement\n              name={i18n.t('forms.state', 'State')}\n              placeholder=\"Enter days\"\n              onChange={props => this.setState({ days: props })}\n              style={TextInputStyle.small}\n              entry={{ value: this.state.days }}\n            />\n          </div>\n          <div className={styles.input}>\n            <span className={styles.title}>Hours</span>\n            <TextInputElement\n              name={i18n.t('forms.state', 'State')}\n              placeholder=\"Enter hours\"\n              onChange={props => this.setState({ hours: props })}\n              showInvalid={isNaN(parseInt(this.state.hours))}\n              style={TextInputStyle.small}\n              entry={{ value: this.state.hours }}\n            />\n          </div>\n          <div className={styles.input}>\n            <span className={styles.title}>Minutes</span>\n            <TextInputElement\n              name={i18n.t('forms.state', 'State')}\n              placeholder=\"Enter minutes\"\n              onChange={props => this.setState({ minutes: props })}\n              style={TextInputStyle.small}\n              entry={{ value: this.state.minutes }}\n            />\n          </div>\n        </div>\n        {isNaN(\n          parseInt(this.state.hours) + parseInt(this.state.minutes) + parseInt(this.state.days)\n        ) ? (\n          <span className={styles.error}>Enter valid numbers</span>\n        ) : null}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { ResponseRouterFormState } from 'components/flow/routers/response/ResponseRouterForm';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter, Wait, WaitTypes, Delay } from 'flowTypes';\nimport { min } from 'moment';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { SequenceFormState } from './SequenceForm';\n\nexport const actionToState = (settings: NodeEditorSettings): SequenceFormState => {\n  let delayNode: SequenceFormState = {\n    valid: true,\n    days: '0',\n    hours: '0',\n    minutes: '0'\n  };\n  if (settings.originalAction && settings.originalAction.type === 'wait_for_time') {\n    const action = settings.originalAction as Delay;\n\n    if (action.delay) {\n      const delayInSeconds = parseInt(action.delay);\n      delayNode.days = Math.floor(delayInSeconds / (3600 * 24)).toString();\n      delayNode.hours = Math.floor((delayInSeconds % (3600 * 24)) / 3600).toString();\n      delayNode.minutes = Math.floor((delayInSeconds % 3600) / 60).toString();\n    }\n  }\n\n  return delayNode;\n};\n\nexport const stateToAction = (settings: NodeEditorSettings, state: SequenceFormState): any => {\n  const { days, hours, minutes } = state;\n\n  const delayInSeconds = parseInt(days) * 86400 + parseInt(hours) * 3600 + parseInt(minutes) * 60;\n\n  const result = {\n    type: Types.wait_for_time,\n    uuid: getActionUUID(settings, Types.send_msg),\n    delay: delayInSeconds.toString()\n  };\n\n  return result;\n};\n","import Pill from 'components/pill/Pill';\nimport * as React from 'react';\n\nimport styles from './SendMsg.module.scss';\nimport i18n from 'config/i18n';\nimport { Delay } from 'flowTypes';\n\nconst Sequence: React.SFC<Delay> = (action: Delay): JSX.Element => {\n  const delayInSeconds = parseInt(action.delay ? action.delay : '0');\n  const days = Math.floor(delayInSeconds / (3600 * 24));\n  const noOfDays = days > 0 ? days + (days > 1 ? ' days ' : ' day ') : '';\n\n  const hours = Math.floor((delayInSeconds % (3600 * 24)) / 3600);\n  const noOfHours = hours > 0 ? hours + (hours > 1 ? ' hours ' : ' hour ') : '';\n\n  const minutes = Math.floor((delayInSeconds % 3600) / 60);\n  const noOfMinutes = minutes > 0 ? minutes + (minutes > 1 ? ' minutes ' : ' minute ') : '';\n\n  let waitForTime = `Waiting for ${noOfDays} ${noOfHours} ${noOfMinutes}`;\n\n  if (delayInSeconds === 0) {\n    waitForTime = 'Not waiting';\n  }\n  return <div>{waitForTime}</div>;\n};\n\nexport default Sequence;\n","import AddLabelsComp from 'components/flow/actions/addlabels/AddLabels';\nimport AddLabelsForm from 'components/flow/actions/addlabels/AddLabelsForm';\nimport AddURNComp from 'components/flow/actions/addurn/AddURN';\nimport AddURNForm from 'components/flow/actions/addurn/AddURNForm';\nimport CallResthookComp from 'components/flow/actions/callresthook/CallResthook';\nimport CallWebhookComp from 'components/flow/actions/callwebhook/CallWebhook';\nimport AddGroupsForm from 'components/flow/actions/changegroups/addgroups/AddGroupsForm';\nimport ChangeGroupsComp from 'components/flow/actions/changegroups/ChangeGroups';\nimport RemoveGroupsForm from 'components/flow/actions/changegroups/removegroups/RemoveGroupsForm';\nimport KeyLocalizationForm from 'components/flow/actions/localization/KeyLocalizationForm';\nimport MsgLocalizationForm from 'components/flow/actions/localization/MsgLocalizationForm';\nimport MissingComp from 'components/flow/actions/missing/Missing';\nimport PlayAudioComp from 'components/flow/actions/playaudio/PlayAudio';\nimport PlayAudioForm from 'components/flow/actions/playaudio/PlayAudioForm';\nimport SayMsgComp from 'components/flow/actions/saymsg/SayMsg';\nimport SayMsgForm from 'components/flow/actions/saymsg/SayMsgForm';\nimport SendBroadcastComp from 'components/flow/actions/sendbroadcast/SendBroadcast';\nimport SendBroadcastForm from 'components/flow/actions/sendbroadcast/SendBroadcastForm';\nimport SendEmailComp from 'components/flow/actions/sendemail/SendEmail';\nimport SendEmailForm from 'components/flow/actions/sendemail/SendEmailForm';\nimport SendMsgComp from 'components/flow/actions/sendmsg/SendMsg';\nimport SendMsgForm from 'components/flow/actions/sendmsg/SendMsgForm';\nimport SetRunResultComp from 'components/flow/actions/setrunresult/SetRunResult';\nimport SetRunResultForm from 'components/flow/actions/setrunresult/SetRunResultForm';\nimport StartFlowComp from 'components/flow/actions/startflow/StartFlow';\nimport StartSessionComp from 'components/flow/actions/startsession/StartSession';\nimport StartSessionForm from 'components/flow/actions/startsession/StartSessionForm';\nimport TransferAirtimeComp from 'components/flow/actions/transferairtime/TransferAirtime';\nimport UpdateContactComp from 'components/flow/actions/updatecontact/UpdateContact';\nimport UpdateContactForm from 'components/flow/actions/updatecontact/UpdateContactForm';\nimport AirtimeRouterForm from 'components/flow/routers/airtime/AirtimeRouterForm';\nimport DigitsRouterForm from 'components/flow/routers/digits/DigitsRouterForm';\nimport ExpressionRouterForm from 'components/flow/routers/expression/ExpressionRouterForm';\nimport FieldRouterForm from 'components/flow/routers/field/FieldRouterForm';\nimport GroupsRouterForm from 'components/flow/routers/groups/GroupsRouterForm';\nimport RouterLocalizationForm from 'components/flow/routers/localization/RouterLocalizationForm';\nimport MenuRouterForm from 'components/flow/routers/menu/MenuRouterForm';\nimport RandomRouterForm from 'components/flow/routers/random/RandomRouterForm';\nimport ResponseRouterForm from 'components/flow/routers/response/ResponseRouterForm';\nimport ResthookRouterForm from 'components/flow/routers/resthook/ResthookRouterForm';\nimport ResultRouterForm from 'components/flow/routers/result/ResultRouterForm';\nimport SubflowRouterForm from 'components/flow/routers/subflow/SubflowRouterForm';\nimport WaitRouterForm from 'components/flow/routers/wait/WaitRouterForm';\nimport WebhookRouterForm from 'components/flow/routers/webhook/WebhookRouterForm';\nimport {\n  FlowTypes,\n  HIDDEN,\n  ONLINE,\n  SURVEY,\n  TEXT_TYPES,\n  Type,\n  Types,\n  VOICE,\n  FeatureFilter\n} from 'config/interfaces';\nimport { HintTypes, RouterTypes, FlowEditorConfig, SendMsg } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport CallClassifierComp from 'components/flow/actions/callclassifier/CallClassifier';\nimport ClassifyRouterForm from 'components/flow/routers/classify/ClassifyRouterForm';\nimport i18n from 'config/i18n';\nimport SchemeRouterForm from 'components/flow/routers/scheme/SchemeRouterForm';\nimport TicketRouterForm from 'components/flow/routers/ticket/TicketRouterForm';\nimport OpenTicketComp from 'components/flow/actions/openticket/OpenTicket';\nimport SequenceForm from 'components/flow/routers/sequence/SequenceForm';\nimport Sequence from 'components/flow/routers/sequence/Sequence';\n\nconst dedupeTypeConfigs = (typeConfigs: Type[]) => {\n  const map: any = {};\n  return typeConfigs.filter(config => {\n    if (config.type === 'missing') {\n      return false;\n    }\n    const { name: key } = config;\n    return map[key] ? false : (map[key] = true);\n  });\n};\n\nexport interface TypeMap {\n  [propName: string]: Type;\n}\n\nexport type GetTypeConfig = (type: string) => Type;\n\nexport interface Scheme {\n  scheme: string;\n  name: string;\n  path: string;\n  excludeFromSplit?: boolean;\n}\n\nexport const SCHEMES: Scheme[] = [\n  {\n    scheme: 'tel',\n    name: i18n.t('schemes.phone.name', 'SMS'),\n    path: i18n.t('schemes.phone.path', 'Phone Number')\n  },\n  {\n    scheme: 'whatsapp',\n    name: i18n.t('schemes.whatsapp.name', 'WhatsApp'),\n    path: i18n.t('schemes.whatsapp.path', 'WhatsApp Number')\n  },\n  {\n    scheme: 'facebook',\n    name: i18n.t('schemes.facebook.path', 'Facebook'),\n    path: i18n.t('schemes.facebook.path', 'Facebook ID')\n  },\n  {\n    scheme: 'twitterid',\n    name: i18n.t('schemes.twitterid.name', 'Twitter'),\n    path: i18n.t('schemes.twitterid.path', 'Twitter ID')\n  },\n  {\n    scheme: 'telegram',\n    name: i18n.t('schemes.telegram.name', 'Telegram'),\n    path: i18n.t('schemes.telegram.path', 'Telegram ID')\n  },\n  {\n    scheme: 'viber',\n    name: i18n.t('schemes.viber.name', 'Viber'),\n    path: i18n.t('schemes.viber.path', 'Viber ID')\n  },\n  {\n    scheme: 'line',\n    name: i18n.t('schemes.line.name', 'Line'),\n    path: i18n.t('schemes.line.path', 'Line ID')\n  },\n  {\n    scheme: 'wechat',\n    name: i18n.t('schemes.wechat.name', 'Wechat'),\n    path: i18n.t('schemes.wechat.path', 'Wechat ID')\n  },\n  {\n    scheme: 'fcm',\n    name: i18n.t('schemes.firebase.name', 'Firebase'),\n    path: i18n.t('schemes.firebase.path', 'Firebase ID')\n  },\n  {\n    scheme: 'jiochat',\n    name: i18n.t('schemes.jiojach.name', 'Jiochat'),\n    path: i18n.t('schemes.jiochat.path', 'Jiochat ID')\n  },\n  {\n    scheme: 'freshchat',\n    name: i18n.t('schemes.freschat.name', 'Freshchat'),\n    path: i18n.t('schemes.freshchat.path', 'Freshchat ID')\n  },\n  {\n    scheme: 'mailto',\n    name: i18n.t('schemes.email.name', 'Email'),\n    path: i18n.t('schemes.email.path', 'Email Address'),\n    excludeFromSplit: true\n  },\n  {\n    scheme: 'twitter',\n    name: i18n.t('schemes.twitter.name', 'Twitter'),\n    path: i18n.t('schemes.twitter.path', 'Twitter Handle'),\n    excludeFromSplit: true\n  },\n  {\n    scheme: 'ext',\n    name: i18n.t('schemes.external.name', 'External'),\n    path: i18n.t('schemes.external.path', 'External ID')\n  }\n];\n\nexport const typeConfigList: Type[] = [\n  {\n    type: Types.missing,\n    name: 'Missing',\n    description: ' ** Unsupported ** ',\n    component: MissingComp,\n    visibility: HIDDEN\n  },\n  {\n    type: Types.say_msg,\n    name: i18n.t('actions.play_message.name', 'Play Message'),\n    description: i18n.t('actions.play_message.description', 'Play a message'),\n    form: SayMsgForm,\n    localization: MsgLocalizationForm,\n    localizeableKeys: ['text', 'audio_url'],\n    component: SayMsgComp,\n    visibility: VOICE\n  },\n\n  {\n    type: Types.wait_for_menu,\n    name: i18n.t('actions.wait_for_menu.name', 'Wait for Menu Selection'),\n    description: i18n.t('actions.wait_for_menu.description', 'Wait for menu selection'),\n    form: MenuRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: VOICE\n  },\n  {\n    type: Types.wait_for_digits,\n    name: i18n.t('actions.wait_for_digits.name', 'Wait for Digits'),\n    description: i18n.t('actions.wait_for_digits.description', 'Wait for multiple digits'),\n    form: DigitsRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    visibility: VOICE\n  },\n\n  {\n    type: Types.wait_for_audio,\n    name: i18n.t('actions.wait_for_audio.name', 'Wait for Audio'),\n    description: i18n.t('actions.wait_for_audio.description', 'Wait for an audio recording'),\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: [FlowTypes.SURVEY, FlowTypes.VOICE]\n  },\n\n  {\n    type: Types.send_msg,\n    name: i18n.t('actions.send_msg.name', 'Send Message'),\n    description: i18n.t('actions.send_msg.description', 'Send the contact a message'),\n    form: SendMsgForm,\n    localization: MsgLocalizationForm,\n    localizeableKeys: ['text', 'quick_replies', 'templating.variables', 'attachments'],\n    component: SendMsgComp,\n    massageForDisplay: (action: SendMsg) => {\n      // quick replies are optional in the definition, make sure we have\n      // at least an empty array so the localization has a proper cue\n      action.quick_replies = action.quick_replies || [];\n    }\n  },\n  {\n    type: Types.wait_for_response,\n    name: i18n.t('actions.wait_for_response.name', 'Wait for Response'),\n    description: i18n.t('actions.wait_for_response.description', 'Wait for the contact to respond'),\n    form: ResponseRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['categories', 'cases'],\n    aliases: [RouterTypes.switch],\n    visibility: TEXT_TYPES\n  },\n\n  {\n    type: Types.wait_for_time,\n    name: i18n.t('actions.wait_for_time.name', 'Wait for Time'),\n    description: i18n.t('actions.wait_for_time.description', 'Wait for time'),\n    form: SequenceForm,\n    component: Sequence\n  },\n\n  {\n    type: Types.send_broadcast,\n    name: i18n.t('actions.send_broadcast.name', 'Send Broadcast'),\n    description: i18n.t('actions.send_broadcast.description', 'Send a staff member a message'),\n    form: SendBroadcastForm,\n    localization: KeyLocalizationForm,\n    localizeableKeys: ['text'],\n    component: SendBroadcastComp\n  },\n  {\n    type: Types.add_input_labels,\n    name: i18n.t('actions.add_input.name', 'Add Labels'),\n    description: i18n.t('actions.add_input.description', 'Label the incoming message'),\n    form: AddLabelsForm,\n    component: AddLabelsComp\n  },\n  {\n    type: Types.add_contact_urn,\n    name: i18n.t('actions.add_contact_urn.name', 'Add URN'),\n    description: i18n.t('actions.add_contact_urn.description', 'Add a URN for the contact'),\n    form: AddURNForm,\n    component: AddURNComp\n  },\n  {\n    type: Types.add_contact_groups,\n    name: i18n.t('actions.add_contact_groups.name', 'Add to Collection'),\n    description: i18n.t(\n      'actions.add_contact_groups.description',\n      'Add the contact to a collection'\n    ),\n    form: AddGroupsForm,\n    component: ChangeGroupsComp\n  },\n  {\n    type: Types.remove_contact_groups,\n    name: i18n.t('actions.remove_contact_groups.name', 'Remove from Group'),\n    description: i18n.t(\n      'actions.remove_contact_groups.description',\n      'Remove the contact from a group'\n    ),\n    form: RemoveGroupsForm,\n    component: ChangeGroupsComp\n  },\n  {\n    type: Types.set_contact_field,\n    aliases: [\n      Types.set_contact_name,\n      Types.set_contact_language,\n      Types.set_contact_channel,\n      Types.set_contact_status\n    ],\n    name: i18n.t('actions.set_contact_field.name', 'Update Contact'),\n    description: i18n.t('actions.set_contact_field.description', 'Update the contact'),\n    form: UpdateContactForm,\n    component: UpdateContactComp\n  },\n  {\n    type: Types.send_email,\n    name: i18n.t('actions.send_email.name', 'Send Email'),\n    description: i18n.t('actions.send_email.description', 'Send an email'),\n    form: SendEmailForm,\n    localization: KeyLocalizationForm,\n    localizeableKeys: ['subject', 'body'],\n    component: SendEmailComp,\n    visibility: ONLINE\n  },\n  {\n    type: Types.set_run_result,\n    name: i18n.t('actions.set_run_result.name', 'Save Flow Result'),\n    description: i18n.t('actions.set_run_result.description', 'Save a result for this flow'),\n    form: SetRunResultForm,\n    component: SetRunResultComp\n  },\n\n  {\n    type: Types.play_audio,\n    name: i18n.t('actions.play_audio.name', 'Play Recording'),\n    description: i18n.t('actions.play_audio.description', 'Play a contact recording'),\n    form: PlayAudioForm,\n    component: PlayAudioComp,\n    visibility: VOICE\n  },\n\n  {\n    type: Types.call_webhook,\n    name: i18n.t('actions.call_webhook.name', 'Call Webhook'),\n    description: i18n.t('actions.call_webhook.description', 'Call a webhook'),\n    form: WebhookRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: CallWebhookComp,\n    aliases: [Types.split_by_webhook],\n    visibility: ONLINE\n  },\n  {\n    type: Types.call_resthook,\n    name: i18n.t('actions.call_resthook.name', 'Call Zapier'),\n    description: i18n.t('actions.call_resthook.description', 'Call Zapier'),\n    form: ResthookRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: CallResthookComp,\n    aliases: [Types.split_by_resthook],\n    filter: FeatureFilter.HAS_RESTHOOK,\n    visibility: ONLINE\n  },\n  {\n    type: Types.enter_flow,\n    name: i18n.t('actions.enter_flow.name', 'Enter a Flow'),\n    description: i18n.t('actions.enter_flow.description', 'Enter another flow'),\n    form: SubflowRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: StartFlowComp,\n    aliases: [Types.split_by_subflow]\n  },\n  {\n    type: Types.start_session,\n    name: i18n.t('actions.start_session.name', 'Start Somebody Else'),\n    description: i18n.t('actions.start_session.description', 'Start somebody else in a flow'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: StartSessionForm,\n    component: StartSessionComp,\n    visibility: ONLINE\n  },\n  {\n    type: Types.open_ticket,\n    name: i18n.t('actions.open_ticket.name', 'Open Ticket'),\n    description: i18n.t('actions.open_ticket.description', 'Open a ticket with a human agent'),\n    form: TicketRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: OpenTicketComp,\n    aliases: [Types.split_by_ticket],\n    visibility: ONLINE,\n    filter: FeatureFilter.HAS_TICKETER\n  },\n  {\n    type: Types.transfer_airtime,\n    name: i18n.t('actions.transfer_airtime.name', 'Send Airtime'),\n    description: i18n.t('actions.transfer_airtime.description', 'Send the contact airtime'),\n    form: AirtimeRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: TransferAirtimeComp,\n    aliases: [Types.split_by_airtime],\n    visibility: ONLINE,\n    filter: FeatureFilter.HAS_AIRTIME\n  },\n\n  /** Routers */\n\n  {\n    type: Types.wait_for_image,\n    name: i18n.t('actions.wait_for_image.name', 'Wait for Image'),\n    description: i18n.t('actions.wait_for_image.description', 'Wait for an image'),\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: SURVEY\n  },\n  {\n    type: Types.wait_for_video,\n    name: i18n.t('actions.wait_for_video.name', 'Wait for Video'),\n    description: i18n.t('actions.wait_for_video.description', 'Wait for a video'),\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: SURVEY\n  },\n  {\n    type: Types.wait_for_location,\n    name: i18n.t('actions.wait_for_location.name', 'Wait for Location'),\n    description: i18n.t(\n      'actions.wait_for_location.description',\n      'Wait for location GPS coordinates'\n    ),\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: SURVEY\n  },\n  {\n    type: Types.split_by_intent,\n    name: i18n.t('actions.split_by_intent.name', 'Split by Intent'),\n    description: i18n.t('actions.split_by_intent.description', 'Split by intent'),\n    form: ClassifyRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: CallClassifierComp,\n    aliases: [Types.call_classifier],\n    visibility: ONLINE,\n    filter: FeatureFilter.HAS_CLASSIFIER\n  },\n  {\n    type: Types.split_by_expression,\n    name: i18n.t('actions.split_by_expression.name', 'Split by Expression'),\n    description: i18n.t('actions.split_by_expression.description', 'Split by a custom expression'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    form: ExpressionRouterForm\n  },\n  {\n    type: Types.split_by_contact_field,\n    name: i18n.t('actions.split_by_contact_field.name', 'Split by Contact Field'),\n    description: i18n.t('actions.split_by_contact_field.description', 'Split by a contact field'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    form: FieldRouterForm\n  },\n  {\n    type: Types.split_by_run_result,\n    aliases: [Types.split_by_run_result_delimited],\n    name: i18n.t('actions.split_by_run_result.name', 'Split by Flow Result'),\n    description: i18n.t('actions.split_by_run_result.description', 'Split by a result in the flow'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    form: ResultRouterForm\n  },\n  {\n    type: Types.split_by_random,\n    name: i18n.t('actions.split_by_random.name', 'Split Randomly'),\n    description: i18n.t('actions.split_by_random.description', 'Split by random chance'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: RandomRouterForm\n  },\n  {\n    type: Types.split_by_groups,\n    name: i18n.t('actions.split_by_groups.name', 'Split by Group Membership'),\n    description: i18n.t('actions.split_by_groups.description', 'Split by group membership'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: GroupsRouterForm\n  },\n  {\n    type: Types.split_by_scheme,\n    name: i18n.t('actions.split_by_scheme.name', 'Split by URN Type'),\n    description: i18n.t('actions.split_by_scheme.description', 'Split by URN type'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: SchemeRouterForm\n  }\n  // {type: 'random', name: 'Random Split', description: 'Split them up randomly', form: RandomRouterForm}\n];\n\nexport const configsToDisplay = dedupeTypeConfigs(typeConfigList);\n\nexport const typeConfigMap: TypeMap = typeConfigList.reduce((map: TypeMap, typeConfig: Type) => {\n  map[typeConfig.type] = typeConfig;\n  if (typeConfig.aliases) {\n    typeConfig.aliases.forEach((alias: string) => (map[alias] = typeConfig));\n  }\n  return map;\n}, {});\n\n/**\n * Shortcut for constant lookup of type config in type configs map\n * @param {string} type - The type of the type config to return, e.g. 'send_msg'\n * @returns {Object} - The type config found at typeConfigs[type] or -1\n */\nexport const getTypeConfig = (type: Types | RouterTypes): Type => {\n  let config = typeConfigMap[type];\n\n  if (!config) {\n    config = typeConfigMap.missing;\n  }\n  return config;\n};\n\nexport const getType = (renderNode: RenderNode): any => {\n  const wait = renderNode.node.router && renderNode.node.router.wait;\n  if (wait && wait.hint) {\n    switch (wait.hint.type) {\n      case HintTypes.digits:\n        if (wait.hint.count === 1) {\n          return Types.wait_for_menu;\n        }\n        return Types.wait_for_digits;\n      case HintTypes.audio:\n        return Types.wait_for_audio;\n      case HintTypes.image:\n        return Types.wait_for_image;\n      case HintTypes.location:\n        return Types.wait_for_location;\n      case HintTypes.video:\n        return Types.wait_for_video;\n    }\n  }\n\n  // if we are splitting by field, but don't know the name, force it into split by expression\n  if (renderNode.ui.type === Types.split_by_contact_field && !renderNode.ui.config.operand.name) {\n    return Types.split_by_expression;\n  }\n\n  return renderNode.ui.type;\n};\n\nexport const hasFeature = (config: FlowEditorConfig, filter: FeatureFilter) => {\n  return !!(config.filters || []).find((name: string) => name === filter);\n};\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport {\n  CHANNEL_PROPERTY,\n  LANGUAGE_PROPERTY,\n  NAME_PROPERTY,\n  STATUS_PROPERTY\n} from 'components/flow/props';\nimport { Types, ContactStatus } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport {\n  Field,\n  SetContactAttribute,\n  SetContactChannel,\n  SetContactField,\n  SetContactLanguage,\n  SetContactName,\n  SetContactStatus\n} from 'flowTypes';\nimport { Asset, AssetMap, AssetStore, AssetType, REMOVE_VALUE_ASSET } from 'store/flowContext';\nimport {\n  FormState,\n  NodeEditorSettings,\n  StringEntry,\n  SelectOptionEntry,\n  FormEntry\n} from 'store/nodeEditor';\nimport {\n  CONTACT_STATUS_OPTIONS,\n  CONTACT_STATUS_ACTIVE\n} from 'components/flow/actions/updatecontact/UpdateContactForm';\n\nexport interface UpdateContactFormState extends FormState {\n  type: Types;\n  name: StringEntry;\n  channel: FormEntry;\n  language: FormEntry;\n  status: SelectOptionEntry;\n  field: FormEntry;\n  fieldValue: StringEntry;\n}\n\nexport const initializeForm = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): UpdateContactFormState => {\n  const state: UpdateContactFormState = {\n    type: Types.set_contact_name,\n    valid: false,\n    name: { value: '' },\n    channel: { value: null },\n    language: { value: null },\n    status: { value: CONTACT_STATUS_ACTIVE },\n    field: { value: NAME_PROPERTY },\n    fieldValue: { value: '' }\n  };\n\n  if (settings.originalAction) {\n    const originalType = settings.originalAction.type;\n    // these have aliases, so compare the config we resolve to\n    if (getTypeConfig(originalType) === getTypeConfig(Types.set_contact_field)) {\n      state.type = originalType;\n\n      switch (originalType) {\n        case Types.set_contact_field:\n          const fieldAction = settings.originalAction as SetContactField;\n          state.field = { value: { key: fieldAction.field.key, label: fieldAction.field.name } };\n          state.fieldValue = { value: fieldAction.value };\n          state.valid = true;\n          return state;\n        case Types.set_contact_channel:\n          const channelAction = settings.originalAction as SetContactChannel;\n          state.field = { value: CHANNEL_PROPERTY };\n          state.channel = {\n            value: channelAction.channel ? channelAction.channel : REMOVE_VALUE_ASSET\n          };\n          state.valid = true;\n          return state;\n        case Types.set_contact_language:\n          const languageAction = settings.originalAction as SetContactLanguage;\n          state.field = { value: LANGUAGE_PROPERTY };\n          state.valid = true;\n          state.language = {\n            value: languageAction.language\n              ? {\n                  iso: languageAction.language,\n                  name: getLanguageForCode(languageAction.language, assetStore.languages.items)\n                }\n              : REMOVE_VALUE_ASSET\n          };\n          return state;\n        case Types.set_contact_status:\n          const statusAction = settings.originalAction as SetContactStatus;\n          state.field = { value: STATUS_PROPERTY };\n          state.valid = true;\n          state.status = {\n            value: CONTACT_STATUS_OPTIONS.find(o => o.value === statusAction.status)\n          };\n          return state;\n        case Types.set_contact_name:\n          const nameAction = settings.originalAction as SetContactName;\n          state.valid = true;\n          state.name = {\n            value: nameAction.name\n          };\n          return state;\n      }\n    }\n  }\n\n  // default is updating name\n  return state;\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: UpdateContactFormState\n): SetContactAttribute => {\n  /* istanbul ignore else */\n  const field = state.field.value;\n  if (state.type === Types.set_contact_field) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_field),\n      type: state.type,\n      field: { name: field.label, key: field.key },\n      value: state.fieldValue.value\n    };\n  } else if (state.type === Types.set_contact_channel) {\n    if (state.channel.value.type === REMOVE_VALUE_ASSET.type) {\n      return {\n        uuid: getActionUUID(settings, Types.set_contact_channel),\n        type: state.type\n      } as any;\n    }\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_channel),\n      type: state.type,\n      channel: state.channel.value\n    };\n  } else if (state.type === Types.set_contact_language) {\n    if (state.language.value.type === REMOVE_VALUE_ASSET.type) {\n      return {\n        uuid: getActionUUID(settings, Types.set_contact_language),\n        type: state.type\n      } as any;\n    }\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_language),\n      type: state.type,\n      language: state.language.value.iso\n    };\n  } else if (state.type === Types.set_contact_status) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_status),\n      type: state.type,\n      status: state.status.value.value as ContactStatus\n    };\n  } else if (state.type === Types.set_contact_name) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_name),\n      type: state.type,\n      name: state.name.value\n    };\n  }\n};\n\nexport const sortFieldsAndProperties = (a: any, b: any): number => {\n  const aType = a.type || '';\n  const bType = b.type || '';\n\n  const aName = a.name || a.label || '';\n  const bName = b.name || b.label || '';\n\n  // Name always goes first\n  /* istanbul ignore else */\n  if (a.id === NAME_PROPERTY.id && b.id !== NAME_PROPERTY.id) {\n    return -1;\n  } else if (b.id === NAME_PROPERTY.id && a.id !== NAME_PROPERTY.id) {\n    return 1;\n  }\n\n  if (aType === bType) {\n    return aName.localeCompare(bName);\n  }\n\n  if (aType === AssetType.Scheme) {\n    return 1;\n  }\n\n  if (bType === AssetType.Scheme) {\n    return -1;\n  }\n\n  // go with alpha-sort for everthing else\n  else if (aType !== bType) {\n    if (aType === AssetType.ContactProperty) {\n      return -1;\n    }\n\n    if (bType === AssetType.ContactProperty) {\n      return 1;\n    }\n  }\n  // non-name non-fields go last\n  return aName.localeCompare(bName);\n};\n\nexport const fieldToAsset = (field: Field = { key: '', name: '' }): Asset => ({\n  id: field.key,\n  name: field.name,\n  type: AssetType.Field\n});\n\nexport const assetToField = (asset: Asset): Field => ({\n  key: asset.id,\n  name: asset.name\n});\n\nexport const assetToChannel = (asset: Asset): any => {\n  if (asset.id === REMOVE_VALUE_ASSET.id) {\n    return {};\n  }\n\n  return {\n    uuid: asset.id,\n    name: asset.name\n  };\n};\n\nexport const getLanguageForCode = (code: string, languages: AssetMap) => {\n  let lang = code;\n  if (languages && lang in languages) {\n    lang = languages[lang].name;\n  }\n  return lang;\n};\n\nexport const getName = (asset: any): string => {\n  return asset.label || asset.name || asset.key;\n};\n","import { FlowPosition } from 'flowTypes';\nimport ActionTypes, { UpdateEditorState } from 'store/actionTypes';\nimport Constants from 'store/constants';\nimport { Asset, RenderNode, CompletionOption } from 'store/flowContext';\nimport { CompletionSchema } from 'utils/completion';\n\n// tslint:disable:no-shadowed-variable\nexport interface DragSelection {\n  startX?: number;\n  startY?: number;\n  currentX?: number;\n  currentY?: number;\n}\n\nexport interface DebugState {\n  showUUIDs: boolean;\n}\n\nexport interface CanvasPositions {\n  [uuid: string]: FlowPosition;\n}\n\nexport interface Activity {\n  nodes: { [uuid: string]: number };\n  segments: { [exitToNodeKey: string]: number };\n  recentMessages?: { [key: string]: RecentMessage[] };\n  is_starting?: boolean;\n}\n\nexport interface RecentMessage {\n  sent: string;\n  text: string;\n}\n\nexport interface Warning {\n  name: string;\n  type: string;\n}\n\nexport type Warnings = { [uuid: string]: Warning };\n\nexport interface EditorState {\n  currentRevision: number | null;\n  simulating: boolean;\n  language: Asset | null;\n  translating: boolean;\n  fetchingFlow: boolean;\n  ghostNode: RenderNode | null;\n  dragActive: boolean;\n  dragStartTime: number;\n  dragDownPosition: FlowPosition | null;\n  dragNodeUUID: string | null;\n  dragGroup: boolean;\n  dragSelection: DragSelection | null;\n  debug?: DebugState | null;\n\n  // which poptab is popped\n  popped: string;\n\n  warnings: Warnings;\n\n  modalMessage?: ModalMessage;\n  saving?: boolean;\n\n  // our schema for peform dot completion\n  completionSchema: CompletionSchema;\n\n  // our function list for completion\n  functions: CompletionOption[];\n\n  // the currently shown activity, can be\n  // simulation or live\n  activity: Activity;\n\n  // the current live activity\n  liveActivity: Activity;\n\n  // interval in millis we should refresh activity\n  activityInterval: number;\n\n  // is our page visible or tabbed away\n  visible: boolean;\n\n  scrollToNode: string;\n  scrollToAction: string;\n}\n\nexport interface ModalMessage {\n  title: string;\n  body: string;\n}\n\nexport const EMPTY_DRAG_STATE: any = {\n  dragStartTime: 0,\n  dragDownPosition: null,\n  dragActive: false,\n  dragNodeUUID: null,\n  dragGroup: false,\n  dragSelection: null\n};\n\n// Initial state\nexport const initialState: EditorState = {\n  completionSchema: { types: [], root: [] },\n  functions: [],\n  currentRevision: null,\n  simulating: false,\n  translating: false,\n  language: null,\n  fetchingFlow: false,\n  dragStartTime: 0,\n  dragDownPosition: null,\n  dragActive: false,\n  dragNodeUUID: null,\n  dragGroup: false,\n  dragSelection: null,\n  ghostNode: null,\n  debug: null,\n  warnings: {},\n\n  popped: null,\n\n  activity: { segments: {}, nodes: {} },\n  liveActivity: { segments: {}, nodes: {} },\n  activityInterval: 5000,\n  visible: true,\n\n  scrollToNode: null,\n  scrollToAction: null\n};\n\n// Action Creator\nexport const updateEditorState = (editorState: EditorState): UpdateEditorState => ({\n  type: Constants.UPDATE_EDITOR_STATE,\n  payload: {\n    editorState\n  }\n});\n\n/* Reducer */\nexport const editorState = (editorState: EditorState = initialState, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_EDITOR_STATE:\n      return action.payload!.editorState;\n    default:\n      return editorState;\n  }\n};\n\n// export our reducer\nexport default editorState;\n","import { determineTypeConfig } from 'components/flow/helpers';\nimport { getResultName } from 'components/flow/node/helpers';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { SaveResult } from 'components/revisions/RevisionExplorer';\nimport { FlowTypes, Type, Types } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport {\n  createAssetStore,\n  getCompletionSchema,\n  getFlowDetails,\n  saveRevision,\n  getFunctions\n} from 'external';\nimport isEqual from 'fast-deep-equal';\nimport {\n  Action,\n  AnyAction,\n  Category,\n  Dimensions,\n  Endpoints,\n  Exit,\n  FlowDefinition,\n  FlowNode,\n  SendMsg,\n  SetContactField,\n  SetRunResult,\n  StickyNote,\n  FlowDetails\n} from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport { Dispatch } from 'redux';\nimport { CanvasPositions, EditorState, EMPTY_DRAG_STATE, updateEditorState } from 'store/editor';\nimport {\n  Asset,\n  AssetStore,\n  DEFAULT_LANGUAGE,\n  RenderNode,\n  RenderNodeMap,\n  updateAssets,\n  updateBaseLanguage,\n  updateContactFields,\n  updateDefinition,\n  updateNodes,\n  updateMetadata,\n  updateIssues\n} from 'store/flowContext';\nimport {\n  createEmptyNode,\n  fetchFlowActivity,\n  getActionIndex,\n  getCurrentDefinition,\n  getFlowComponents,\n  getLocalizations,\n  getNode,\n  guessNodeType,\n  mergeAssetMaps,\n  createFlowIssueMap\n} from 'store/helpers';\nimport * as mutators from 'store/mutators';\nimport {\n  NodeEditorSettings,\n  updateNodeEditorSettings,\n  updateTypeConfig,\n  updateUserAddingAction\n} from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport { createUUID, hasString, NODE_SPACING, timeEnd, timeStart, ACTIVITY_INTERVAL } from 'utils';\nimport { AxiosError } from 'axios';\nimport i18n from 'config/i18n';\nimport { TembaStore } from 'temba-components';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport type DispatchWithState = Dispatch<AppState>;\n\nexport type GetState = () => AppState;\n\nexport type Thunk<T> = (dispatch: Dispatch<AppState>, getState?: GetState) => T;\n\nexport type AsyncThunk = Thunk<Promise<void>>;\n\nexport type OnAddToNode = (node: FlowNode) => Thunk<void>;\n\nexport type HandleTypeConfigChange = (typeConfig: Type) => Thunk<void>;\n\nexport type UpdateTranslationFilters = (translationFilters: {\n  categories: boolean;\n  rules: boolean;\n}) => Thunk<void>;\n\nexport type OnOpenNodeEditor = (settings: NodeEditorSettings) => Thunk<void>;\n\nexport type OnUpdateCanvasPositions = (positions: CanvasPositions) => Thunk<RenderNodeMap>;\n\nexport type OnRemoveNodes = (nodeUUIDs: string[]) => Thunk<RenderNodeMap>;\n\nexport type AddAsset = (assetType: string, asset: Asset) => Thunk<void>;\n\nexport type RemoveNode = (nodeToRemove: FlowNode) => Thunk<RenderNodeMap>;\n\nexport type UpdateDimensions = (uuid: string, dimensions: Dimensions) => Thunk<void>;\n\nexport type FetchFlow = (\n  endpoints: Endpoints,\n  uuid: string,\n  forceSave: boolean\n) => Thunk<Promise<void>>;\n\nexport type LoadFlowDefinition = (details: FlowDetails, assetStore: AssetStore) => Thunk<void>;\n\nexport type CreateNewRevision = () => Thunk<void>;\n\nexport type NoParamsAC = () => Thunk<void>;\n\nexport type UpdateConnection = (source: string, target: string) => Thunk<RenderNodeMap>;\n\nexport type OnConnectionDrag = (event: ConnectionEvent, flowType: FlowTypes) => Thunk<void>;\n\nexport type OnUpdateLocalizations = (\n  language: string,\n  changes: LocalizationUpdates\n) => Thunk<FlowDefinition>;\n\nexport type UpdateSticky = (stickyUUID: string, sticky: StickyNote) => Thunk<void>;\n\nexport type OnUpdateAction = (\n  action: AnyAction,\n  onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n) => Thunk<RenderNodeMap>;\n\nexport type ActionAC = (nodeUUID: string, action: AnyAction) => Thunk<RenderNodeMap>;\n\nexport type DisconnectExit = (nodeUUID: string, exitUUID: string) => Thunk<RenderNodeMap>;\n\nexport type HandleLanguageChange = (language: Asset) => Thunk<void>;\n\nexport type MergeEditorState = (state: Partial<EditorState>) => Thunk<EditorState>;\n\nexport interface ReplaceAction {\n  nodeUUID: string;\n  actionUUID: string;\n}\n\nexport type OnUpdateRouter = (node: RenderNode) => Thunk<RenderNodeMap>;\n\nexport interface Connection {\n  previousConnection: Connection;\n}\n\nexport interface ConnectionEvent {\n  connection: Connection;\n  source: Element;\n  target: Element;\n  sourceId: string;\n  targetId: string;\n  suspendedElementId: string;\n  endpoints: any[];\n}\n\nexport interface ErrorMessage {\n  status: string;\n  description: string;\n}\n\nexport type LocalizationUpdates = Array<{ uuid: string; translations?: any }>;\nconst QUIET_SAVE = 1000;\nconst SAVE_ALERT_MILLIS = 1000 * 60;\n\nlet markDirty: (quiet?: number) => void = () => {};\nlet lastDirtyAttemptTimeout: any = null;\nlet postingRevision = false;\n\nlet lastDirtyMillis: number = 0;\nlet lastSuccessfulMillis: number = 0;\n\nconst NETWORK_ERROR = i18n.t(\n  'errors.network',\n  'Hmm, we ran into a problem trying to save your changes. It could just be that your internet connection is not working well at the moment. Please wait a minute or so and try again.'\n);\n\nexport const createSaveMonitor = (dispatch: DispatchWithState) => {\n  window.setInterval(() => {\n    if (\n      lastSuccessfulMillis < lastDirtyMillis &&\n      new Date().getTime() - lastDirtyMillis > SAVE_ALERT_MILLIS\n    ) {\n      dispatch(\n        mergeEditorState({\n          modalMessage: {\n            title: \"Uh oh, we couldn't save your changes\",\n            body: NETWORK_ERROR\n          },\n          saving: false\n        })\n      );\n    }\n  }, 5000);\n};\n\nexport const createDirty = (\n  revisionsEndpoint: string,\n  dispatch: DispatchWithState,\n  getState: GetState\n) => (quiet: number = QUIET_SAVE) => {\n  lastDirtyMillis = new Date().getTime();\n\n  if (lastDirtyAttemptTimeout) {\n    window.clearTimeout(lastDirtyAttemptTimeout);\n  }\n\n  const {\n    flowContext: { definition, nodes, assetStore, issues },\n    editorState: { currentRevision }\n  } = getState();\n\n  dispatch(mergeEditorState({ saving: true }));\n\n  // make sure we have the most current revision number we know about\n  const newDefinition = getCurrentDefinition(definition, nodes, true);\n  newDefinition.revision = currentRevision;\n\n  if (postingRevision) {\n    lastDirtyAttemptTimeout = window.setTimeout(() => {\n      markDirty();\n    }, QUIET_SAVE);\n    return;\n  }\n\n  lastDirtyAttemptTimeout = window.setTimeout(() => {\n    postingRevision = true;\n    saveRevision(revisionsEndpoint, newDefinition).then(\n      (result: SaveResult) => {\n        const revision = result.revision;\n        definition.revision = revision.revision;\n        dispatch(updateDefinition(definition));\n\n        if (result.metadata) {\n          dispatch(updateMetadata(result.metadata));\n          dispatch(updateIssues(createFlowIssueMap(issues, result.metadata.issues)));\n        }\n\n        const updatedAssets = mutators.addRevision(assetStore, revision);\n        dispatch(updateAssets(updatedAssets));\n        dispatch(\n          mergeEditorState({\n            currentRevision: revision.revision,\n            saving: false,\n            activityInterval: ACTIVITY_INTERVAL\n          })\n        );\n\n        lastSuccessfulMillis = new Date().getTime();\n        postingRevision = false;\n      },\n      (error: AxiosError) => {\n        const errorMessage = error.response\n          ? (error.response.data as ErrorMessage).description\n          : NETWORK_ERROR;\n\n        const body = errorMessage;\n        dispatch(\n          mergeEditorState({\n            modalMessage: {\n              title: \"Uh oh, we couldn't save your changes\",\n              body\n            },\n            saving: false\n          })\n        );\n        postingRevision = false;\n      }\n    );\n  }, quiet);\n};\n\nexport const mergeEditorState = (changes: Partial<EditorState>) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): EditorState => {\n  const { editorState } = getState();\n  const updated = mutate(editorState, { $merge: changes });\n  dispatch(updateEditorState(updated));\n  return updated;\n};\n\nexport const createNewRevision = () => (dispatch: DispatchWithState, getState: GetState): void => {\n  // mark us dirty with no quiet period\n  markDirty(0);\n};\n\nexport const loadFlowDefinition = (details: FlowDetails, assetStore: AssetStore) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): void => {\n  // first see if we need our asset store initialized\n\n  const definition = details.definition;\n\n  const {\n    flowContext: { issues },\n    editorState: { fetchingFlow }\n  } = getState();\n\n  if (!fetchingFlow) {\n    // mark us as underway\n    dispatch(mergeEditorState({ fetchingFlow: true }));\n  }\n\n  // while we don't officially support doing it, lets make a best effort to load\n  // definitions that don't have _ui information (created outside of the editor)\n  definition.localization = definition.localization || {};\n  definition._ui = definition._ui || { nodes: {}, languages: [], stickies: {} };\n\n  // make sure we have a ui entry for each node\n  let currentTop = 0;\n  for (const node of definition.nodes) {\n    if (!definition._ui.nodes[node.uuid]) {\n      definition._ui.nodes[node.uuid] = {\n        position: { left: 0, top: currentTop },\n        type: guessNodeType(node)\n      };\n      currentTop += 150;\n    }\n  }\n\n  // add assets we found in our flow to our asset store\n  const components = getFlowComponents(definition);\n  mergeAssetMaps(assetStore.fields.items, components.fields);\n  mergeAssetMaps(assetStore.groups.items, components.groups);\n  mergeAssetMaps(assetStore.labels.items, components.labels);\n  mergeAssetMaps(assetStore.results.items, components.results);\n\n  // initialize our language\n  let language: Asset;\n  if (definition.language) {\n    language = assetStore.languages.items[definition.language];\n  }\n\n  if (!language) {\n    language = DEFAULT_LANGUAGE;\n    dispatch(mergeEditorState({ language: DEFAULT_LANGUAGE }));\n    mergeAssetMaps(assetStore.languages.items, { base: DEFAULT_LANGUAGE });\n  }\n\n  if (details.metadata && details.metadata.issues) {\n    dispatch(updateIssues(createFlowIssueMap(issues, details.metadata.issues)));\n  } else {\n    dispatch(updateIssues({}));\n  }\n\n  dispatch(updateBaseLanguage(language));\n  dispatch(updateMetadata(details.metadata));\n\n  // store our flow definition without any nodes\n  dispatch(updateDefinition(mutators.pruneDefinition(definition)));\n  dispatch(updateNodes(components.renderNodeMap));\n\n  // finally update our assets, and mark us as fetched\n  dispatch(updateAssets(assetStore));\n  dispatch(mergeEditorState({ language, fetchingFlow: false }));\n\n  const store: TembaStore = document.querySelector('temba-store');\n  if (store) {\n    store.setKeyedAssets('results', Object.keys(assetStore.results.items));\n  }\n};\n\n/**\n * Fetches a flow. Fetches all assets as well if the haven't been initialized yet\n * @param endpoints where our assets live\n * @param uuid the uuid for the flow to fetch\n */\nexport const fetchFlow = (endpoints: Endpoints, uuid: string, forceSave = false) => async (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  // mark us as underway\n  dispatch(mergeEditorState({ fetchingFlow: true }));\n\n  // first see if we need our asset store initialized\n  let {\n    flowContext: { assetStore }\n  } = getState();\n\n  if (!Object.keys(assetStore).length) {\n    assetStore = await createAssetStore(endpoints);\n  }\n\n  fetchFlowActivity(endpoints.activity, dispatch, getState, uuid);\n  (window as any).triggerActivityUpdate = () => {\n    fetchFlowActivity(endpoints.activity, dispatch, getState, uuid);\n  };\n\n  const completionSchema = await getCompletionSchema(endpoints.completion);\n  const functions = await getFunctions(endpoints.functions);\n\n  getFlowDetails(assetStore.revisions)\n    .then((response: any) => {\n      // backwards compatibitly for during deployment\n      const details: FlowDetails = response.definition\n        ? response\n        : { definition: response as FlowDefinition, metadata: { issues: [] } };\n\n      dispatch(loadFlowDefinition(details, assetStore));\n      dispatch(\n        mergeEditorState({\n          currentRevision: details.definition.revision,\n          completionSchema,\n          functions\n        })\n      );\n\n      markDirty = createDirty(assetStore.revisions.endpoint, dispatch, getState);\n      if (forceSave) {\n        markDirty(0);\n      }\n\n      createSaveMonitor(dispatch);\n    })\n    .catch(error => {\n      // not much we can do without our flow definition\n      // log it to the console, this should really only happen if\n      // misconfigured or the endpoint is unavailable\n      console.error(error);\n    });\n};\n\nexport const addAsset: AddAsset = (assetType: string, asset: Asset) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): void => {\n  const {\n    flowContext: { assetStore }\n  } = getState();\n\n  const updated = mutate(assetStore, {\n    [assetType]: { items: { $merge: { [asset.id]: asset } } }\n  });\n\n  // update our temba store if we have one\n  const store: TembaStore = document.querySelector('temba-store');\n  if (store) {\n    store.setKeyedAssets(assetType, Object.keys(updated[assetType]));\n  }\n\n  dispatch(updateAssets(updated));\n};\n\nexport const handleLanguageChange: HandleLanguageChange = language => (dispatch, getState) => {\n  const {\n    flowContext: { baseLanguage },\n    editorState: { translating, language: currentLanguage }\n  } = getState();\n\n  // determine translating state\n  if (!isEqual(language, baseLanguage)) {\n    if (!translating) {\n      dispatch(mergeEditorState({ translating: true }));\n    }\n  } else {\n    dispatch(mergeEditorState({ translating: false }));\n  }\n\n  // update language\n  if (!isEqual(language, currentLanguage)) {\n    dispatch(mergeEditorState({ language }));\n  }\n};\n\nexport const onUpdateLocalizations = (language: string, changes: LocalizationUpdates) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): FlowDefinition => {\n  const {\n    flowContext: { definition }\n  } = getState();\n  const updated = mutators.updateLocalization(definition, language, changes);\n  dispatch(updateDefinition(updated));\n\n  markDirty();\n  return updated;\n};\n\nexport const updateExitDestination = (nodeUUID: string, exitUUID: string, destination: string) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n  const updated = mutators.updateConnection(nodes, nodeUUID, exitUUID, destination);\n  dispatch(updateNodes(updated));\n  markDirty();\n  return updated;\n};\n\nexport const disconnectExit = (nodeUUID: string, exitUUID: string) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => dispatch(updateExitDestination(nodeUUID, exitUUID, null));\n\nexport const updateConnection = (source: string, target: string) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const [nodeUUID, exitUUID] = source.split(':');\n  return dispatch(updateExitDestination(nodeUUID, exitUUID, target));\n};\n\nexport const removeNode = (node: FlowNode) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  // Remove result name if node has one\n  const {\n    flowContext: { nodes, assetStore }\n  } = getState();\n\n  // update asset store to remove results that no longer exist\n  if (node.router && node.router.result_name) {\n    const updatedAssets = mutators.removeResultFromStore(node.router.result_name, assetStore, {\n      nodeUUID: node.uuid\n    });\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  const updated = mutators.removeNode(nodes, node.uuid);\n  dispatch(updateNodes(updated));\n  markDirty();\n  return updated;\n};\n\nexport const removeAction = (nodeUUID: string, action: AnyAction) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, assetStore }\n  } = getState();\n  const renderNode = nodes[nodeUUID];\n\n  // update asset store to remove results that no longer exist\n  if (action.type === Types.set_run_result) {\n    const resultAction = action as SetRunResult;\n    const updatedAssets = mutators.removeResultFromStore(resultAction.name, assetStore, {\n      nodeUUID,\n      actionUUID: action.uuid\n    });\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  // If it's our last action, then nuke the node\n  if (renderNode.node.actions.length === 1) {\n    const updated = dispatch(removeNode(renderNode.node));\n    markDirty();\n    return updated;\n  } else {\n    // Otherwise, just remove that action\n    const updated = mutators.removeAction(nodes, nodeUUID, action.uuid);\n    dispatch(updateNodes(updated));\n    markDirty();\n    return updated;\n  }\n};\n\nexport const moveActionUp = (nodeUUID: string, action: AnyAction) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n  const updated = mutators.moveActionUp(nodes, nodeUUID, action.uuid);\n  dispatch(updateNodes(updated));\n  markDirty();\n  return updated;\n};\n\n/**\n * Splices a router into a list of actions creating up to three nodes where there\n * was once one node.\n * @param nodeUUID the node to replace\n * @param node the new node being added (shares the previous node uuid)\n * @param type the type of the new router\n * @param previousAction the previous action that is being replaced with our router\n * @returns a list of RenderNodes that were created\n */\nexport const spliceInRouter = (\n  newRouterNode: RenderNode,\n  previousAction: { nodeUUID: string; actionUUID: string }\n) => (dispatch: DispatchWithState, getState: GetState): RenderNodeMap => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n  const previousNode = nodes[previousAction.nodeUUID];\n\n  // remove our old node, we'll make new ones\n  let updatedNodes = nodes;\n  updatedNodes = mutators.removeNode(updatedNodes, previousNode.node.uuid, false);\n\n  newRouterNode.node = mutators.uniquifyNode(newRouterNode.node);\n\n  const actionIdx = getActionIndex(previousNode.node, previousAction.actionUUID);\n\n  // we need to splice a wait node where our previousAction was\n  const topActions: Action[] =\n    actionIdx > 0 ? [...previousNode.node.actions.slice(0, actionIdx)] : [];\n  const bottomActions: Action[] = previousNode.node.actions.slice(\n    actionIdx + 1,\n    previousNode.node.actions.length\n  );\n\n  // tslint:disable-next-line:prefer-const\n  let { left, top } = previousNode.ui.position;\n\n  let topNode: RenderNode;\n  let bottomNode: RenderNode;\n\n  // add our top node if we have one\n  if (topActions.length > 0) {\n    topNode = {\n      node: {\n        uuid: createUUID(),\n        actions: topActions,\n        exits: [\n          {\n            uuid: createUUID(),\n            destination_uuid: null\n          }\n        ]\n      },\n      ui: { position: { left, top } },\n      inboundConnections: { ...previousNode.inboundConnections }\n    };\n\n    updatedNodes = mutators.mergeNode(updatedNodes, topNode);\n    top += NODE_SPACING;\n\n    // update our routerNode for the presence of a top node\n    newRouterNode.inboundConnections = {\n      [topNode.node.exits[0].uuid]: topNode.node.uuid\n    };\n    newRouterNode.ui.position.top += NODE_SPACING;\n  } else {\n    newRouterNode.inboundConnections = { ...previousNode.inboundConnections };\n  }\n\n  // now add our routerNode\n  updatedNodes = mutators.mergeNode(updatedNodes, newRouterNode);\n\n  // add our bottom\n  if (bottomActions.length > 0) {\n    bottomNode = {\n      node: {\n        uuid: createUUID(),\n        actions: bottomActions,\n        exits: [\n          {\n            uuid: createUUID(),\n            destination_uuid: previousNode.node.exits[0].destination_uuid\n          }\n        ]\n      },\n      ui: {\n        position: { left, top }\n      },\n      inboundConnections: {\n        [newRouterNode.node.exits[0].uuid]: newRouterNode.node.uuid\n      }\n    };\n    updatedNodes = mutators.mergeNode(updatedNodes, bottomNode);\n  } else {\n    // if we don't have a bottom, route our routerNode to the previous destination\n    updatedNodes = mutators.updateConnection(\n      updatedNodes,\n      newRouterNode.node.uuid,\n      newRouterNode.node.exits[0].uuid,\n      previousNode.node.exits[0].destination_uuid\n    );\n  }\n\n  dispatch(updateNodes(updatedNodes));\n\n  markDirty();\n  return updatedNodes;\n};\n\nexport const handleTypeConfigChange = (typeConfig: Type) => (dispatch: DispatchWithState) => {\n  // TODO: Generate suggested result name if user is changing to a `wait_for_response` router.\n  dispatch(updateTypeConfig(typeConfig));\n};\n\nexport const resetNodeEditingState = () => (dispatch: DispatchWithState, getState: GetState) => {\n  dispatch(mergeEditorState({ ghostNode: null }));\n  dispatch(updateNodeEditorSettings(null));\n};\n\nexport const onUpdateAction = (\n  action: AnyAction,\n  onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n) => (dispatch: DispatchWithState, getState: GetState) => {\n  timeStart('onUpdateAction');\n\n  const {\n    nodeEditor: { userAddingAction, settings },\n    flowContext: { nodes, contactFields, assetStore }\n  } = getState();\n\n  if (settings == null || settings.originalNode == null) {\n    throw new Error('Need originalNode in settings to update an action');\n  }\n  const { originalNode, originalAction } = settings;\n\n  let updatedAssets = assetStore;\n\n  // remove our result reference\n  if (originalAction && originalAction.type === Types.set_run_result) {\n    const { name: resultName } = originalAction as SetRunResult;\n    updatedAssets = mutators.removeResultFromStore(resultName, updatedAssets, {\n      nodeUUID: originalNode.node.uuid,\n      actionUUID: action.uuid\n    });\n  }\n\n  let updatedNodes = nodes;\n  const creatingNewNode = !!(originalNode !== null && originalNode.ghost);\n\n  let nodeUUID: string = null;\n\n  if (creatingNewNode) {\n    const newNode: RenderNode = {\n      node: {\n        uuid: createUUID(),\n        actions: [action],\n        exits: [{ uuid: createUUID(), destination_uuid: null }]\n      },\n      ui: { position: originalNode.ui.position, type: Types.execute_actions },\n      inboundConnections: originalNode.inboundConnections\n    };\n    updatedNodes = mutators.mergeNode(nodes, newNode);\n\n    nodeUUID = newNode.node.uuid;\n  } else {\n    nodeUUID = originalNode.node.uuid;\n\n    if (userAddingAction) {\n      updatedNodes = mutators.addAction(nodes, originalNode.node.uuid, action);\n    } else if (originalNode.node.hasOwnProperty('router')) {\n      updatedNodes = mutators.spliceInAction(nodes, originalNode.node.uuid, action);\n    } else {\n      updatedNodes = mutators.updateAction(nodes, originalNode.node.uuid, action, originalAction);\n    }\n  }\n\n  dispatch(updateNodes(updatedNodes));\n  dispatch(updateUserAddingAction(false));\n\n  // Add result to store.\n  if (action.type === Types.set_run_result) {\n    const { name: resultName } = action as SetRunResult;\n    updatedAssets = mutators.addResultToStore(resultName, updatedAssets, {\n      nodeUUID,\n      actionUUID: action.uuid\n    });\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  // Add contact field to our store.\n  if (action.type === Types.set_contact_field) {\n    const { field } = action as SetContactField;\n    dispatch(updateContactFields({ ...contactFields, [field.key]: field.name }));\n  }\n\n  markDirty(0);\n\n  timeEnd('onUpdateAction');\n\n  if (onUpdated) {\n    onUpdated(dispatch, getState);\n  }\n  return updatedNodes;\n};\n\n/**\n * Opens the NodeEditor in the state for adding to a provided node\n * @param node the node to add to\n */\nexport const onAddToNode = (node: FlowNode) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n\n  // TODO: remove the need for this once we all have formHelpers\n  const newAction: SendMsg = {\n    uuid: createUUID(),\n    type: Types.send_msg,\n    text: ''\n  };\n\n  dispatch(\n    updateNodeEditorSettings({\n      originalNode: getNode(nodes, node.uuid),\n      originalAction: newAction,\n      showAdvanced: false\n    })\n  );\n\n  markDirty();\n  dispatch(updateUserAddingAction(true));\n  dispatch(handleTypeConfigChange(getTypeConfig(Types.send_msg)));\n  dispatch(mergeEditorState(EMPTY_DRAG_STATE));\n};\n\nexport const onRemoveNodes = (uuids: string[]) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, definition }\n  } = getState();\n\n  let updatedNodes = nodes;\n  let updatedDefinition = definition;\n  let didNodes = false;\n  let didDef = false;\n\n  uuids.forEach((uuid: string) => {\n    if (uuid in updatedNodes) {\n      updatedNodes = mutators.removeNode(updatedNodes, uuid, true);\n      didNodes = true;\n    } else if (uuid in updatedDefinition._ui.stickies) {\n      updatedDefinition = mutators.updateStickyNote(updatedDefinition, uuid, null);\n      didDef = true;\n    }\n  });\n\n  if (didNodes) {\n    dispatch(updateNodes(updatedNodes));\n  }\n\n  if (didDef) {\n    dispatch(updateDefinition(updatedDefinition));\n  }\n\n  if (didDef || didNodes) {\n    markDirty();\n  }\n\n  return nodes;\n};\n\nexport const onUpdateCanvasPositions = (positions: CanvasPositions) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, definition }\n  } = getState();\n\n  let updatedDefinition = definition;\n  let updatedNodes = nodes;\n\n  let updatedNodePosition = false;\n  let updatedStickyPosition = false;\n\n  for (const uuid in positions) {\n    if (updatedNodes[uuid]) {\n      updatedNodes = mutators.updatePosition(updatedNodes, uuid, positions[uuid]);\n      updatedNodePosition = true;\n    } else if (updatedDefinition._ui.stickies[uuid]) {\n      updatedDefinition = mutators.updateStickyNotePosition(\n        updatedDefinition,\n        uuid,\n        positions[uuid]\n      );\n      updatedStickyPosition = true;\n    }\n  }\n\n  let updated = false;\n\n  if (updatedNodePosition) {\n    updated = true;\n    dispatch(updateNodes(updatedNodes));\n  }\n\n  if (updatedStickyPosition) {\n    updated = true;\n    dispatch(updateDefinition(updatedDefinition));\n  }\n\n  if (updated) {\n    markDirty();\n  }\n\n  return updatedNodes;\n};\n\n/**\n * Called when a connection begins to be dragged from an endpoint both\n * when a new connection is desired or when an existing one is being moved.\n * @param event\n */\nexport const onConnectionDrag = (event: ConnectionEvent, flowType: FlowTypes) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  const {\n    flowContext: { nodes, assetStore }\n  } = getState();\n\n  // We finished dragging a ghost node, create the spec for our new ghost component\n  const [fromNodeUUID, fromExitUUID] = event.sourceId.split(':');\n\n  const fromNode = nodes[fromNodeUUID];\n\n  const names = Object.keys(assetStore.results ? assetStore.results.items : {});\n\n  let resultCount = names.length + 1;\n  let key = `result_${resultCount}`;\n\n  while (hasString(names, key)) {\n    resultCount++;\n    key = `result_${resultCount}`;\n  }\n\n  // set our ghost node\n  const ghostNode = createEmptyNode(fromNode, fromExitUUID, resultCount, flowType);\n  ghostNode.inboundConnections = { [fromExitUUID]: fromNodeUUID };\n  dispatch(mergeEditorState({ ghostNode }));\n};\n\nexport const updateSticky = (uuid: string, sticky: StickyNote) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): void => {\n  const {\n    flowContext: { definition }\n  } = getState();\n\n  const updated = mutators.updateStickyNote(definition, uuid, sticky);\n  dispatch(updateDefinition(updated));\n  markDirty();\n};\n\nexport const onUpdateRouter = (renderNode: RenderNode) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, assetStore },\n    nodeEditor: {\n      settings: { originalNode, originalAction }\n    }\n  } = getState();\n\n  let updated = nodes;\n  if (originalNode) {\n    const previousPosition = originalNode.ui.position;\n    renderNode.ui.position = previousPosition;\n    renderNode.inboundConnections = originalNode.inboundConnections;\n  }\n\n  if (originalNode.ghost) {\n    renderNode.inboundConnections = originalNode.inboundConnections;\n    const { left, top } = originalNode.ui.position;\n    renderNode.ui.position = { left, top };\n    renderNode.node = mutators.uniquifyNode(renderNode.node);\n  }\n\n  // update our results\n  const resultName = getResultName(renderNode.node);\n  if (resultName) {\n    let updatedAssets = assetStore;\n\n    // remove our original result name\n    const originalResultName = getResultName(originalNode.node);\n    if (originalResultName) {\n      updatedAssets = mutators.removeResultFromStore(originalResultName, updatedAssets, {\n        nodeUUID: originalNode.node.uuid\n      });\n    }\n\n    updatedAssets = mutators.addFlowResult(updatedAssets, renderNode.node);\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  if (\n    originalNode &&\n    originalAction &&\n    !originalNode.ghost &&\n    !getSwitchRouter(originalNode.node)\n  ) {\n    const actionToSplice = originalNode.node.actions.find(\n      (action: Action) => action.uuid === originalAction.uuid\n    );\n\n    if (actionToSplice) {\n      // if we are splicing using the original top\n      renderNode.ui.position.top = originalNode.ui.position.top;\n\n      return dispatch(\n        spliceInRouter(renderNode, {\n          nodeUUID: originalNode.node.uuid,\n          actionUUID: actionToSplice.uuid\n        })\n      );\n    }\n\n    // didn't recognize that action, let's add a new router node\n    // if we are appendeng in, see if we need to route through\n    const switchRouter = getSwitchRouter(renderNode.node);\n    if (switchRouter) {\n      const defaultCategory = switchRouter.categories.find(\n        (cat: Category) => cat.uuid === switchRouter.default_category_uuid\n      );\n      const exitToUpdate = renderNode.node.exits.find(\n        (exit: Exit) => exit.uuid === defaultCategory.exit_uuid\n      );\n\n      exitToUpdate.destination_uuid = originalNode.node.exits[0].destination_uuid;\n    }\n\n    renderNode.inboundConnections = {\n      [originalNode.node.exits[0].uuid]: originalNode.node.uuid\n    };\n    renderNode.node = mutators.uniquifyNode(renderNode.node);\n    renderNode.ui.position.top += NODE_SPACING;\n    updated = mutators.mergeNode(updated, renderNode);\n  } else {\n    updated = mutators.mergeNode(updated, renderNode);\n  }\n\n  dispatch(updateNodes(updated));\n\n  markDirty(0);\n  return updated;\n};\n\nexport const onOpenNodeEditor = (settings: NodeEditorSettings) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  const {\n    flowContext: {\n      definition: { localization }\n    },\n    editorState: { language, translating }\n  } = getState();\n\n  const { originalNode: renderNode } = settings;\n  let { originalAction: action } = settings;\n\n  const node = renderNode.node;\n\n  // stuff our localization objects in our settings\n  settings.localizations = [];\n  if (translating) {\n    let actionToTranslate = action;\n\n    // TODO: this is a hack, would be nice to find how to make that area respond differently\n    // if they clicked just below the actions, treat it as the last action\n    if (!actionToTranslate && node.actions.length > 0) {\n      actionToTranslate = node.actions[node.actions.length - 1];\n      if (\n        actionToTranslate.type !== Types.send_msg &&\n        actionToTranslate.type !== Types.send_broadcast\n      ) {\n        return;\n      }\n    }\n\n    const translations = localization[language.id];\n    settings.localizations.push(\n      ...getLocalizations(node, actionToTranslate, language, translations)\n    );\n  }\n\n  // Account for hybrids or clicking on the empty exit table\n  if (!action && node.actions.length > 0) {\n    action = node.actions[node.actions.length - 1];\n  }\n\n  const typeConfig = determineTypeConfig(settings);\n  dispatch(handleTypeConfigChange(typeConfig));\n  dispatch(updateNodeEditorSettings(settings));\n  dispatch(mergeEditorState(EMPTY_DRAG_STATE));\n};\n\nexport const updateTranslationFilters = (translationFilters: {\n  categories: boolean;\n  rules: boolean;\n}) => (dispatch: DispatchWithState, getState: GetState): void => {\n  const {\n    flowContext: { definition }\n  } = getState();\n\n  definition._ui.translation_filters = translationFilters;\n  dispatch(updateDefinition(definition));\n  markDirty();\n};\n","import { fieldToAsset } from 'components/flow/actions/updatecontact/helpers';\nimport { getResultName } from 'components/flow/node/helpers';\nimport { DefaultExitNames } from 'components/flow/routers/constants';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { GROUPS_OPERAND } from 'components/nodeeditor/constants';\nimport { FlowTypes, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { getActivity } from 'external';\nimport {\n  AddLabels,\n  AnyAction,\n  Category,\n  ChangeGroups,\n  FlowDefinition,\n  FlowNode,\n  FlowPosition,\n  HintTypes,\n  RouterTypes,\n  SetContactField,\n  SetRunResult,\n  StickyNote,\n  SwitchRouter,\n  UIMetaData,\n  Wait,\n  WaitTypes,\n  SendMsg,\n  FlowIssue,\n  FlowIssueType\n} from 'flowTypes';\nimport Localization, { LocalizedObject } from 'services/Localization';\nimport { Activity, EditorState, Warnings } from 'store/editor';\nimport {\n  Asset,\n  AssetMap,\n  AssetType,\n  RenderNode,\n  RenderNodeMap,\n  FlowIssueMap\n} from 'store/flowContext';\nimport { addResult } from 'store/mutators';\nimport { DispatchWithState, GetState, mergeEditorState } from 'store/thunks';\nimport { createUUID, snakify } from 'utils';\n\nexport interface Bounds {\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n}\n\ninterface Reflow {\n  uuid: string;\n  bounds: Bounds;\n}\n\n// track if we have an active timeout before issuing a new one\nlet activityTimeout: any = null;\n\nexport const getNodeWithAction = (nodes: RenderNodeMap, actionUUID: string): RenderNode => {\n  for (const nodeUUID of Object.keys(nodes)) {\n    const renderNode = nodes[nodeUUID];\n    for (const action of renderNode.node.actions) {\n      if (action.uuid === actionUUID) {\n        return renderNode;\n      }\n    }\n  }\n};\n\nexport const getNode = (nodes: RenderNodeMap, nodeUUID: string) => {\n  const node = nodes[nodeUUID];\n  if (!node) {\n    throw new Error('Cannot find node ' + nodeUUID);\n  }\n  return node;\n};\n\nexport const getExitIndex = (node: FlowNode, exitUUID: string) => {\n  for (const [exitIdx, exit] of node.exits.entries()) {\n    if (exit.uuid === exitUUID) {\n      return exitIdx;\n    }\n  }\n  throw new Error('Cannot find exit ' + exitUUID);\n};\n\nexport const getActionIndex = (node: FlowNode, actionUUID: string) => {\n  for (const [actionIdx, action] of node.actions.entries()) {\n    if (action.uuid === actionUUID) {\n      return actionIdx;\n    }\n  }\n  throw new Error('Cannot find action ' + actionUUID);\n};\n\nexport const getSuggestedResultName = (count: number) => `Result ${count}`;\n\nexport const hasRouter = (renderNode: RenderNode): boolean => {\n  return !!(renderNode && renderNode.node.router);\n};\n\nexport const hasWait = (renderNode: RenderNode): boolean => {\n  return !!(renderNode.node.router && renderNode.node.router.wait);\n};\n\nexport const hasLoopSplit = (renderNode: RenderNode): boolean => {\n  const type = getType(renderNode);\n\n  return (\n    hasWait(renderNode) || type === Types.split_by_expression || type === Types.split_by_subflow\n  );\n};\n\n/**\n * Follows every path from fromNodeUUID to toNodeUUID and throws\n * an error if we hit ourselves again without hitting a wait\n * @param nodes the entire node map\n * @param fromNodeUUID which node we are originating from\n * @param toNodeUUID where we are trying to go\n * @param path the path we have tried so far\n */\nexport const detectLoops = (\n  nodes: RenderNodeMap,\n  fromNodeUUID: string,\n  toNodeUUID: string,\n  path: string[] = []\n): void => {\n  const fromNode = nodes[fromNodeUUID];\n  const toNode = nodes[toNodeUUID];\n\n  if (fromNodeUUID === toNodeUUID) {\n    throw new Error(\"Flow loop detected, can't point to self\");\n  }\n\n  if (hasLoopSplit(toNode) || hasLoopSplit(fromNode)) {\n    return;\n  }\n\n  if (path.length === 0) {\n    path.push(fromNodeUUID);\n    for (const exit of toNode.node.exits) {\n      if (exit.destination_uuid) {\n        detectLoops(nodes, toNode.node.uuid, exit.destination_uuid, path);\n      }\n    }\n    return;\n  }\n\n  // we're back where we started\n  if (toNodeUUID === path[0]) {\n    throw new Error('Flow loop detected, route through a wait first');\n  }\n\n  // add us to the path\n  path.push(toNodeUUID);\n\n  // follow each of our exits\n  for (const exit of toNode.node.exits) {\n    if (exit.destination_uuid) {\n      detectLoops(nodes, toNodeUUID, exit.destination_uuid, path);\n    }\n  }\n\n  return;\n};\n\nexport const getLocalizations = (\n  node: FlowNode,\n  action: AnyAction,\n  language: Asset,\n  translations?: { [uuid: string]: any }\n): LocalizedObject[] => {\n  const localizations: LocalizedObject[] = [];\n\n  // Account for localized cases\n  if (node.router && node.router.type === RouterTypes.switch) {\n    const router = node.router as SwitchRouter;\n\n    router.cases.forEach(kase =>\n      localizations.push(Localization.translate(kase, language, translations))\n    );\n  }\n\n  if (action) {\n    localizations.push(Localization.translate(action, language, translations));\n    // check for localized template variables]\n    if (action.type === Types.send_msg) {\n      const sendMsgAction = action as SendMsg;\n      if (sendMsgAction.templating) {\n        localizations.push(\n          Localization.translate(sendMsgAction.templating, language, translations)\n        );\n      }\n    }\n  }\n\n  // Account for localized categories\n  if (node.router) {\n    node.router.categories.forEach(category => {\n      if (category.name) {\n        localizations.push(Localization.translate(category, language, translations));\n      }\n    });\n  }\n\n  return localizations;\n};\n\nexport const getUniqueDestinations = (node: FlowNode): string[] => {\n  const destinations: any = {};\n  for (const exit of node.exits) {\n    if (exit.destination_uuid) {\n      destinations[exit.destination_uuid] = true;\n    }\n  }\n  return Object.keys(destinations);\n};\n\nexport const getCurrentDefinition = (\n  definition: FlowDefinition,\n  nodeMap: RenderNodeMap,\n  includeUI: boolean = true\n): FlowDefinition => {\n  const renderNodes = getOrderedNodes(nodeMap);\n  const nodes: FlowNode[] = [];\n  renderNodes.forEach((renderNode: RenderNode) => nodes.push(renderNode.node));\n\n  // tslint:disable-next-line:variable-name\n  const uiNodes: any = {};\n  for (const uuid of Object.keys(nodeMap)) {\n    uiNodes[uuid] = nodeMap[uuid].ui;\n  }\n\n  const result = {\n    ...definition,\n    nodes\n  };\n\n  if (includeUI) {\n    // tslint:disable-next-line:variable-name\n    result._ui = {\n      nodes: uiNodes,\n      stickies: definition._ui.stickies,\n      languages: definition._ui.languages,\n      translation_filters: definition._ui.translation_filters\n    } as UIMetaData;\n  }\n\n  return result;\n};\n\nexport const newPosition = (left: number, top: number): FlowPosition => {\n  return { left, top };\n};\n\nexport const addPosition = (a: FlowPosition, b: FlowPosition): FlowPosition => {\n  const width = a.right - a.left;\n  const height = a.bottom - a.top;\n\n  // we allow dragging out of bounds\n  const top = a.top + b.top;\n  const left = a.left + b.left;\n\n  if (width && height) {\n    return {\n      left,\n      top,\n      right: left + width,\n      bottom: top + height\n    };\n  }\n\n  return { top, left };\n};\n\nexport const subtractPosition = (a: FlowPosition, b: FlowPosition): FlowPosition => {\n  return { left: a.left - b.left, top: a.top - b.top };\n};\n\nexport const getOrderedNodes = (nodes: RenderNodeMap): RenderNode[] => {\n  const sorted: RenderNode[] = [];\n  Object.keys(nodes).forEach((nodeUUID: string) => {\n    sorted.push(nodes[nodeUUID]);\n  });\n  return sorted.sort((a: RenderNode, b: RenderNode) => {\n    let diff = a.ui.position.top - b.ui.position.top;\n    if (diff === 0) {\n      diff = a.ui.position.left - b.ui.position.left;\n    }\n    return diff;\n  });\n};\n\nexport const getCollisions = (\n  nodes: RenderNodeMap,\n  stickies: { [key: string]: StickyNote },\n  box: FlowPosition\n): { [uuid: string]: FlowPosition } => {\n  const collisions: any = {};\n  for (const nodeUUID of Object.keys(nodes)) {\n    const node = nodes[nodeUUID];\n    if (collides(box, node.ui.position)) {\n      collisions[node.node.uuid] = node.ui.position;\n    }\n  }\n\n  for (const uuid in stickies) {\n    const sticky = stickies[uuid];\n    if (collides(box, sticky.position)) {\n      collisions[uuid] = sticky.position;\n    }\n  }\n\n  return collisions;\n};\n\nexport const collides = (a: FlowPosition, b: FlowPosition) => {\n  // don't bother with collision if we don't have full dimensions\n  /* istanbul ignore next */\n  if (!a.bottom || !b.bottom) {\n    return false;\n  }\n\n  return !(b.left > a.right || b.right < a.left || b.top > a.bottom || b.bottom < a.top);\n};\n\n/**\n * Gets the first collsion in the node map returning the original node,\n * the node it collides with and optionally an additional node it\n * collides with if inserting between two nodes\n * @param nodes\n */\nexport const getCollision = (nodes: RenderNodeMap): RenderNode[] => {\n  const sortedNodes = getOrderedNodes(nodes);\n\n  for (let i = 0; i < sortedNodes.length; i++) {\n    const current = sortedNodes[i];\n    if (i + 1 < sortedNodes.length) {\n      for (let j = i + 1; j < sortedNodes.length; j++) {\n        const other = sortedNodes[j];\n        if (collides(current.ui.position, other.ui.position)) {\n          // if the next node collides too, include it\n          // to deal with inserting between two closely\n          // positioned nodes\n          if (j + 1 < sortedNodes.length) {\n            const cascaded = sortedNodes[j + 1];\n            if (collides(other.ui.position, cascaded.ui.position)) {\n              return [current, other, cascaded];\n            }\n          }\n          return [current, other];\n        }\n      }\n    }\n  }\n  return [];\n};\n\nexport const createEmptyNode = (\n  fromNode: RenderNode,\n  fromExitUUID: string,\n  suggestedResultNameCount: number,\n  flowType: FlowTypes\n): RenderNode => {\n  const emptyNode: FlowNode = {\n    uuid: createUUID(),\n    actions: [],\n    exits: [\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      }\n    ]\n  };\n\n  let type = Types.execute_actions;\n\n  // Add an action next if we are coming from a router\n  if (!fromNode || hasRouter(fromNode)) {\n    const replyType = flowType === FlowTypes.VOICE ? Types.say_msg : Types.send_msg;\n    const replyAction = {\n      uuid: createUUID(),\n      text: '',\n      type: replyType\n    };\n\n    emptyNode.actions.push(replyAction);\n  } else {\n    // Otherwise we are going to a switch\n    const categories: Category[] = [\n      {\n        uuid: createUUID(),\n        name: DefaultExitNames.All_Responses,\n        exit_uuid: emptyNode.exits[0].uuid\n      }\n    ];\n\n    const wait: Wait = { type: WaitTypes.msg };\n    type = Types.wait_for_response;\n    if (flowType === FlowTypes.VOICE) {\n      wait.hint = { type: HintTypes.digits, count: 1 };\n    }\n\n    emptyNode.router = {\n      type: RouterTypes.switch,\n      result_name: getSuggestedResultName(suggestedResultNameCount),\n      default_category_uuid: categories[0].uuid,\n      categories,\n      wait,\n      cases: []\n    } as SwitchRouter;\n  }\n\n  let inboundConnections = {};\n  if (fromNode) {\n    inboundConnections = { [fromExitUUID]: fromNode.node.uuid };\n  }\n\n  return {\n    node: emptyNode,\n    ui: { position: { left: 0, top: 0 }, type },\n    inboundConnections,\n    ghost: true\n  };\n};\n\nexport interface FlowComponents {\n  renderNodeMap: RenderNodeMap;\n  groups: AssetMap;\n  fields: AssetMap;\n  labels: AssetMap;\n  results: AssetMap;\n  warnings: Warnings;\n}\n\nexport const isGroupAction = (actionType: string) => {\n  return (\n    actionType === Types.add_contact_groups ||\n    actionType === Types.remove_contact_groups ||\n    actionType === Types.send_broadcast\n  );\n};\n\n/**\n * This isn't necessarily supported, but lets make a best effort to guess node\n * types from cues within the definition if somebody loads a flow without _ui details.\n * @param node\n */\nexport const guessNodeType = (node: FlowNode) => {\n  // router based nodes\n  if (node.router) {\n    // hybrid nodes\n    if (node.actions.length === 1) {\n      if (node.actions[0].type === Types.call_webhook) {\n        return Types.split_by_webhook;\n      }\n\n      if (node.actions[0].type === Types.transfer_airtime) {\n        return Types.split_by_airtime;\n      }\n\n      if (node.actions[0].type === Types.call_resthook) {\n        return Types.split_by_resthook;\n      }\n\n      if (node.actions[0].type === Types.enter_flow) {\n        return Types.split_by_subflow;\n      }\n    }\n\n    if (node.router.wait) {\n      return Types.wait_for_response;\n    }\n\n    if (node.router.type === RouterTypes.random) {\n      return Types.split_by_random;\n    }\n\n    const switchRouter = getSwitchRouter(node);\n    if (switchRouter) {\n      if (switchRouter.operand === GROUPS_OPERAND) {\n        return Types.split_by_groups;\n      }\n    }\n\n    return Types.split_by_expression;\n  }\n\n  return Types.execute_actions;\n};\n\nexport const generateResultQuery = (resultName: string) => `@run.results.${snakify(resultName)}`;\n\n/**\n * Converts a list of assets to a map keyed by their id\n */\nexport const assetListToMap = (assets: Asset[]): AssetMap => {\n  const assetMap: any = {};\n  for (const asset of assets) {\n    assetMap[asset.id] = asset;\n  }\n  return assetMap;\n};\n\nexport const assetMapToList = (assets: AssetMap): any[] => {\n  return Object.keys(assets).map(key => {\n    const asset = assets[key];\n    return { uuid: asset.id, name: asset.name };\n  });\n};\n\n/**\n * Processes an initial FlowDefinition for details necessary for the editor\n */\nexport const getFlowComponents = (definition: FlowDefinition): FlowComponents => {\n  const renderNodeMap: RenderNodeMap = {};\n  const warnings: Warnings = {};\n  const { nodes, _ui } = definition;\n\n  // initialize our nodes\n  const pointerMap: { [uuid: string]: { [uuid: string]: string } } = {};\n\n  const groups: AssetMap = {};\n  const fields: AssetMap = {};\n  const labels: AssetMap = {};\n  let results: AssetMap = {};\n\n  for (const node of nodes) {\n    if (!node.actions) {\n      node.actions = [];\n    }\n\n    const ui = _ui.nodes[node.uuid];\n    const renderNode: RenderNode = {\n      node,\n      ui,\n      inboundConnections: {}\n    };\n\n    renderNodeMap[node.uuid] = renderNode;\n\n    const resultName = getResultName(node);\n    if (resultName) {\n      results = addResult(resultName, results, { nodeUUID: node.uuid });\n    }\n\n    const type = getType(renderNode);\n\n    // if we are split by group, look at our categories for groups\n    if (type === Types.split_by_groups) {\n      const router = getSwitchRouter(node);\n\n      for (const kase of router.cases) {\n        const groupUUID = kase.arguments[0];\n        const category = router.categories.find((cat: Category) => {\n          return cat.uuid === kase.category_uuid;\n        });\n\n        /* istanbul ignore else */\n        if (category) {\n          if (groupUUID) {\n            groups[groupUUID] = {\n              name: category.name,\n              id: groupUUID,\n              type: AssetType.Group\n            };\n          }\n        }\n      }\n    }\n\n    for (const action of node.actions) {\n      if (isGroupAction(action.type)) {\n        const groupsToChange = (action as ChangeGroups).groups;\n        if (groupsToChange) {\n          for (const group of groupsToChange) {\n            if (group.uuid) {\n              groups[group.uuid] = {\n                name: group.name,\n                id: group.uuid,\n                type: AssetType.Group\n              };\n            }\n          }\n        }\n      } else if (action.type === Types.set_contact_field) {\n        const fieldAction = action as SetContactField;\n        fields[fieldAction.field.key] = {\n          name: fieldAction.field.name,\n          id: fieldAction.field.key,\n          type: AssetType.Field\n        };\n      } else if (action.type === Types.add_input_labels) {\n        for (const label of (action as AddLabels).labels) {\n          labels[label.uuid] = {\n            name: label.name,\n            id: label.uuid,\n            type: AssetType.Label\n          };\n        }\n      } else if (action.type === Types.set_run_result) {\n        const resultAction = action as SetRunResult;\n        const key = snakify(resultAction.name);\n\n        if (key in results) {\n          results[key].references.push({\n            nodeUUID: node.uuid,\n            actionUUID: action.uuid\n          });\n        } else {\n          results[key] = {\n            name: resultAction.name,\n            id: key,\n            type: AssetType.Result,\n            references: [{ nodeUUID: node.uuid, actionUUID: action.uuid }]\n          };\n        }\n      }\n    }\n\n    for (const exit of node.exits) {\n      if (exit.destination_uuid) {\n        let pointers: { [uuid: string]: string } = pointerMap[exit.destination_uuid];\n\n        if (!pointers) {\n          pointers = {};\n        }\n\n        pointers[exit.uuid] = node.uuid;\n        pointerMap[exit.destination_uuid] = pointers;\n      }\n    }\n  }\n\n  // store our pointers with their associated nodes\n  for (const nodeUUID of Object.keys(pointerMap)) {\n    renderNodeMap[nodeUUID].inboundConnections = pointerMap[nodeUUID];\n  }\n\n  return { renderNodeMap, groups, fields, labels, results, warnings };\n};\n\n/**\n * Extracts contact fields from a list of nodes\n */\nexport const extractContactFields = (nodes: FlowNode[]): Asset[] =>\n  nodes.reduce((fieldList, { actions }) => {\n    actions.forEach(action => {\n      if (action.type === Types.set_contact_field) {\n        fieldList.push(fieldToAsset((action as SetContactField).field));\n      }\n    });\n    return fieldList;\n  }, []);\n\n/** Adds all the items from toAdd if that don't already exist in assets */\nexport const mergeAssetMaps = (assets: AssetMap, toAdd: AssetMap): void => {\n  Object.keys(toAdd).forEach((key: string) => {\n    assets[key] = assets[key] || toAdd[key];\n  });\n};\n\nexport const createFlowIssueMap = (\n  previousIssues: FlowIssueMap,\n  issues: FlowIssue[]\n): FlowIssueMap => {\n  const issueMap: FlowIssueMap = (issues || [])\n    .filter((issue: FlowIssue) => issue.type !== FlowIssueType.LEGACY_EXTRA)\n    .reduce((issueMap: FlowIssueMap, issue: FlowIssue) => {\n      const nodeIssues: FlowIssue[] = issueMap[issue.node_uuid] || [];\n      nodeIssues.push(issue);\n      issueMap[issue.node_uuid] = nodeIssues;\n      return issueMap;\n    }, {});\n\n  for (const [nodeUUID, nodeIssues] of Object.entries(issueMap)) {\n    // would be nice not to use stringify as a deepequals here\n    if (JSON.stringify(previousIssues[nodeUUID]) === JSON.stringify(nodeIssues)) {\n      issueMap[nodeUUID] = previousIssues[nodeUUID];\n    }\n  }\n  return issueMap;\n};\n\nexport const fetchFlowActivity = (\n  endpoint: string,\n  dispatch: DispatchWithState,\n  getState: GetState,\n  uuid: string\n): void => {\n  const {\n    editorState: { simulating, activityInterval, visible }\n  } = getState();\n\n  if (visible) {\n    getActivity(endpoint, uuid).then((activity: Activity) => {\n      // every interval we back off a bit up to 5 minutes\n      if (activity) {\n        const updates: Partial<EditorState> = {\n          liveActivity: activity,\n          activityInterval: Math.min(60000 * 5, activityInterval + 200)\n        };\n\n        if (!simulating) {\n          updates.activity = activity;\n        }\n\n        dispatch(mergeEditorState(updates));\n\n        if (activityTimeout) {\n          window.clearTimeout(activityTimeout);\n        }\n\n        activityTimeout = window.setTimeout(() => {\n          fetchFlowActivity(endpoint, dispatch, getState, uuid);\n        }, activityInterval);\n      }\n    });\n  } else {\n    if (activityTimeout) {\n      window.clearTimeout(activityTimeout);\n    }\n\n    activityTimeout = window.setTimeout(() => {\n      fetchFlowActivity(endpoint, dispatch, getState, uuid);\n    }, 1000);\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { Dimensions, FlowPosition } from 'flowTypes';\nimport * as React from 'react';\nimport { newPosition } from 'store/helpers';\n\nimport styles from './CanvasDraggable.module.scss';\nimport { onNextRender } from 'utils';\n\nexport interface CanvasDraggableProps {\n  position: FlowPosition;\n  uuid: string;\n  idx: number;\n  elementCreator: (props: CanvasDraggableProps) => JSX.Element;\n  config?: any;\n  // should our draggable be initialized as dragged\n  dragOnAdd?: boolean;\n\n  selected?: boolean;\n\n  onAnimated?: (uuid: string) => void;\n  updateDimensions?: (uuid: string, position: Dimensions) => void;\n  onDragStart?: (uuid: string, clickedPosition: FlowPosition) => void;\n  onDragStop?: () => void;\n}\n\nexport interface CanvasDraggableState {\n  width?: number;\n  height?: number;\n}\n\nexport class CanvasDraggable extends React.Component<CanvasDraggableProps, CanvasDraggableState> {\n  private ele!: HTMLDivElement;\n\n  constructor(props: CanvasDraggableProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/, 'ref']\n    });\n\n    this.state = {};\n  }\n\n  private ref(ref: HTMLDivElement): any {\n    return (this.ele = ref);\n  }\n\n  public componentDidMount(): void {\n    if (this.ele) {\n      if (this.props.updateDimensions) {\n        const width = this.ele.clientWidth || this.props.position.right - this.props.position.left;\n        const height =\n          this.ele.clientHeight || this.props.position.bottom - this.props.position.top;\n        this.setState({ width, height }, () => {\n          this.props.updateDimensions(this.props.uuid, {\n            width,\n            height\n          });\n        });\n      }\n    }\n  }\n\n  public shouldComponentUpdate(nextProps: CanvasDraggableProps, state: any, context: any): boolean {\n    return (\n      nextProps.position.left !== this.props.position.left ||\n      nextProps.position.top !== this.props.position.top ||\n      nextProps.position.right !== this.props.position.right ||\n      nextProps.position.bottom !== this.props.position.bottom ||\n      nextProps.idx !== this.props.idx ||\n      nextProps.selected !== this.props.selected ||\n      nextProps.config !== this.props.config\n    );\n  }\n\n  public componentDidUpdate(\n    prevProps: CanvasDraggableProps,\n    prevState: CanvasDraggableState\n  ): void {\n    // traceUpdate(this, prevProps, prevState);\n\n    // we want to check our dimensions after our next render\n    onNextRender(() => {\n      if (this.ele) {\n        if (this.ele.clientWidth && this.ele.clientHeight) {\n          if (\n            this.state.width !== this.ele.clientWidth ||\n            this.state.height !== this.ele.clientHeight\n          ) {\n            if (this.props.updateDimensions) {\n              const height = this.ele.clientHeight;\n              const width = this.ele.clientWidth;\n\n              this.setState({ width, height }, () => {\n                this.props.updateDimensions(this.props.uuid, { width, height });\n              });\n            }\n          }\n        }\n      }\n    });\n  }\n\n  private handleMouseUp(event: React.MouseEvent<HTMLDivElement>): void {\n    if (event.nativeEvent.which === 3) {\n      return;\n    }\n    if (this.props.onDragStop) {\n      this.props.onDragStop();\n    }\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    // ignore clicks in textareas\n    if (!this.props.selected && (event.target as any).tagName.toUpperCase() === 'TEXTAREA') {\n      return;\n    }\n\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return;\n    }\n    if (this.props.onDragStart) {\n      this.props.onDragStart(\n        this.props.uuid,\n        newPosition(event.pageX - this.props.position.left, event.pageY - this.props.position.top)\n      );\n    }\n  }\n\n  public render(): JSX.Element {\n    const classes = [styles.draggable];\n\n    if (this.props.selected) {\n      classes.push(styles.selected);\n    }\n\n    const handleAnimated = () => {\n      if (this.props.onAnimated) {\n        this.props.onAnimated(this.props.uuid);\n      }\n    };\n\n    return (\n      <div\n        data-testid={'draggable_' + this.props.uuid}\n        onTransitionEnd={handleAnimated}\n        ref={this.ref}\n        className={classes.join(' ')}\n        style={{\n          left: this.props.position.left,\n          top: this.props.position.top\n        }}\n        onMouseDown={this.handleMouseDown}\n        onMouseUp={this.handleMouseUp}\n      >\n        {this.props.elementCreator(this.props)}\n      </div>\n    );\n  }\n}\n","import { FlowPosition } from 'flowTypes';\nimport { CanvasPositions } from 'store/editor';\nimport {\n  MAX_REFLOW_ATTEMPTS,\n  NODE_SPACING,\n  set,\n  snapPositionToGrid,\n  timeEnd,\n  timeStart\n} from 'utils';\n\nconst mutate = require('immutability-helper');\n\nexport const collides = (a: FlowPosition, b: FlowPosition, fudge: number) => {\n  // don't bother with collision if we don't have full dimensions\n  /* istanbul ignore next */\n  if (!a.bottom || !b.bottom) {\n    return false;\n  }\n\n  a.bottom += fudge;\n\n  return !(b.left > a.right! || b.right! < a.left || b.top > a.bottom || b.bottom < a.top);\n};\n\nexport const getDraggablesInBox = (\n  positions: CanvasPositions,\n  box: FlowPosition\n): { [uuid: string]: FlowPosition } => {\n  const collisions: any = {};\n  for (const nodeUUID of Object.keys(positions)) {\n    const position = positions[nodeUUID];\n    if (collides(box, position, 0)) {\n      collisions[nodeUUID] = position;\n    }\n  }\n  return collisions;\n};\n\ninterface DraggablePosition extends FlowPosition {\n  uuid: string;\n}\n\nexport const getOrderedDraggables = (positions: CanvasPositions): DraggablePosition[] => {\n  const sorted: DraggablePosition[] = [];\n  Object.keys(positions).forEach((uuid: string) => {\n    sorted.push({ ...positions[uuid], uuid });\n  });\n\n  return sorted.sort((a: DraggablePosition, b: DraggablePosition) => {\n    let diff = a.top - b.top;\n    if (diff === 0) {\n      diff = a.left - b.left;\n    }\n    return diff;\n  });\n};\n\n/**\n * Gets the first collsion in the node map returning the original node,\n * the node it collides with and optionally an additional node it\n * collides with if inserting between two nodes\n * @param nodes\n */\nconst getFirstCollision = (\n  positions: CanvasPositions,\n  changed: string[],\n  fudge: number\n): DraggablePosition[] => {\n  const sortedDraggables = getOrderedDraggables(positions);\n\n  for (let i = 0; i < sortedDraggables.length; i++) {\n    const current = sortedDraggables[i];\n\n    if (i + 1 < sortedDraggables.length) {\n      for (let j = i + 1; j < sortedDraggables.length; j++) {\n        const other = sortedDraggables[j];\n\n        if (collides(current, other, fudge)) {\n          // if the next node collides too, include it\n          // to deal with inserting between two closely\n          // positioned nodes\n          if (j + 1 < sortedDraggables.length) {\n            const cascaded = sortedDraggables[j + 1];\n            if (collides(other, cascaded, fudge)) {\n              return [current, other, cascaded];\n            }\n          }\n\n          if (\n            !!changed.find((uuid: string) => other.uuid === uuid) &&\n            !!!changed.find((uuid: string) => current.uuid === uuid)\n          ) {\n            return [other, current];\n          }\n\n          return [current, other];\n        }\n      }\n    }\n  }\n  return [];\n};\n\nconst setTop = (position: FlowPosition, newTop: number) => {\n  return snapPositionToGrid({\n    top: newTop,\n    left: position.left,\n    bottom: newTop + (position.bottom! - position.top),\n    right: position.right\n  });\n};\n\n/**\n * Reflow positions to account for any collisions\n * @param positions\n */\nexport const reflow = (\n  positions: CanvasPositions,\n  fudge: number\n): { positions: CanvasPositions; changed: string[] } => {\n  let newPositions = positions;\n  const changed: string[] = [];\n\n  // if for some reason we can't reflow, don't blow up\n  let attempts = 0;\n\n  timeStart('reflow');\n\n  let collision = getFirstCollision(positions, changed, fudge);\n  while (collision.length > 0 && attempts < MAX_REFLOW_ATTEMPTS) {\n    attempts++;\n    if (collision.length) {\n      const [top, bottom, cascade] = collision;\n      newPositions = mutate(newPositions, {\n        [bottom.uuid]: set(setTop(bottom, top.bottom! + NODE_SPACING))\n      });\n      changed.push(bottom.uuid);\n\n      if (cascade) {\n        // start with the top of the bottom node\n        let cascadeTop = top.bottom! + NODE_SPACING;\n\n        // and add its height\n        cascadeTop += bottom.bottom! - bottom.top;\n        newPositions = mutate(newPositions, {\n          [cascade.uuid]: set(setTop(cascade, cascadeTop))\n        });\n\n        changed.push(cascade.uuid);\n      }\n    }\n\n    collision = getFirstCollision(newPositions, changed, fudge);\n  }\n\n  timeEnd('reflow');\n\n  return { positions: newPositions, changed };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { CanvasDraggable, CanvasDraggableProps } from 'components/canvas/CanvasDraggable';\nimport { getDraggablesInBox, reflow } from 'components/canvas/helpers';\nimport { DRAG_THRESHOLD } from 'components/flow/Flow';\nimport { Dimensions, FlowPosition } from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport React from 'react';\nimport { CanvasPositions, DragSelection } from 'store/editor';\nimport { addPosition } from 'store/helpers';\nimport { MergeEditorState } from 'store/thunks';\nimport { COLLISION_FUDGE, snapPositionToGrid, throttle, snapToGrid } from 'utils';\n\nimport styles from './Canvas.module.scss';\n\nexport const CANVAS_PADDING = 300;\nexport const REFLOW_QUIET = 200;\n\nexport interface CanvasProps {\n  uuid: string;\n  dragActive: boolean;\n  draggingNew: boolean;\n  newDragElement: JSX.Element;\n  draggables: CanvasDraggableProps[];\n  mutable: boolean;\n  onLoaded: () => void;\n  onDragging: (draggedUUIDs: string[]) => void;\n  onUpdatePositions: (positions: CanvasPositions) => void;\n  onRemoveNodes: (nodeUUIDs: string[]) => void;\n  onDoubleClick: (position: FlowPosition) => void;\n  mergeEditorState: MergeEditorState;\n}\n\ninterface CanvasState {\n  dragDownPosition: FlowPosition | null;\n  dragUUID: string | null;\n  dragGroup: boolean;\n  dragSelection: DragSelection | null;\n  uuid: string;\n  positions: CanvasPositions;\n  selected: CanvasPositions;\n  height: number;\n}\n\nexport class Canvas extends React.PureComponent<CanvasProps, CanvasState> {\n  private ele!: HTMLDivElement;\n  private isScrolling: any;\n\n  private reflowTimeout: any;\n\n  // when auto scrolling we need to move dragged elements\n  private lastX!: number | null;\n  private lastY!: number | null;\n\n  // did we just select something\n  private justSelected = false;\n\n  private onDragThrottled: (uuids: string[]) => void = throttle(this.props.onDragging, 300);\n  private onMouseThrottled: (event: any) => void = throttle(this.handleMouseMove.bind(this), 10);\n\n  constructor(props: CanvasProps) {\n    super(props);\n\n    let height = document.documentElement.clientHeight;\n\n    const positions: { [uuid: string]: FlowPosition } = {};\n    this.props.draggables.forEach((draggable: CanvasDraggableProps) => {\n      positions[draggable.uuid] = draggable.position;\n      if (draggable.position.bottom) {\n        height = Math.max(height, draggable.position.bottom + CANVAS_PADDING);\n      }\n    });\n\n    this.state = {\n      height,\n      dragDownPosition: null,\n      dragUUID: null,\n      dragGroup: false,\n      dragSelection: null,\n      uuid: this.props.uuid,\n      selected: {},\n      positions\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^render/, /^mark/, /^do/, /^ensure/]\n    });\n  }\n\n  private handleWindowResize(): void {\n    const windowHeight = document.documentElement.clientHeight;\n    this.setState({ height: Math.max(windowHeight, this.state.height) });\n  }\n\n  public componentDidMount(): void {\n    /* istanbul ignore next */\n    window.addEventListener('resize', this.handleWindowResize);\n    document.addEventListener('keydown', this.handleKeyDown);\n\n    this.props.onLoaded();\n  }\n\n  private handleKeyDown(event: any): void {\n    if (this.state.selected && event.key === 'Backspace') {\n      const nodeUUIDs = Object.keys(this.state.selected);\n      if (nodeUUIDs.length > 0) {\n        this.props.onRemoveNodes(Object.keys(this.state.selected));\n      }\n    }\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener('resize', this.handleWindowResize);\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  public componentDidUpdate(prevProps: CanvasProps, prevState: CanvasState): void {\n    // traceUpdate(this, prevProps, prevState);\n\n    let updated = false;\n    let updatedPositions = { ...this.state.positions };\n\n    // are we being given something new\n    this.props.draggables.forEach((draggable: CanvasDraggableProps) => {\n      if (!this.state.positions[draggable.uuid]) {\n        updatedPositions = mutate(updatedPositions, {\n          $merge: { [draggable.uuid]: draggable.position }\n        });\n        updated = true;\n      }\n    });\n\n    // have we removed something\n    Object.keys(updatedPositions).forEach((uuid: string) => {\n      if (\n        !this.props.draggables.find((draggable: CanvasDraggableProps) => draggable.uuid === uuid)\n      ) {\n        updatedPositions = mutate(updatedPositions, { $unset: [[uuid]] } as any);\n        updated = true;\n      }\n    });\n\n    if (updated) {\n      this.setState({ positions: updatedPositions });\n    }\n  }\n\n  public renderSelectionBox(): JSX.Element | null {\n    const drag = this.state.dragSelection;\n\n    if (drag && drag.startX && drag.startY && drag.currentX && drag.currentY) {\n      const left = Math.min(drag.startX, drag.currentX);\n      const top = Math.min(drag.startY, drag.currentY);\n      const width = Math.max(drag.startX, drag.currentX) - left;\n      const height = Math.max(drag.startY, drag.currentY) - top;\n\n      if (this.state.dragSelection && this.state.dragSelection.startX) {\n        return <div className={styles.drag_selection} style={{ left, top, width, height }} />;\n      }\n    }\n\n    return null;\n  }\n\n  private isClickOnCanvas(event: React.MouseEvent<HTMLDivElement>): boolean {\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return false;\n    }\n    return (event.target as any).id === 'canvas';\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLDivElement>): void {\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return;\n    }\n\n    if (!this.props.mutable) {\n      return;\n    }\n\n    const offset = this.ele.getBoundingClientRect();\n\n    this.justSelected = false;\n    if (this.isClickOnCanvas(event)) {\n      const startX = event.pageX - offset.left;\n      const startY = event.pageY - offset.top - window.scrollY;\n\n      this.setState({\n        dragSelection: { startX, startY, currentX: startX, currentY: startY }\n      });\n    }\n  }\n\n  private handleMouseMove(event: React.MouseEvent<HTMLDivElement>): void {\n    if (!this.props.mutable) {\n      return;\n    }\n\n    if (this.props.draggingNew) {\n      this.lastX = event.pageX;\n      this.lastY = event.pageY;\n      this.updateStateWithScroll(event.clientY, event.pageY);\n      if (this.state.dragUUID) {\n        this.updatePositions(event.pageX, event.pageY, event.clientY, false);\n      }\n      return;\n    }\n\n    if (this.state.dragSelection && this.state.dragSelection.startX) {\n      const drag = this.state.dragSelection;\n\n      if (drag && drag.startX && drag.startY && drag.currentX && drag.currentY) {\n        const left = Math.min(drag.startX, drag.currentX);\n        const top = Math.min(drag.startY, drag.currentY);\n        const right = Math.max(drag.startX, drag.currentX);\n        const bottom = Math.max(drag.startY, drag.currentY);\n\n        const selected = getDraggablesInBox(this.state.positions, {\n          left,\n          top,\n          right,\n          bottom\n        });\n\n        const offset = this.ele.getBoundingClientRect();\n\n        this.setState({\n          dragSelection: {\n            startX: drag.startX,\n            startY: drag.startY,\n            currentX: event.pageX - offset.left,\n            currentY: event.pageY - offset.top - window.scrollY\n          }\n        });\n\n        this.setState({ selected });\n\n        if (Object.keys(selected).length > 0) {\n          this.justSelected = true;\n        }\n      }\n    }\n\n    if (this.state.dragUUID) {\n      this.updatePositions(event.pageX, event.pageY, event.clientY, false);\n    }\n  }\n\n  private scrollCanvas(amount: number): void {\n    if (!this.isScrolling) {\n      this.isScrolling = true;\n\n      let speed = amount;\n      if (window.scrollY + amount < 0) {\n        speed = 0;\n      }\n\n      this.isScrolling = window.setInterval(() => {\n        if (this.lastX && this.lastY) {\n          // as we scroll we need to move our dragged items along with us\n          this.updatePositions(this.lastX, this.lastY + speed, 0, false);\n          window.scrollBy(0, speed);\n        }\n      }, 30);\n    }\n  }\n\n  private handleMouseUpCapture(event: React.MouseEvent<HTMLDivElement>): void {\n    if (!this.props.mutable) {\n      return;\n    }\n\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return;\n    }\n\n    this.lastX = null;\n    this.lastY = null;\n    if (this.state.dragUUID) {\n      this.setState({\n        dragDownPosition: null,\n        dragSelection: null,\n        dragUUID: null\n      });\n    }\n\n    if (!this.justSelected) {\n      this.props.mergeEditorState({\n        dragActive: false\n      });\n\n      this.setState({ selected: {} });\n    }\n\n    if (this.state.dragSelection && this.state.dragSelection.startX) {\n      this.setState({\n        dragSelection: {\n          startX: undefined,\n          startY: undefined,\n          currentX: undefined,\n          currentY: undefined\n        }\n      });\n    }\n\n    this.justSelected = false;\n  }\n\n  public handleUpdateDimensions(uuid: string, dimensions: Dimensions): void {\n    if (dimensions.width && dimensions.height) {\n      let pos = this.state.positions[uuid];\n      if (!pos) {\n        pos = this.props.draggables.find((item: CanvasDraggableProps) => item.uuid === uuid)!\n          .position;\n      }\n\n      const newPosition = {\n        left: pos.left,\n        top: pos.top,\n        right: pos.left + dimensions.width,\n        bottom: pos.top + dimensions.height\n      };\n\n      if (newPosition.bottom !== pos.bottom || newPosition.right !== pos.right) {\n        this.setState((prevState: CanvasState) => {\n          const newPositions = mutate(prevState.positions, {\n            $merge: {\n              [uuid]: newPosition\n            }\n          });\n\n          return {\n            positions: newPositions,\n            height: Math.max(newPosition.bottom + CANVAS_PADDING, prevState.height)\n          };\n        }, this.markReflow);\n      }\n    }\n  }\n\n  public ensureCanvasHeight() {\n    let height = this.state.height;\n    Object.keys(this.state.positions).forEach(uuid => {\n      const bottom = this.state.positions[uuid].bottom + CANVAS_PADDING;\n      if (bottom > height) {\n        height = bottom;\n      }\n    });\n\n    if (height > this.state.height) {\n      this.setState({ height });\n    }\n  }\n\n  public doReflow(): void {\n    const reflowPositions = { ...this.state.positions };\n    delete reflowPositions[this.state.dragUUID];\n    const { positions, changed } = reflow(reflowPositions, COLLISION_FUDGE);\n\n    if (changed) {\n      this.setState({ positions });\n\n      if (changed) {\n        this.props.onUpdatePositions(\n          changed.reduce((results: CanvasPositions, uuid: string) => {\n            results[uuid] = positions[uuid];\n            return results;\n          }, {})\n        );\n      }\n    }\n\n    this.props.onDragging(changed);\n  }\n\n  private markReflow(): void {\n    if (this.reflowTimeout) {\n      clearTimeout(this.reflowTimeout);\n    }\n\n    this.reflowTimeout = setTimeout(() => {\n      // only reflow if we aren't dragging\n      if (!this.state.dragUUID) {\n        this.doReflow();\n      }\n    }, REFLOW_QUIET);\n  }\n\n  /**\n   * Updates the state of the canvas, expanding and scrolling as needed\n   * @param windowY the mouse position in the viewport\n   * @param pageY the mouse position in the full canvas\n   * @param otherState optional state to set\n   */\n  private updateStateWithScroll(\n    windowY: number,\n    pageY: number,\n    otherState: Partial<CanvasState> = {}\n  ): void {\n    const viewportHeight = document.documentElement.clientHeight;\n    this.setState(\n      (prevState: CanvasState) => {\n        return {\n          ...(otherState as CanvasState),\n          height: Math.max(pageY + CANVAS_PADDING, prevState.height)\n        };\n      },\n      () => {\n        // check if we need to scroll our canvas\n\n        if (!this.isScrolling && windowY !== 0) {\n          if (windowY + 100 > viewportHeight) {\n            this.scrollCanvas(15);\n          } else if (windowY < 100) {\n            this.scrollCanvas(-15);\n          }\n        }\n        // if we are scrolling but given a clientY then user is mousing\n        else if (windowY !== 0 && (windowY > 100 && windowY + 100 < viewportHeight)) {\n          window.clearInterval(this.isScrolling);\n          this.isScrolling = null;\n        }\n      }\n    );\n  }\n\n  private updatePositions(pageX: number, pageY: number, clientY: number, snap: boolean): void {\n    if (this.state.dragUUID) {\n      const { dragUUID } = this.state;\n\n      // save off the last update, if we scroll on the user's behalf we'll need this\n      this.lastX = pageX;\n      this.lastY = pageY;\n\n      const startPosition = this.props.dragActive\n        ? this.state.selected[dragUUID]\n        : this.state.positions[dragUUID];\n\n      const offset = this.ele.getBoundingClientRect();\n\n      if (this.state.dragDownPosition) {\n        const xd = pageX - offset.left - this.state.dragDownPosition.left - startPosition.left;\n\n        const yd =\n          pageY - offset.top - this.state.dragDownPosition.top - startPosition.top - window.scrollY;\n\n        let lowestNode: number | undefined = 0;\n        if (this.props.dragActive) {\n          const delta = { left: xd, top: yd };\n          const prevState = this.state;\n          const uuids = Object.keys(prevState.selected);\n          let newPositions: { [uuid: string]: FlowPosition } = {};\n\n          uuids.forEach((uuid: string) => {\n            let newPosition = addPosition(prevState.selected[uuid], delta);\n            if (snap) {\n              newPosition = snapPositionToGrid(newPosition);\n            }\n\n            if (newPosition && newPosition.bottom! > lowestNode!) {\n              lowestNode = newPosition.bottom;\n            }\n            newPositions[uuid] = newPosition;\n          });\n\n          newPositions = mutate(prevState.positions, {\n            $merge: newPositions\n          });\n\n          this.updateStateWithScroll(clientY, lowestNode, {\n            positions: newPositions\n          });\n\n          if (uuids.length <= 5) {\n            this.props.onDragging(uuids);\n          } else {\n            this.onDragThrottled(uuids);\n          }\n        } else {\n          if (Math.abs(xd) + Math.abs(yd) > DRAG_THRESHOLD) {\n            let selected = this.state.selected;\n            if (!(this.state.dragUUID in selected)) {\n              selected = { [dragUUID]: this.state.positions[dragUUID] };\n            }\n\n            this.props.mergeEditorState({\n              dragActive: true\n            });\n\n            this.setState({ selected });\n          }\n        }\n      }\n    }\n  }\n\n  private handleDragStart(uuid: string, position: FlowPosition): void {\n    const offset = this.ele.getBoundingClientRect();\n\n    this.setState({\n      dragUUID: uuid,\n      dragDownPosition: {\n        left: position.left - offset.left,\n        top: position.top - offset.top - window.scrollY\n      }\n    });\n  }\n\n  /** Gets all the positions for nodes that were dragged */\n  private getSelectedPositions(): CanvasPositions {\n    return Object.keys(this.state.selected).reduce((result: CanvasPositions, uuid: string) => {\n      result[uuid] = this.state.positions[uuid];\n      return result;\n    }, {});\n  }\n\n  private handleDragStop(): void {\n    if (this.state.dragUUID) {\n      this.updatePositions(this.lastX!, this.lastY!, 0, true);\n    }\n\n    this.props.onUpdatePositions(this.getSelectedPositions());\n    this.setState({\n      dragUUID: null,\n      dragDownPosition: null,\n      dragSelection: null\n    });\n\n    this.markReflow();\n\n    this.props.mergeEditorState({\n      dragActive: false\n    });\n  }\n\n  private handleAnimated(uuid: string): void {\n    this.props.onDragging([uuid]);\n  }\n\n  private handleDoubleClick(event: React.MouseEvent<HTMLDivElement>): void {\n    if (this.isClickOnCanvas(event)) {\n      const offset = this.ele.getBoundingClientRect();\n      this.props.onDoubleClick(\n        snapToGrid(event.pageX - offset.left, event.pageY - offset.top - window.scrollY)\n      );\n    }\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div\n        id=\"canvas-container\"\n        className={styles.canvas_container}\n        onMouseDown={this.handleMouseDown}\n        onMouseMove={this.onMouseThrottled}\n        onMouseUp={this.handleMouseUpCapture}\n        onDoubleClick={this.handleDoubleClick}\n      >\n        <div className={styles.canvas_background}>\n          <div\n            data-testid=\"canvas\"\n            style={{ height: this.state.height }}\n            id=\"canvas\"\n            ref={(ele: HTMLDivElement) => {\n              this.ele = ele;\n            }}\n            className={styles.canvas}\n          >\n            {this.props.newDragElement}\n            {this.props.draggables.map((draggable: CanvasDraggableProps, idx: number) => {\n              const pos = this.state.positions[draggable.uuid] || draggable.position;\n              return (\n                <CanvasDraggable\n                  onAnimated={this.handleAnimated}\n                  key={'draggable_' + draggable.uuid}\n                  uuid={draggable.uuid}\n                  updateDimensions={this.handleUpdateDimensions}\n                  position={pos}\n                  idx={draggable.idx}\n                  selected={!!this.state.selected[draggable.uuid]}\n                  elementCreator={draggable.elementCreator}\n                  onDragStart={this.handleDragStart}\n                  onDragStop={this.handleDragStop}\n                  dragOnAdd={draggable.dragOnAdd}\n                  config={draggable.config}\n                />\n              );\n            })}\n            {this.renderSelectionBox()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport styles from 'components/counter/Counter.module.scss';\nimport * as React from 'react';\nimport { addCommas } from 'utils';\n\nexport interface CounterProps {\n  keepVisible: boolean;\n  containerStyle: string;\n  countStyle: string;\n  count: number;\n  onClick?: () => void;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n}\n\nexport default class Counter extends React.Component<CounterProps> {\n  private ele!: HTMLDivElement;\n\n  constructor(props: CounterProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^get/]\n    });\n  }\n\n  public componentDidMount(): void {\n    this.handleScrollIntoView();\n  }\n\n  public componentDidUpdate(prevProps: CounterProps): void {\n    if (prevProps.count !== this.props.count) {\n      this.handleScrollIntoView();\n    }\n  }\n\n  private handleScrollIntoView(): void {\n    if (!!this.ele) {\n      if (this.props.count > 0 && this.props.keepVisible) {\n        window.setTimeout(() => {\n          window.scrollTo({\n            top: this.ele.getBoundingClientRect().top - 200 + window.scrollY,\n            behavior: 'smooth'\n          });\n        }, 200);\n      }\n    }\n  }\n\n  private handleMouseEvent(event: React.MouseEvent<HTMLDivElement>, callback: () => void): void {\n    event.preventDefault();\n    event.stopPropagation();\n    if (callback) {\n      callback();\n    }\n  }\n\n  private handleMouseEnter(event: React.MouseEvent<HTMLDivElement>): void {\n    this.handleMouseEvent(event, this.props.onMouseEnter!);\n  }\n\n  private handleMouseLeave(event: React.MouseEvent<HTMLDivElement>): void {\n    this.handleMouseEvent(event, this.props.onMouseLeave!);\n  }\n\n  private handleClick(event: React.MouseEvent<HTMLDivElement>): void {\n    this.handleMouseEvent(event, this.props.onClick!);\n  }\n\n  public render(): JSX.Element | null {\n    const count = addCommas(this.props.count);\n    return (\n      <div\n        ref={(ele: HTMLDivElement) => {\n          this.ele = ele;\n        }}\n        className={\n          styles.counter +\n          ' ' +\n          this.props.containerStyle +\n          ' ' +\n          (this.props.onClick ? styles.clickable : '') +\n          ' ' +\n          (this.props.count > 0 ? styles.visible : '')\n        }\n        onClick={this.handleClick}\n        data-spec=\"counter-outter\"\n      >\n        <div\n          onMouseEnter={this.handleMouseEnter}\n          onMouseLeave={this.handleMouseLeave}\n          className={this.props.countStyle}\n          data-spec=\"counter-inner\"\n        >\n          {count}\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { createClickHandler } from 'utils';\n\nimport styles from './TitleBar.module.scss';\nimport { fakePropType } from 'config/ConfigProvider';\nimport i18n from 'config/i18n';\n\nexport interface TitleBarProps {\n  title: string;\n  onRemoval(event: React.MouseEvent<HTMLElement>): any;\n  __className?: string;\n  showRemoval?: boolean;\n  showMove?: boolean;\n  onMoveUp?(event: React.MouseEvent<HTMLElement>): any;\n  shouldCancelClick?: () => boolean;\n}\n\ninterface TitleBarState {\n  confirmingRemoval: boolean;\n}\n\nexport const confirmationTime = 2000;\n\nexport const titlebarContainerSpecId = 'titlebar-container';\nexport const titlebarSpecId = 'titlebar';\nexport const moveIconSpecId = 'move-icon';\nexport const moveSpecId = 'move';\nexport const removeIconSpecId = 'remove-icon';\nexport const confirmationSpecId = 'confirmation';\nexport const confirmRemovalSpecId = 'confirm-removal';\n\n/**\n * Simple title bar with confirmation removal\n */\nexport default class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\n  private confirmationTimeout: number;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: TitleBarProps) {\n    super(props);\n\n    this.state = {\n      confirmingRemoval: false\n    };\n\n    this.handleConfirmRemoval = this.handleConfirmRemoval.bind(this);\n  }\n\n  public componentWillUnmount(): void {\n    if (this.confirmationTimeout) {\n      window.clearTimeout(this.confirmationTimeout);\n    }\n  }\n\n  public handleMouseUpCapture(event: React.MouseEvent<HTMLElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  public handleConfirmRemoval(event: React.MouseEvent<HTMLElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    this.setState({\n      confirmingRemoval: true\n    });\n\n    this.confirmationTimeout = window.setTimeout(\n      () =>\n        this.setState({\n          confirmingRemoval: false\n        }),\n      confirmationTime\n    );\n  }\n\n  private getMoveArrow(): JSX.Element {\n    let moveArrow: JSX.Element = null;\n\n    if (this.props.showMove && this.context.config.mutable) {\n      moveArrow = (\n        <div\n          className={styles.up_button}\n          {...createClickHandler(\n            this.props.onMoveUp,\n            this.props.shouldCancelClick,\n            this.handleMouseUpCapture\n          )}\n          data-testid={moveIconSpecId}\n        >\n          <span className=\"fe-arrow-up\" />\n        </div>\n      );\n    } else {\n      moveArrow = <div className={styles.up_button} data-spec={moveSpecId} />;\n    }\n\n    return moveArrow;\n  }\n\n  private getRemove(): JSX.Element {\n    let remove: JSX.Element = (\n      <div className={styles.remove_button} data-testid={removeIconSpecId}></div>\n    );\n\n    if (this.props.showRemoval && this.context.config.mutable) {\n      remove = (\n        <div\n          className={styles.remove_button}\n          {...createClickHandler(\n            this.handleConfirmRemoval,\n            this.props.shouldCancelClick,\n            this.handleMouseUpCapture\n          )}\n          data-testid={removeIconSpecId}\n        >\n          <span className=\"fe-x\" />\n        </div>\n      );\n    }\n\n    return remove;\n  }\n\n  private getConfirmationEl(): JSX.Element {\n    let confirmation: JSX.Element;\n\n    if (this.state.confirmingRemoval && this.context.config.mutable) {\n      confirmation = (\n        <div className={styles.remove_confirm} data-spec={confirmationSpecId}>\n          <div className={styles.up_button} data-spec={moveSpecId} />\n          <div className={styles.titletext}>{i18n.t('removal_confirmation', 'Remove?')}</div>\n          <div\n            className={styles.remove_button}\n            {...createClickHandler(\n              this.props.onRemoval,\n              this.props.shouldCancelClick,\n              this.handleMouseUpCapture\n            )}\n            data-testid={confirmRemovalSpecId}\n          >\n            <span className=\"fe-x\" />\n          </div>\n        </div>\n      );\n    }\n\n    return confirmation;\n  }\n\n  public render(): JSX.Element {\n    const confirmation: JSX.Element = this.getConfirmationEl();\n    const moveArrow: JSX.Element = this.getMoveArrow();\n    const remove: JSX.Element = this.getRemove();\n    return (\n      <div className={styles.titlebar} data-spec={titlebarContainerSpecId}>\n        <div className={`${this.props.__className} ${styles.normal}`} data-spec={titlebarSpecId}>\n          {moveArrow}\n          <div className={styles.titletext}>{this.props.title}</div>\n          {remove}\n        </div>\n        {confirmation}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './MountScroll.module.scss';\n\nconst cx: any = classNames.bind(styles);\n\ninterface MountScrollProps {\n  pulseAfterScroll?: boolean;\n}\n\ninterface MountScrollState {\n  pulse: boolean;\n}\n\nexport default class MountScroll extends React.Component<MountScrollProps, MountScrollState> {\n  private ele!: HTMLDivElement;\n  private handleScroll: () => void;\n\n  constructor(props: MountScrollProps) {\n    super(props);\n\n    this.state = {\n      pulse: false\n    };\n  }\n\n  public componentDidMount(): void {\n    const handleScrollCompleted = this.handleScrollCompleted.bind(this);\n\n    let timer: number = null;\n    this.handleScroll = () => {\n      if (timer !== null) {\n        window.clearTimeout(timer);\n      }\n      timer = window.setTimeout(() => {\n        handleScrollCompleted();\n        window.removeEventListener('scroll', this.handleScroll);\n      }, 50);\n    };\n\n    window.addEventListener('scroll', this.handleScroll);\n    this.handleScrollIntoView();\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  private handleScrollCompleted(): void {\n    this.setState({ pulse: true });\n  }\n\n  private handleScrollIntoView(): void {\n    if (!!this.ele) {\n      const scrollTo = this.ele.getBoundingClientRect().top - 200 + window.scrollY;\n\n      if (scrollTo !== window.scrollY) {\n        const atBottom = window.innerHeight + window.scrollY >= document.body.scrollHeight - 2;\n        if (atBottom && scrollTo > window.scrollY) {\n          this.handleScrollCompleted();\n        } else {\n          window.setTimeout(() => {\n            window.scrollTo({\n              top: scrollTo,\n              behavior: 'smooth'\n            });\n          }, 0);\n        }\n      } else {\n        this.handleScrollCompleted();\n      }\n    }\n  }\n\n  public render(): JSX.Element | null {\n    const classes = cx({\n      [styles.wrapper]: true,\n      [styles.pulse]: this.state.pulse\n    });\n\n    return (\n      <div\n        className={classes}\n        ref={(ele: HTMLDivElement) => {\n          this.ele = ele;\n        }}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport shared from 'components/shared.module.scss';\nimport TitleBar from 'components/titlebar/TitleBar';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport { Action, AnyAction, Endpoints, LocalizationMap, FlowIssue } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Asset, RenderNode, AssetStore } from 'store/flowContext';\nimport AppState from 'store/state';\nimport {\n  ActionAC,\n  DispatchWithState,\n  moveActionUp,\n  OnOpenNodeEditor,\n  onOpenNodeEditor,\n  removeAction\n} from 'store/thunks';\nimport { createClickHandler, getLocalization } from 'utils';\n\nimport styles from './Action.module.scss';\nimport { hasIssues } from 'components/flow/helpers';\nimport MountScroll from 'components/mountscroll/MountScroll';\n\nexport interface ActionWrapperPassedProps {\n  first: boolean;\n  action: AnyAction;\n  localization: LocalizationMap;\n  selected: boolean;\n  issues: FlowIssue[];\n  render: (action: AnyAction, endpoints: Endpoints) => React.ReactNode;\n}\n\nexport interface ActionWrapperStoreProps {\n  assetStore: AssetStore;\n  renderNode: RenderNode;\n  language: Asset;\n  translating: boolean;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  removeAction: ActionAC;\n  moveActionUp: ActionAC;\n  scrollToAction: string;\n}\n\nexport type ActionWrapperProps = ActionWrapperPassedProps & ActionWrapperStoreProps;\n\nexport const actionContainerSpecId = 'action-container';\nexport const actionOverlaySpecId = 'action-overlay';\nexport const actionInteractiveDivSpecId = 'interactive-div';\nexport const actionBodySpecId = 'action-body';\n\nconst cx: any = classNames.bind({ ...shared, ...styles });\n\n// Note: this needs to be a ComponentClass in order to work w/ react-flip-move\nexport class ActionWrapper extends React.Component<ActionWrapperProps> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: ActionWrapperProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleActionClicked(event: React.MouseEvent<HTMLElement>): void {\n    const target = event.target as any;\n\n    const showAdvanced =\n      target && target.attributes && target.getAttribute('data-advanced') === 'true';\n\n    this.props.onOpenNodeEditor({\n      originalNode: this.props.renderNode,\n      originalAction: this.props.action,\n      showAdvanced\n    });\n  }\n\n  public handleRemoval(event: React.MouseEvent<HTMLDivElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.props.removeAction(this.props.renderNode.node.uuid, this.props.action);\n  }\n\n  public handleMoveUp(event: React.MouseEvent<HTMLDivElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.props.moveActionUp(this.props.renderNode.node.uuid, this.props.action);\n  }\n\n  public getAction(): Action {\n    // if we are translating, us our localized version\n    if (this.props.translating) {\n      const localization = getLocalization(\n        this.props.action,\n        this.props.localization,\n        this.props.language\n      );\n      return localization.getObject() as AnyAction;\n    }\n\n    return this.props.action;\n  }\n\n  private getClasses(): string {\n    const localizedKeys = [];\n    let missingLocalization = false;\n\n    if (this.props.translating) {\n      if (\n        this.props.action.type === Types.send_msg ||\n        this.props.action.type === Types.send_broadcast ||\n        this.props.action.type === Types.say_msg\n      ) {\n        localizedKeys.push('text');\n      }\n\n      if (this.props.action.type === Types.send_email) {\n        localizedKeys.push('subject');\n      }\n\n      if (localizedKeys.length !== 0) {\n        const localization = getLocalization(\n          this.props.action,\n          this.props.localization,\n          this.props.language\n        );\n\n        if (localization.isLocalized()) {\n          for (const key of localizedKeys) {\n            if (!(key in localization.localizedKeys)) {\n              missingLocalization = true;\n              break;\n            }\n          }\n        } else {\n          missingLocalization = true;\n        }\n      }\n    }\n\n    const notLocalizable = this.props.translating && localizedKeys.length === 0;\n\n    return cx({\n      [styles.action]: true,\n      [styles.has_router]:\n        this.props.renderNode.node.hasOwnProperty('router') &&\n        this.props.renderNode.node.router !== null,\n      [styles.translating]: this.props.translating,\n      [styles.not_localizable]: notLocalizable,\n      [styles.missing_localization]: missingLocalization,\n      [styles.localized]: !notLocalizable && !missingLocalization\n    });\n  }\n\n  public render(): JSX.Element {\n    const { name } = getTypeConfig(this.props.action.type);\n\n    const classes = this.getClasses();\n    const actionToInject = this.getAction();\n\n    let titleBarClass = (shared as any)[this.props.action.type] || shared.missing;\n    const actionClass = (styles as any)[this.props.action.type] || styles.missing;\n    const showRemoval = !this.props.translating;\n    const showMove = !this.props.first && !this.props.translating;\n\n    if (hasIssues(this.props.issues, this.props.translating, this.props.language)) {\n      titleBarClass = shared.missing;\n    }\n\n    const events = this.context.config.mutable\n      ? createClickHandler(this.handleActionClicked, () => this.props.selected)\n      : {};\n\n    const body = (\n      <>\n        <TitleBar\n          __className={titleBarClass}\n          title={name}\n          onRemoval={this.handleRemoval}\n          showRemoval={showRemoval}\n          showMove={showMove}\n          onMoveUp={this.handleMoveUp}\n          shouldCancelClick={() => this.props.selected}\n        />\n        <div className={styles.body + ' ' + actionClass} data-spec={actionBodySpecId}>\n          {this.props.render(actionToInject, this.context.config.endpoints)}\n        </div>\n      </>\n    );\n    return (\n      <div\n        id={`action-${this.props.action.uuid}`}\n        className={classes}\n        data-spec={actionContainerSpecId}\n      >\n        <div className={styles.overlay} data-spec={actionOverlaySpecId} />\n        <div {...events} data-spec={actionInteractiveDivSpecId}>\n          {this.props.scrollToAction && this.props.scrollToAction === this.props.action.uuid ? (\n            <MountScroll pulseAfterScroll={true}>{body}</MountScroll>\n          ) : (\n            body\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: {\n    assetStore,\n    definition: { localization }\n  },\n  editorState: { language, translating, scrollToAction }\n}: AppState) => ({\n  scrollToAction,\n  assetStore,\n  language,\n  translating,\n  localization\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      onOpenNodeEditor,\n      removeAction,\n      moveActionUp\n    },\n    dispatch\n  );\n\nconst ConnectedActionWrapper = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { forwardRef: true }\n)(ActionWrapper);\n\nexport default ConnectedActionWrapper;\n","import * as React from 'react';\n\nimport styles from './DragHelper.module.scss';\nimport { Trans } from 'react-i18next';\n\ninterface DragHelperState {\n  visible: boolean;\n}\n\nexport default class DragHelper extends React.Component<{}, DragHelperState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n  }\n\n  public componentDidMount(): void {\n    window.setTimeout(() => {\n      if (!this.state.visible) {\n        this.setState({ visible: true });\n      }\n    }, 100);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={styles.drag_helper + ' ' + (this.state.visible ? styles.visible : '')}>\n        <div className={styles.arrow}>\n          <div className={styles.tail} />\n          <div className={styles.head} />\n        </div>\n        <div className={styles.help_text}>\n          <Trans i18nKey=\"drag_helper\">\n            To connect nodes, <span className={styles.bold}>drag</span> from the red circle.\n          </Trans>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Exit } from 'flowTypes';\n\nexport const getExitActivityKey = (exit: Exit) => {\n  return exit.uuid + ':' + exit.destination_uuid;\n};\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport interface PortalProps {\n  id?: string;\n}\n\nexport class Portal extends React.Component<PortalProps> {\n  private el: HTMLDivElement = null;\n  private portalRoot: HTMLElement = null;\n\n  constructor(props: PortalProps) {\n    super(props);\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    window.setTimeout(() => {\n      this.portalRoot = document.getElementById(this.props.id || 'portal-root');\n      if (this.portalRoot) {\n        this.portalRoot.appendChild(this.el);\n      }\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    if (this.portalRoot) {\n      this.el.remove();\n    }\n  }\n\n  componentDidUpdate(prevProps: PortalProps) {\n    if (this.props.id && prevProps.id !== this.props.id) {\n      window.setTimeout(() => {\n        this.portalRoot = document.getElementById(this.props.id || 'portal-root');\n        this.portalRoot.appendChild(this.el);\n      }, 100);\n    }\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.el);\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport Counter from 'components/counter/Counter';\nimport DragHelper from 'components/draghelper/DragHelper';\nimport { getExitActivityKey } from 'components/flow/exit/helpers';\nimport Loading from 'components/loading/Loading';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Cancel, getRecentMessages } from 'external';\nimport { Category, Exit, FlowNode, LocalizationMap } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { RecentMessage } from 'store/editor';\nimport { Asset } from 'store/flowContext';\nimport AppState from 'store/state';\nimport { DisconnectExit, disconnectExit, DispatchWithState } from 'store/thunks';\nimport { createClickHandler, getLocalization, renderIf } from 'utils';\n\nimport * as moment from 'moment';\nimport styles from './Exit.module.scss';\nimport { Portal } from 'components/Portal';\n\nexport interface RenderCategory extends Category {\n  missing: boolean;\n}\n\nexport interface ExitPassedProps {\n  exit: Exit;\n  categories: Category[];\n  node: FlowNode;\n  showDragHelper: boolean;\n  plumberMakeSource: (id: string) => void;\n  plumberRemove: (id: string) => void;\n  plumberConnectExit: (node: FlowNode, exit: Exit) => void;\n  plumberUpdateClass: (\n    node: FlowNode,\n    exit: Exit,\n    className: string,\n    confirmDelete: boolean\n  ) => void;\n}\n\nexport interface ExitStoreProps {\n  translating: boolean;\n  dragging: boolean;\n  language: Asset;\n  localization: LocalizationMap;\n  disconnectExit: DisconnectExit;\n  segmentCount: number;\n  recentMessages: RecentMessage[];\n}\n\nexport type ExitProps = ExitPassedProps & ExitStoreProps;\n\nexport interface ExitState {\n  confirmDelete: boolean;\n  recentMessages: RecentMessage[];\n  fetchingRecentMessages: boolean;\n  showDragHelper: boolean;\n}\n\nconst cx: any = classNames.bind(styles);\nexport class ExitComp extends React.PureComponent<ExitProps, ExitState> {\n  private timeout: number;\n  private hideDragHelper: number;\n  private pendingMessageFetch: Cancel = {};\n  private ele: HTMLDivElement;\n\n  constructor(props: ExitProps) {\n    super(props);\n\n    this.state = {\n      confirmDelete: false,\n      recentMessages: null,\n      fetchingRecentMessages: false,\n      showDragHelper: props.showDragHelper\n    };\n\n    bindCallbacks(this, {\n      include: [/^on/, /^get/, /^handle/, /^connect/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public getSourceId(): string {\n    return `${this.props.node.uuid}:${this.props.exit.uuid}`;\n  }\n\n  public handleDisconnect(): void {\n    this.setState({ showDragHelper: false });\n  }\n\n  public componentDidMount(): void {\n    this.props.plumberMakeSource(this.getSourceId());\n\n    if (this.ele) {\n      this.ele.addEventListener('disconnect', this.handleDisconnect);\n    }\n\n    if (this.props.exit.destination_uuid) {\n      this.connect();\n    }\n  }\n\n  public componentDidUpdate(prevProps: ExitProps): void {\n    if (this.props.exit.destination_uuid !== prevProps.exit.destination_uuid) {\n      this.connect();\n      if (this.state.confirmDelete) {\n        this.setState({ confirmDelete: false });\n      }\n    }\n\n    if (this.state.showDragHelper && prevProps.showDragHelper && !this.props.showDragHelper) {\n      this.setState({ showDragHelper: false });\n    }\n\n    this.props.plumberUpdateClass(\n      this.props.node,\n      this.props.exit,\n      'confirm-delete',\n      this.state.confirmDelete\n    );\n  }\n\n  public componentWillUnmount(): void {\n    if (this.props.exit.destination_uuid) {\n      this.props.plumberRemove(this.getSourceId());\n    }\n\n    if (this.ele) {\n      this.ele.removeEventListener('disconnect', this.handleDisconnect);\n    }\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLElement>): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  private handleClick(event: React.MouseEvent<HTMLElement>): void {\n    if (!this.props.translating) {\n      if (this.props.exit.destination_uuid) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.setState(\n          {\n            confirmDelete: true\n          },\n          () => {\n            this.timeout = window.setTimeout(() => {\n              this.setState({\n                confirmDelete: false\n              });\n            }, 2000);\n          }\n        );\n      } else {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!this.state.showDragHelper) {\n          this.setState({ showDragHelper: true }, () => {\n            if (this.hideDragHelper) {\n              window.clearTimeout(this.hideDragHelper);\n            }\n            this.hideDragHelper = window.setTimeout(() => {\n              this.setState({ showDragHelper: false });\n            }, 3000);\n          });\n        }\n      }\n    }\n  }\n\n  private onDisconnect(event: React.MouseEvent<HTMLElement>): void {\n    if (this.timeout) {\n      window.clearTimeout(this.timeout);\n    }\n\n    if (this.hideDragHelper) {\n      window.clearTimeout(this.hideDragHelper);\n    }\n\n    this.props.disconnectExit(this.props.node.uuid, this.props.exit.uuid);\n  }\n\n  private connect(): void {\n    this.props.plumberConnectExit(this.props.node, this.props.exit);\n  }\n\n  private handleShowRecentMessages(): void {\n    if (this.props.recentMessages) {\n      this.setState({ recentMessages: this.props.recentMessages });\n      return;\n    }\n\n    this.setState({ fetchingRecentMessages: true }, () => {\n      getRecentMessages(\n        this.context.config.endpoints.recents,\n        this.props.exit,\n        this.pendingMessageFetch\n      )\n        .then((recentMessages: RecentMessage[]) => {\n          this.setState({ recentMessages, fetchingRecentMessages: false });\n        })\n        .catch(() => {\n          // we may have been canceled\n        });\n    });\n  }\n\n  private handleHideRecentMessages(): void {\n    if (this.pendingMessageFetch.reject) {\n      this.pendingMessageFetch.reject();\n      this.pendingMessageFetch = {};\n    }\n\n    this.setState({ fetchingRecentMessages: false, recentMessages: null });\n  }\n\n  private getSegmentCount(): JSX.Element {\n    // Only exits with a destination have activity\n    if (this.props.segmentCount > 0) {\n      const key = `${this.props.exit.uuid}-label`;\n      return (\n        <div style={{ position: 'absolute', bottom: '-25px' }}>\n          <Counter\n            key={key}\n            count={this.props.segmentCount}\n            containerStyle={styles.activity}\n            countStyle={styles.count}\n            keepVisible={false}\n            onMouseEnter={this.handleShowRecentMessages}\n            onMouseLeave={this.handleHideRecentMessages}\n          />\n        </div>\n      );\n    }\n  }\n\n  public getName(): { name: string; localized?: boolean } {\n    if (this.props.translating) {\n      let name: string = '';\n      let delim: string = '';\n\n      let localized: boolean = false;\n\n      this.props.categories.forEach((category: Category) => {\n        const localization = getLocalization(\n          category,\n          this.props.localization,\n          this.props.language\n        );\n\n        localized = localized || 'name' in localization.localizedKeys;\n        const localizedObject = localization.getObject() as Category;\n        name += delim + localizedObject.name;\n        delim = ', ';\n      });\n\n      return { name, localized };\n    } else {\n      const names: string[] = [];\n      this.props.categories.forEach((cat: Category) => {\n        names.push(cat.name);\n      });\n\n      return {\n        name: names.join(', ')\n      };\n    }\n  }\n\n  private getRecentMessages(): JSX.Element {\n    if (this.state.fetchingRecentMessages || this.state.recentMessages !== null) {\n      const recentMessages = this.state.recentMessages || [];\n      const hasRecents = recentMessages.length !== 0;\n\n      const recentStyles = [styles.recent_messages];\n\n      let title = 'Recent Messages';\n      if (!hasRecents && !this.state.fetchingRecentMessages) {\n        title = 'No Recent Messages';\n        recentStyles.push(styles.no_recents);\n      }\n\n      const canvas = document.getElementById('canvas-container');\n      let left = 0;\n      let top = 0;\n\n      if (canvas) {\n        const canvasBounds = canvas.getBoundingClientRect();\n        const canvasOffset = canvasBounds.top + window.scrollY;\n        const rect = this.ele.getBoundingClientRect();\n        left = rect.left + window.scrollX + 5;\n        top = rect.top + window.scrollY - canvasOffset + 30;\n      }\n\n      return (\n        <Portal id=\"activity_recent_messages\">\n          <div className={recentStyles.join(' ')} style={{ position: 'absolute', left, top }}>\n            <div className={styles.title}>{title}</div>\n            {recentMessages.map((recentMessage: RecentMessage, idx: number) => (\n              <div key={'recent_' + idx} className={styles.message}>\n                <div className={styles.text}>{recentMessage.text}</div>\n                <div className={styles.sent}>{moment.utc(recentMessage.sent).fromNow()}</div>\n              </div>\n            ))}\n            {this.state.recentMessages === null ? (\n              <div className={styles.loading}>\n                <Loading size={10} units={6} color=\"#999999\" />\n              </div>\n            ) : null}\n          </div>\n        </Portal>\n      );\n    }\n    return null;\n  }\n\n  public render(): JSX.Element {\n    const { name, localized } = this.getName();\n\n    const nameStyle = name ? styles.name : '';\n    const connected = this.props.exit.destination_uuid ? ' jtk-connected' : '';\n    const dragNodeClasses = cx(styles.endpoint, connected);\n    const confirmDelete =\n      this.state.confirmDelete && this.props.exit.hasOwnProperty('destination_uuid');\n    const confirm: JSX.Element =\n      confirmDelete && this.context.config.mutable ? (\n        <div\n          className={styles.confirm_x + ' fe-x'}\n          {...createClickHandler(this.onDisconnect, () => this.props.dragging)}\n        />\n      ) : null;\n    const exitClasses: string = cx({\n      [styles.exit]: true,\n      'plumb-exit': true,\n      [styles.translating]: this.props.translating,\n      [styles.unnamed_exit]: name == null,\n      [styles.missing_localization]: name && this.props.translating && !localized,\n      [styles.confirm_delete]: confirmDelete\n    });\n\n    const activity = this.getSegmentCount();\n    const recents = this.getRecentMessages();\n\n    const events = this.context.config.mutable\n      ? createClickHandler(\n          this.handleClick,\n          () => {\n            return this.props.dragging;\n          },\n          this.handleMouseDown\n        )\n      : {};\n\n    return (\n      <div className={exitClasses}>\n        {name ? <div className={nameStyle}>{name}</div> : null}\n        <div\n          ref={(ref: HTMLDivElement) => (this.ele = ref)}\n          {...events}\n          id={`${this.props.node.uuid}:${this.props.exit.uuid}`}\n          className={dragNodeClasses}\n        >\n          {confirm}\n        </div>\n        {activity}\n        {recents}\n        {renderIf(this.state.showDragHelper)(<DragHelper />)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (\n  {\n    flowContext: {\n      definition: { localization }\n    },\n    editorState: { translating, language, dragActive, activity }\n  }: AppState,\n  props: ExitPassedProps\n) => {\n  // see if we have some passed in (simulated) messages\n  let recentMessages: RecentMessage[] = null;\n  const key = getExitActivityKey(props.exit);\n  if (key in (activity.recentMessages || {})) {\n    recentMessages = activity.recentMessages[key];\n  }\n  const segmentCount = activity.segments[getExitActivityKey(props.exit)] || 0;\n\n  return {\n    dragging: dragActive,\n    segmentCount,\n    translating,\n    language,\n    localization,\n    recentMessages\n  };\n};\n\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators({ disconnectExit }, dispatch);\n\nconst ConnectedExit = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExitComp);\n\nexport default ConnectedExit;\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport Counter from 'components/counter/Counter';\nimport ActionWrapper from 'components/flow/actions/action/Action';\nimport ExitComp from 'components/flow/exit/Exit';\nimport {\n  getCategoriesForExit,\n  getResultName,\n  getVisibleActions,\n  filterIssuesForAction\n} from 'components/flow/node/helpers';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport shared from 'components/shared.module.scss';\nimport TitleBar from 'components/titlebar/TitleBar';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { getType, getTypeConfig } from 'config/typeConfigs';\nimport { AnyAction, Exit, FlowNode, FlowIssue } from 'flowTypes';\nimport * as React from 'react';\nimport FlipMove from 'react-flip-move';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { DebugState } from 'store/editor';\nimport { AssetMap, RenderNode, Asset } from 'store/flowContext';\nimport AppState from 'store/state';\nimport {\n  DispatchWithState,\n  MergeEditorState,\n  mergeEditorState,\n  OnAddToNode,\n  onAddToNode,\n  OnOpenNodeEditor,\n  onOpenNodeEditor,\n  RemoveNode,\n  removeNode\n} from 'store/thunks';\nimport { ClickHandler, createClickHandler } from 'utils';\n\nimport styles from './Node.module.scss';\nimport { hasIssues } from '../helpers';\nimport MountScroll from 'components/mountscroll/MountScroll';\n\nexport interface NodePassedProps {\n  nodeUUID: string;\n  plumberMakeTarget: (id: string) => void;\n  plumberRecalculate: (id: string) => void;\n  plumberMakeSource: (id: string) => void;\n  plumberRemove: (id: string) => void;\n  plumberConnectExit: (node: FlowNode, exit: Exit) => void;\n  plumberUpdateClass: (\n    node: FlowNode,\n    exit: Exit,\n    className: string,\n    confirmDelete: boolean\n  ) => void;\n  startingNode: boolean;\n  onlyNode: boolean;\n  selected: boolean;\n  ghostRef?: any;\n  ghost?: boolean;\n}\n\nexport interface NodeStoreProps {\n  results: AssetMap;\n  language: Asset;\n  languages: AssetMap;\n  activeCount: number;\n  translating: boolean;\n  simulating: boolean;\n  debug: DebugState;\n  renderNode: RenderNode;\n  issues: FlowIssue[];\n  onAddToNode: OnAddToNode;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  removeNode: RemoveNode;\n  mergeEditorState: MergeEditorState;\n  scrollToNode: string;\n  scrollToAction: string;\n}\n\nexport type NodeProps = NodePassedProps & NodeStoreProps;\n\nconst cx: any = classNames.bind({ ...shared, ...styles });\n\nconst EMPTY: any[] = [];\n/**\n * A single node in the rendered flow\n */\nexport class NodeComp extends React.PureComponent<NodeProps> {\n  public ele: HTMLDivElement;\n  private firstAction: any;\n  private clicking: boolean;\n  private events: ClickHandler;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: NodeProps, context: any) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/Ref$/, /^on/, /^get/, /^handle/]\n    });\n\n    this.events = context.config.mutable\n      ? createClickHandler(this.onClick, this.handleShouldCancelClick)\n      : {};\n  }\n\n  private handleShouldCancelClick(): boolean {\n    return this.props.selected;\n  }\n\n  private eleRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.ele = ref);\n  }\n\n  private getGhostListener(): any {\n    return (e: MouseEvent) => {\n      if (this.ele) {\n        let canvas = this.ele.parentElement;\n        if (this.ele.parentElement.parentElement) {\n          canvas = this.ele.parentElement.parentElement;\n        }\n\n        const canvasBounds = canvas.getBoundingClientRect();\n\n        // move our ghost node into position\n        const width = this.ele.getBoundingClientRect().width;\n        const left = e.pageX - width / 2 - 15 - canvasBounds.left;\n        const top = e.pageY - canvasBounds.top - window.scrollY;\n        const style = this.ele.style;\n        style.left = left + 'px';\n        style.top = top + 'px';\n\n        // Hide ourselves if there's a drop target\n        style.visibility = document.querySelector('.plumb-drop-hover') ? 'hidden' : 'visible';\n      }\n    };\n  }\n\n  public componentDidMount(): void {\n    // Make ourselves a target\n    this.props.plumberMakeTarget(this.props.renderNode.node.uuid);\n\n    // Move our drag node around as necessary\n    if (this.props.ghost) {\n      // We store our listener on the window so flow can remove it\n      // this is a bit hacky but allows us to remove our dependency on jquery\n      // TODO: rework ghost node to manage its location like other nodes\n      const ghostListener: any = this.getGhostListener();\n      (window as any).ghostListener = ghostListener;\n      document.addEventListener('mousemove', ghostListener);\n    }\n  }\n\n  public componentDidUpdate(prevProps: any): void {\n    // traceUpdate(this, prevProps);\n\n    // when our exits change, we need to recalculate the endpoints\n    if (!this.props.ghost) {\n      try {\n        this.props.plumberRecalculate(this.props.renderNode.node.uuid);\n        for (const exit of this.props.renderNode.node.exits) {\n          this.props.plumberRecalculate(this.props.renderNode.node.uuid + ':' + exit.uuid);\n        }\n      } catch (error) {\n        // console.log(error);\n      }\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.props.plumberRemove(this.props.renderNode.node.uuid);\n  }\n\n  /* istanbul ignore next */\n  private handleUUIDClicked(event: React.MouseEvent<HTMLElement>): void {\n    const selection = window.getSelection();\n    const range = document.createRange();\n    range.selectNodeContents(event.currentTarget);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    document.execCommand('copy');\n    selection.removeAllRanges();\n    console.log(event.currentTarget.textContent + ' copied to clipboard.');\n  }\n\n  private handleAddToNode(): void {\n    this.props.onAddToNode(this.props.renderNode.node);\n  }\n\n  // Applies only to router nodes;\n  // ./Action/Action handles click logic for Action nodes.\n  private onClick(event: React.MouseEvent<HTMLElement>): void {\n    this.props.onOpenNodeEditor({\n      originalNode: this.props.renderNode\n    });\n  }\n\n  private handleRemoval(event: React.MouseEvent<HTMLElement>): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.removeNode(this.props.renderNode.node);\n  }\n\n  private getExits(): JSX.Element[] {\n    if (this.props.renderNode.node.exits) {\n      return this.props.renderNode.node.exits.map((exit: Exit, idx: number) => (\n        <ExitComp\n          key={exit.uuid}\n          node={this.props.renderNode.node}\n          categories={getCategoriesForExit(this.props.renderNode, exit)}\n          exit={exit}\n          showDragHelper={this.props.onlyNode && idx === 0}\n          plumberMakeSource={this.props.plumberMakeSource}\n          plumberRemove={this.props.plumberRemove}\n          plumberConnectExit={this.props.plumberConnectExit}\n          plumberUpdateClass={this.props.plumberUpdateClass}\n        />\n      ));\n    }\n    return [];\n  }\n\n  private isSelected(): boolean {\n    return this.props.selected;\n  }\n\n  private isStartNodeVisible(): boolean {\n    return this.props.startingNode;\n  }\n\n  /* istanbul ignore next */\n  private renderDebug(): JSX.Element {\n    if (this.props.debug) {\n      if (this.props.debug.showUUIDs) {\n        return (\n          <span\n            id={`uuid-${this.props.renderNode.node.uuid}`}\n            onClick={this.handleUUIDClicked}\n            className={styles.uuid}\n          >\n            {this.props.renderNode.node.uuid}\n          </span>\n        );\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const actions: JSX.Element[] = [];\n\n    let actionList: JSX.Element = null;\n    if (this.props.renderNode.node.actions) {\n      // Save the first reference off to manage our clicks\n      let firstRef: { ref: (ref: any) => any } | {} = {\n        ref: (ref: any) => (this.firstAction = ref)\n      };\n\n      getVisibleActions(this.props.renderNode).forEach((action: AnyAction, idx: number) => {\n        const actionConfig = getTypeConfig(action.type);\n\n        const issues: FlowIssue[] = filterIssuesForAction(\n          this.props.nodeUUID,\n          action,\n          this.props.issues\n        );\n\n        if (actionConfig.hasOwnProperty('component') && actionConfig.component) {\n          const { component: ActionComponent } = actionConfig;\n          if (actionConfig.massageForDisplay) {\n            actionConfig.massageForDisplay(action);\n          }\n\n          actions.push(\n            <ActionWrapper\n              {...firstRef}\n              key={action.uuid}\n              renderNode={this.props.renderNode}\n              selected={this.props.selected}\n              action={action}\n              first={idx === 0}\n              issues={issues}\n              render={(anyAction: AnyAction) => {\n                return (\n                  <ActionComponent\n                    {...anyAction}\n                    languages={this.props.languages}\n                    issues={issues}\n                  />\n                );\n              }}\n            />\n          );\n        }\n\n        firstRef = {};\n      });\n\n      actionList =\n        actions.length > 0 ? (\n          <FlipMove enterAnimation=\"fade\" leaveAnimation=\"fade\" duration={300} easing=\"ease-out\">\n            {actions}\n          </FlipMove>\n        ) : null;\n    }\n\n    let header: JSX.Element = null;\n    let addActions: JSX.Element = null;\n    let summary: JSX.Element = null;\n\n    // Router node display logic\n    const type = getType(this.props.renderNode);\n    if (type !== Types.execute_actions) {\n      const config = getTypeConfig(type);\n      let title: string = config.name;\n\n      const switchRouter = getSwitchRouter(this.props.renderNode.node);\n      if (switchRouter) {\n        if (type === Types.split_by_contact_field && this.props.renderNode.ui.config.operand.name) {\n          title = `Split by ${this.props.renderNode.ui.config.operand.name}`;\n        }\n      }\n\n      const resultName = getResultName(this.props.renderNode.node);\n      if (resultName) {\n        summary = (\n          <div {...this.events} className={styles.save_result}>\n            <div className={styles.save_as}>Save as </div>\n            <div className={styles.result_name}>{resultName}</div>\n          </div>\n        );\n      }\n\n      if (\n        title === null &&\n        (type === Types.split_by_run_result || type === Types.split_by_run_result_delimited)\n      ) {\n        title = `Split by ${this.props.results[this.props.renderNode.ui.config.operand.id].name}`;\n      }\n\n      if (title === null) {\n        title = config.name;\n      }\n\n      if (!this.props.renderNode.node.actions || !this.props.renderNode.node.actions.length) {\n        // Router headers are introduced here while action headers are introduced in ./Action/Action\n        header = (\n          // Wrap in a relative parent so it honors node clipping\n          <div style={{ position: 'relative' }}>\n            <div {...this.events}>\n              <TitleBar\n                __className={\n                  (shared as any)[\n                    hasIssues(this.props.issues, this.props.translating, this.props.language)\n                      ? 'missing'\n                      : config.type\n                  ]\n                }\n                showRemoval={!this.props.translating}\n                onRemoval={this.handleRemoval}\n                shouldCancelClick={this.handleShouldCancelClick}\n                title={title}\n              />\n            </div>\n          </div>\n        );\n      }\n    } else {\n      // Don't show add actions option if we are translating\n      if (!this.props.translating && this.context.config.mutable) {\n        addActions = (\n          <div\n            className={styles.add}\n            {...createClickHandler(this.handleAddToNode, this.handleShouldCancelClick)}\n          >\n            <span className=\"fe-add\" />\n          </div>\n        );\n      }\n    }\n\n    const exits: JSX.Element[] = this.getExits();\n\n    const classes = cx({\n      'plumb-drag': true,\n      [styles.ghost]: this.props.ghost,\n      [styles.flow_start]: this.isStartNodeVisible(),\n      [styles.selected]: this.isSelected(),\n      [styles.immutable]: !this.context.config.mutable\n    });\n\n    const uuid: JSX.Element = this.renderDebug();\n\n    const body = (\n      <div className={styles.node}>\n        {this.isStartNodeVisible() ? (\n          <div className={styles.flow_start_message}>Flow Start</div>\n        ) : null}\n\n        {uuid}\n        <Counter\n          count={this.props.activeCount}\n          containerStyle={styles.active}\n          countStyle={''}\n          keepVisible={this.props.simulating}\n          onClick={() => {\n            if (this.context.config.onActivityClicked) {\n              this.context.config.onActivityClicked(this.props.nodeUUID, this.props.activeCount);\n            }\n          }}\n        />\n\n        <div className={styles.cropped}>\n          {header}\n          {actionList}\n          {summary}\n        </div>\n\n        <div className={`${styles.exit_table}`}>\n          <div className={styles.exits} {...this.events}>\n            {exits}\n          </div>\n          {addActions}\n        </div>\n      </div>\n    );\n\n    const renderedNode = (\n      <div\n        id={this.props.renderNode.node.uuid}\n        className={`${styles.node_container} ${classes}`}\n        ref={this.eleRef}\n      >\n        {!this.props.scrollToAction &&\n        this.props.scrollToNode &&\n        this.props.scrollToNode === this.props.nodeUUID ? (\n          <MountScroll pulseAfterScroll={true}>{body}</MountScroll>\n        ) : (\n          body\n        )}\n      </div>\n    );\n    return renderedNode;\n  }\n}\n\nconst mapStateToProps = (\n  {\n    flowContext: {\n      nodes,\n      issues,\n      assetStore: {\n        results: { items: results },\n        languages: { items: languages }\n      }\n    },\n    editorState: {\n      translating,\n      debug,\n      ghostNode,\n      simulating,\n      activity,\n      language,\n      scrollToAction,\n      scrollToNode\n    }\n  }: AppState,\n  props: NodePassedProps\n) => {\n  let renderNode: RenderNode = null;\n\n  // if we match our ghost node use that\n  if (ghostNode && ghostNode.node.uuid === props.nodeUUID) {\n    renderNode = ghostNode;\n  }\n\n  // otherwise look up our node from the list\n  else if (props.nodeUUID in nodes) {\n    renderNode = nodes[props.nodeUUID];\n  }\n\n  if (!renderNode) {\n    throw Error(\"Couldn't find node for \" + props.nodeUUID);\n  }\n\n  const activeCount = activity.nodes[props.nodeUUID] || 0;\n\n  // only set our scroll flags if they affect us\n  const scrollNode = scrollToNode && scrollToNode === props.nodeUUID ? scrollToNode : null;\n  const scrollAction = scrollToAction && scrollNode ? scrollToAction : null;\n\n  return {\n    issues: (issues || {})[props.nodeUUID] || EMPTY,\n    results,\n    language,\n    languages,\n    activeCount,\n    translating,\n    debug,\n    renderNode,\n    simulating,\n    scrollToNode: scrollNode,\n    scrollToAction: scrollAction\n  };\n};\n\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      onAddToNode,\n      onOpenNodeEditor,\n      removeNode,\n      mergeEditorState\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { forwardRef: true }\n)(NodeComp);\n","import Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { MediaPlayer } from 'components/mediaplayer/MediaPlayer';\nimport Modal from 'components/modal/Modal';\nimport styles from 'components/simulator/LogEvent.module.scss';\nimport { Types } from 'config/interfaces';\nimport { Flow, Group, Label } from 'flowTypes';\nimport * as React from 'react';\nimport { createUUID, getURNPath } from 'utils';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\n\nconst MAP_THUMB = require('static/images/map.jpg');\n\ninterface MsgProps {\n  text: string;\n  uuid: string;\n  urn: string;\n  attachments?: string[];\n  quick_replies?: string[];\n}\n\ninterface WebRequestLog {\n  url: string;\n  request: string;\n  response: string;\n}\n\ninterface ClassifierIntent {\n  name: string;\n  confidence: number;\n}\n\ninterface ClassifierEntity {\n  value: string;\n  confidence: number;\n}\n\nexport interface EventProps {\n  step_uuid: string;\n  uuid?: string;\n  created_on?: string;\n  type?: string;\n  field?: { key: string; name: string };\n  field_uuid?: string;\n  result_name?: string;\n  text?: string;\n  name?: string;\n  value?: string | { text: string };\n  body?: string;\n  addresses?: string[];\n  to?: string[];\n  subject?: string;\n  url?: string;\n  status?: string;\n  status_code?: number;\n  request?: string;\n  response?: string;\n  resthook?: string;\n  base_language?: string;\n  language?: string;\n  translations?: { [lang: string]: { [text: string]: string } };\n  groups?: Group[];\n  flow?: Flow;\n  groups_added?: Group[];\n  groups_removed?: Group[];\n  labels?: Label[];\n  msg?: MsgProps;\n  http_logs?: WebRequestLog[];\n  extra?: any;\n  urns?: string[];\n  service?: string;\n  classifier?: { uuid: string; name: string };\n  ticketer?: { uuid: string; name: string };\n}\n\ninterface FlowEvent {\n  step_uuid: string;\n  type: string;\n}\n\ninterface AirtimeTransferEvent extends FlowEvent {\n  actual_amount: number;\n  desired_amount: number;\n  currency: string;\n  http_logs: WebRequestLog[];\n  recipient: string;\n  sender: string;\n}\n\ninterface LogEventState {\n  detailsVisible: boolean;\n}\n\nexport enum Direction {\n  MT,\n  MO\n}\n\nconst getStyleForDirection = (direction: Direction): string => {\n  return direction === Direction.MO ? styles.msg_received : styles.send_msg;\n};\n\nconst renderError = (error: string): JSX.Element => {\n  return (\n    <div className={styles.error}>\n      <span>Error: {error}</span>\n    </div>\n  );\n};\n\nconst renderInfo = (info: string): JSX.Element => {\n  // localized text can have html entities, so this isn't as dangerous as it looks\n  return (\n    <div key={info} className={styles.info}>\n      <span dangerouslySetInnerHTML={{ __html: info }} />\n    </div>\n  );\n};\n\nconst renderAttachment = (attachment: string): JSX.Element => {\n  const idx = attachment.indexOf(':');\n  if (idx > -1) {\n    const type = attachment.substr(0, idx);\n    const url = attachment.substr(idx + 1);\n    if (type.startsWith('audio')) {\n      return (\n        <div className={styles.audio_attachment}>\n          <div className={styles.media_player}>\n            <MediaPlayer url={url} />\n          </div>\n          <div className={styles.audio_text}>Audio Recording</div>\n        </div>\n      );\n    } else if (type.startsWith('image')) {\n      return <img src={url} alt=\"Attachment\" />;\n    } else if (type.startsWith('application')) {\n      return (\n        <div\n          onClick={() => {\n            window.open(url);\n          }}\n          style={{\n            cursor: 'pointer',\n            textDecoration: 'none',\n            padding: '10px 12px',\n            background: '#e6e6e6',\n            color: '#666'\n          }}\n        >\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <div\n              className=\"fe-document-file-pdf\"\n              style={{\n                textDecoration: 'none',\n                fontSize: '20px'\n              }}\n            />\n            <div style={{ marginLeft: '5px', lineHeight: '16px' }}>\n              {i18n.t('document', 'Document')}\n            </div>\n          </div>\n        </div>\n      );\n    } else if (type.startsWith('geo')) {\n      return <img src={MAP_THUMB} alt=\"Attachment\" />;\n    } else if (type.startsWith('video')) {\n      return (\n        <div className={styles.video_attachment}>\n          <video controls={true} src={url} />\n        </div>\n      );\n    }\n  }\n  return null;\n};\n\nconst renderMessage = (text: string, attachments: string[], direction: Direction): JSX.Element => {\n  const attaches = attachments || [];\n\n  return (\n    <div className={getStyleForDirection(direction)}>\n      {attaches.map((attachment: string) => (\n        <div key={text + attachment}>{renderAttachment(attachment)}</div>\n      ))}\n      {text\n        ? text\n            .trim()\n            .split('\\n')\n            .map((item, key) => {\n              return (\n                <div key={createUUID()} className={styles.msg_text}>\n                  {item}\n                </div>\n              );\n            })\n        : null}\n    </div>\n  );\n};\n\n/**\n * Viewer for log events\n */\nexport default class LogEvent extends React.Component<EventProps, LogEventState> {\n  constructor(props: EventProps) {\n    super(props);\n    this.state = {\n      detailsVisible: false\n    };\n\n    this.showDetails = this.showDetails.bind(this);\n    this.getButtons = this.getButtons.bind(this);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: {\n        name: 'Ok',\n        onClick: () => {\n          this.setState({ detailsVisible: false });\n        }\n      }\n    };\n  }\n\n  private showDetails(): void {\n    this.setState({ detailsVisible: true });\n  }\n\n  private renderGroupsChanged(): JSX.Element {\n    let parts: string[] = [];\n    if (this.props.groups_added) {\n      const info = i18n.t('simulator.added_to_group', 'Added to ');\n      parts.push(info + this.renderValueList(this.props.groups_added.map(group => group.name)));\n    }\n    if (this.props.groups_removed) {\n      const info = i18n.t('simulator.removed_from_group', 'Removed from ');\n      parts.push(info + this.renderValueList(this.props.groups_removed.map(group => group.name)));\n    }\n\n    return renderInfo(parts.join('. '));\n  }\n\n  private renderLabelsAdded(): JSX.Element {\n    let info = i18n.t('simulator.input_labels_added', 'Message labeled with ');\n\n    return renderInfo(info + this.renderValueList(this.props.labels.map(label => label.name)));\n  }\n\n  private renderEmailSent(): JSX.Element {\n    const recipients = this.props.to || this.props.addresses;\n    return this.renderClickable(\n      <div className={styles.info + ' ' + styles.email}>\n        <Trans\n          i18nKey=\"simulator.sent_email.summary\"\n          values={{ recipients: this.renderValueList(recipients), subject: this.props.subject }}\n        >\n          Sent email to [[recipients]] with subject \"[[subject]]\"\n        </Trans>\n      </div>,\n      <Dialog\n        title={i18n.t('simulator.sent_email.title', 'Email Details')}\n        headerClass={Types.send_email}\n        buttons={this.getButtons()}\n        noPadding={true}\n      >\n        <div className={styles.email_details}>\n          <div className={styles.to}>\n            {i18n.t('email.to', 'To')}: {this.renderValueList(recipients)}\n          </div>\n          <div className={styles.subject}>\n            {i18n.t('email.subject', 'Subject')}: {this.props.subject}\n          </div>\n          <div className={styles.body}>{this.props.body}</div>\n        </div>\n      </Dialog>\n    );\n  }\n\n  private renderHTTPRequest(headerClass: Types, log: WebRequestLog): JSX.Element {\n    return this.renderClickable(\n      <div className={styles.info + ' ' + styles.webhook}>\n        <span>Called {log.url}</span>\n      </div>,\n      <Dialog\n        title={i18n.t('simulator.httplog_dialog', 'HTTP Request Details')}\n        headerClass={headerClass}\n        buttons={this.getButtons()}\n        noPadding={true}\n      >\n        <div className={styles.webhook_details}>\n          <div className={''}>{log.request}</div>\n          <div className={styles.response}>{log.response}</div>\n        </div>\n      </Dialog>\n    );\n  }\n\n  private renderWebhook(headerClass: Types): JSX.Element {\n    if (this.props.http_logs) {\n      return (\n        <>\n          {this.props.http_logs.map((log: WebRequestLog) => {\n            return this.renderHTTPRequest(headerClass, log);\n          })}\n        </>\n      );\n    }\n    if (this.props.url) {\n      return this.renderHTTPRequest(headerClass, this.props as WebRequestLog);\n    }\n  }\n\n  private renderClickable(element: JSX.Element, details: JSX.Element): JSX.Element {\n    return (\n      <div key={this.props.step_uuid}>\n        <div className={styles.has_detail} onClick={this.showDetails}>\n          {element}\n        </div>\n        <Modal show={this.state.detailsVisible}>\n          <div className={styles.event_viewer}>{details}</div>\n        </Modal>\n      </div>\n    );\n  }\n\n  private renderClassification(): JSX.Element {\n    return (\n      <table className={styles.classification}>\n        <tbody>\n          {(this.props.extra.intents || []).map((intent: ClassifierIntent) => (\n            <tr key={intent.name + intent.confidence}>\n              <td>{intent.name}</td>\n              <td>intent</td>\n              <td>{intent.confidence.toFixed(3)}</td>\n            </tr>\n          ))}\n\n          {Object.keys(this.props.extra.entities || []).map((key: string) => {\n            const entities = this.props.extra.entities[key];\n            return entities.map((entity: ClassifierEntity) =>\n              key !== entity.value ? (\n                <tr key={entity.value + entity.confidence}>\n                  <td>{entity.value}</td>\n                  <td>{key}</td>\n                  <td>{entity.confidence.toFixed(3)}</td>\n                </tr>\n              ) : null\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n\n  public renderLogEvent(): JSX.Element {\n    if (this.props.extra && this.props.extra.intents) {\n      return this.renderClassification();\n    }\n\n    switch (this.props.type) {\n      case 'msg_received':\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MO);\n      case 'msg_created':\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MT);\n      case 'ivr_created':\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MT);\n      case 'error':\n        return renderError(this.props.text);\n      case 'failure':\n        return renderError(this.props.text);\n      case 'msg_wait':\n        return renderInfo(i18n.t('simulator.msg_wait', 'Waiting for reply'));\n      case 'contact_groups_changed':\n        return this.renderGroupsChanged();\n      case 'contact_urns_changed':\n        return renderInfo('Added a URN for the contact');\n      case 'contact_field_changed':\n        const value = this.getValue(this.props.value);\n        if (value !== '') {\n          return renderInfo(\n            i18n.t('simulator.contact_field_changed', 'Set contact \"[[field]]\" to \"[[value]]\"', {\n              field: this.props.field.name,\n              value: this.getValue(this.props.value)\n            })\n          );\n        } else {\n          return renderInfo(\n            i18n.t('simulator.contact_field_cleared', 'Cleared contact \"[[field]]\"', {\n              field: this.props.field.name\n            })\n          );\n        }\n      case 'run_result_changed':\n        return renderInfo(\n          i18n.t('simulator.run_result_changed', 'Set result \"[[field]]\" to \"[[value]]\"', {\n            field: this.props.name,\n            value: this.getValue(this.props.value)\n          })\n        );\n      case 'contact_name_changed':\n        return renderInfo(\n          i18n.t('simulator.contact_name_changed', 'Set contact name to \"[[name]]\"', {\n            name: this.props.name\n          })\n        );\n      case 'email_created':\n      case 'email_sent':\n        return this.renderEmailSent();\n      case 'broadcast_created':\n        return renderMessage(\n          this.props.translations[this.props.base_language].text,\n          this.props.msg ? this.props.msg.attachments : [],\n          Direction.MT\n        );\n      case 'resthook_called':\n        return renderInfo(\n          i18n.t('simulator.resthook_called', 'Triggered flow event \"[[resthook]]\"', {\n            resthook: this.props.resthook\n          })\n        );\n      case 'service_called':\n        if (this.props.service === 'classifier') {\n          return this.renderWebhook(Types.call_classifier);\n        }\n        break;\n      case 'webhook_called':\n        return this.renderWebhook(Types.call_webhook);\n      case 'flow_entered':\n        return renderInfo(\n          i18n.t('simulator.flow_entered', 'Entered flow \"[[flow]]\"', {\n            flow: this.props.flow.name\n          })\n        );\n      case 'session_triggered':\n        return renderInfo(\n          i18n.t('simulator.session_triggered', 'Started somebody else in \"[[flow]]\"', {\n            flow: this.props.flow.name\n          })\n        );\n      case 'contact_language_changed':\n        return renderInfo(\n          i18n.t('simulator.contact_language_changed', 'Set preferred language to \"[[language]]\"', {\n            language: this.props.language\n          })\n        );\n      case 'contact_status_changed':\n        return renderInfo(\n          i18n.t('simulator.contact_status_changed', 'Set status to \"[[status]]\"', {\n            status: this.props.status\n          })\n        );\n      case 'info':\n        return renderInfo(this.props.text);\n      case 'input_labels_added':\n        return this.renderLabelsAdded();\n      case 'environment_refreshed':\n        return null;\n      case 'ticket_opened':\n        return renderInfo(\n          i18n.t('simulator.ticket_opened', 'Ticket opened with subject \"[[subject]]\"', {\n            subject: this.props.subject\n          })\n        );\n      case 'airtime_transferred':\n        const event = this.props as AirtimeTransferEvent;\n        return (\n          <>\n            {this.renderWebhook(Types.transfer_airtime)}\n\n            {renderInfo(\n              i18n.t(\n                'simulator.airtime_transferred',\n                'Transferred [[amount]] [[currency]] to [[recipient]]',\n                {\n                  amount: event.actual_amount,\n                  currency: event.currency,\n                  recipient: getURNPath(event.recipient)\n                }\n              )\n            )}\n          </>\n        );\n    }\n\n    // should only get here if we are get an unexpected event\n    console.log('Simulator render missing', this.props);\n    return null;\n  }\n\n  public render(): JSX.Element {\n    return <div className={styles.evt}>{this.renderLogEvent()}</div>;\n  }\n\n  /**\n   * Helper to render a list of values with each value quoted\n   */\n  private renderValueList(values: string[]): string {\n    let text = '';\n    let delim = '';\n    values.forEach(value => {\n      text += `${delim}\"${value}\"`;\n      delim = ', ';\n    });\n    return text;\n  }\n\n  /**\n   * Helper for value fields which can be an object (contact_field_changed) or string (run_result_changed)\n   */\n  private getValue(value: string | { text: string } | null): string {\n    if (!value) {\n      return '';\n    } else if (typeof value === 'string') {\n      return value;\n    }\n    return value.text;\n  }\n}\n","import * as React from 'react';\nimport ReactModal from 'react-modal';\n\ninterface CustomStyles {\n  content: { [cssProperty: string]: string | number };\n}\n\nexport interface ModalProps {\n  show: boolean;\n  onClose?(): void;\n\n  onModalOpen?: any;\n  width?: string;\n}\n\n// A base modal for displaying messages or performing single button actions\nexport default class Modal extends React.Component<ModalProps> {\n  public render(): JSX.Element {\n    const customStyles: CustomStyles = {\n      content: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: '40px',\n        bottom: 'initial',\n        padding: 'none',\n        borderRadius: 'none',\n        outline: 'none',\n        width: this.props.width ? this.props.width : '700px',\n        border: 'none'\n      }\n    };\n    return (\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={this.props.show}\n        onAfterOpen={this.props.onModalOpen}\n        onRequestClose={this.props.onClose}\n        style={customStyles}\n        shouldCloseOnOverlayClick={false}\n        contentLabel=\"Modal\"\n      >\n        {this.props.children}\n      </ReactModal>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport { getDraggedFrom } from 'components/helpers';\nimport Modal from 'components/modal/Modal';\nimport { Type } from 'config/interfaces';\nimport { Action, AnyAction, FlowDefinition, FlowIssue } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { UpdateUserAddingAction } from 'store/actionTypes';\nimport { Asset, AssetStore, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, updateUserAddingAction } from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport {\n  AddAsset,\n  addAsset,\n  DispatchWithState,\n  GetState,\n  HandleTypeConfigChange,\n  handleTypeConfigChange,\n  LocalizationUpdates,\n  MergeEditorState,\n  mergeEditorState,\n  NoParamsAC,\n  onUpdateAction,\n  OnUpdateAction,\n  OnUpdateLocalizations,\n  onUpdateLocalizations,\n  OnUpdateRouter,\n  onUpdateRouter,\n  resetNodeEditingState\n} from 'store/thunks';\nimport { CompletionSchema } from 'utils/completion';\nimport { LocalizationFormProps } from 'components/flow/props';\n\nexport type UpdateLocalizations = (language: string, changes: LocalizationUpdates) => void;\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport interface NodeEditorPassedProps {\n  plumberConnectExit: Function;\n  helpArticles: { [key: string]: string };\n}\n\nexport interface NodeEditorStoreProps {\n  assetStore: AssetStore;\n  addAsset: AddAsset;\n  language: Asset;\n  definition: FlowDefinition;\n  translating: boolean;\n  typeConfig: Type;\n  settings: NodeEditorSettings;\n  nodes: { [uuid: string]: RenderNode };\n  handleTypeConfigChange: HandleTypeConfigChange;\n  resetNodeEditingState: NoParamsAC;\n  issues: FlowIssue[];\n  mergeEditorState: MergeEditorState;\n  onUpdateLocalizations: OnUpdateLocalizations;\n  onUpdateAction: OnUpdateAction;\n  onUpdateRouter: OnUpdateRouter;\n  updateUserAddingAction: UpdateUserAddingAction;\n  completionSchema: CompletionSchema;\n}\n\nexport type NodeEditorProps = NodeEditorPassedProps & NodeEditorStoreProps;\n\nexport interface FormProps {\n  // our two ways of updating\n  updateRouter(renderNode: RenderNode): void;\n  updateAction(action: AnyAction): void;\n\n  addAsset(assetType: string, asset: Asset): void;\n  completionSchema: CompletionSchema;\n\n  assetStore: AssetStore;\n  issues: FlowIssue[];\n  helpArticles: { [key: string]: string };\n\n  nodeSettings?: NodeEditorSettings;\n  typeConfig?: Type;\n  onTypeChange?(config: Type): void;\n  onClose?(canceled: boolean): void;\n}\n\n/* export interface LocalizationProps {\n  nodeSettings?: NodeEditorSettings;\n  typeConfig?: Type;\n  onClose?(canceled: boolean): void;\n\n  issues: FlowIssue[];\n  updateLocalizations: UpdateLocalizations;\n  language: Asset;\n}*/\n\nexport class NodeEditor extends React.Component<NodeEditorProps> {\n  constructor(props: NodeEditorProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^close/, /^update/, /^handle/]\n    });\n  }\n\n  private updateLocalizations(language: string, changes: LocalizationUpdates) {\n    this.props.onUpdateLocalizations(language, changes);\n  }\n\n  public close(canceled: boolean): void {\n    // Make sure we re-wire the old connection\n    if (canceled) {\n      const dragPoint = getDraggedFrom(this.props.settings.originalNode);\n      if (dragPoint) {\n        const renderNode = this.props.nodes[dragPoint.nodeUUID];\n        for (const exit of renderNode.node.exits) {\n          if (exit.uuid === dragPoint.exitUUID) {\n            // TODO: should this just be taking literal uuids instead of objects?\n            this.props.plumberConnectExit(renderNode.node, exit);\n            break;\n          }\n        }\n      }\n    }\n\n    this.props.resetNodeEditingState();\n    this.props.updateUserAddingAction(false);\n  }\n\n  private updateAction(\n    action: Action,\n    onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n  ): void {\n    this.props.onUpdateAction(action, onUpdated);\n  }\n\n  private updateRouter(renderNode: RenderNode): void {\n    this.props.onUpdateRouter(renderNode);\n  }\n\n  private handleAddAsset(assetType: string, asset: Asset): void {\n    this.props.addAsset(assetType, asset);\n  }\n\n  public render(): JSX.Element {\n    if (this.props.settings) {\n      const { typeConfig } = this.props;\n\n      // see if we should use the localization form\n      if (this.props.translating) {\n        const { localization: LocalizationForm } = typeConfig;\n\n        if (LocalizationForm) {\n          const localizationProps: LocalizationFormProps = {\n            updateLocalizations: this.updateLocalizations,\n            nodeSettings: this.props.settings,\n            onClose: this.close,\n            language: this.props.language,\n            helpArticles: this.props.helpArticles,\n            issues: this.props.issues.filter(\n              (issue: FlowIssue) => issue.language === this.props.language.id\n            )\n          };\n\n          return (\n            <Modal width=\"600px\" show={true}>\n              <LocalizationForm {...{ ...localizationProps }} />\n            </Modal>\n          );\n        }\n      }\n\n      const { form: Form } = typeConfig;\n\n      const formProps: FormProps = {\n        assetStore: this.props.assetStore,\n        completionSchema: this.props.completionSchema,\n        addAsset: this.handleAddAsset,\n        updateAction: this.updateAction,\n        updateRouter: this.updateRouter,\n        nodeSettings: this.props.settings,\n        helpArticles: this.props.helpArticles,\n        issues: this.props.issues.filter((issue: FlowIssue) => !issue.language),\n        typeConfig: this.props.typeConfig,\n        onTypeChange: this.props.handleTypeConfigChange,\n        onClose: this.close\n      };\n\n      return (\n        <Modal width=\"600px\" show={true}>\n          <Form {...{ ...formProps }} />\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { definition, nodes, assetStore, issues },\n  editorState: { language, translating, completionSchema },\n  nodeEditor: { typeConfig, settings }\n}: AppState) => {\n  const filteredIssues = (issues[settings.originalNode.node.uuid] || []).filter(\n    (issue: FlowIssue) =>\n      !settings.originalAction || settings.originalAction.uuid === issue.action_uuid\n  );\n\n  return {\n    issues: filteredIssues,\n    language,\n    definition,\n    nodes,\n    translating,\n    typeConfig,\n    settings,\n    assetStore,\n    completionSchema\n  };\n};\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      addAsset,\n      resetNodeEditingState,\n      mergeEditorState,\n      handleTypeConfigChange,\n      onUpdateLocalizations,\n      onUpdateAction,\n      onUpdateRouter,\n      updateUserAddingAction\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NodeEditor);\n","import { EventProps } from 'components/simulator/LogEvent';\nimport { FlowDefinition } from 'flowTypes';\nimport { AssetStore, AssetType } from 'store/flowContext';\nimport { assetMapToList } from 'store/helpers';\nimport { createUUID } from 'utils';\n\nexport const DEFAULT_KEY = '__default__';\n\nconst SIMULATOR_CHANNEL = {\n  uuid: createUUID(),\n  name: 'Simulator',\n  address: '+12065550000',\n  schemes: ['tel'],\n  roles: ['send', 'receive']\n};\n\ninterface SimAsset {\n  type: AssetType;\n  url: string;\n  content: any;\n}\n\nexport const getTime = (): string => {\n  const now = new Date();\n  const mins = now.getMinutes();\n  let minStr = '' + mins;\n  if (mins < 10) {\n    minStr = '0' + mins;\n  }\n  return Math.abs(12 - now.getHours()) + ':' + minStr;\n};\n\nexport const getSimulationAssets = (assets: AssetStore, flow: FlowDefinition): any => {\n  const simAssets: SimAsset[] = [];\n\n  // our group set asset\n  simAssets.push({\n    type: AssetType.Group,\n    url: assets.groups.endpoint,\n    content: assetMapToList(assets.groups.items)\n  });\n\n  // our fields\n  simAssets.push({\n    type: AssetType.Field,\n    url: assets.fields.endpoint,\n    content: assetMapToList(assets.fields.items)\n  });\n\n  // our labels\n  simAssets.push({\n    type: AssetType.Label,\n    url: assets.labels.endpoint,\n    content: assetMapToList(assets.labels.items)\n  });\n\n  // our channels\n  simAssets.push({\n    type: AssetType.Channel,\n    url: assets.channels.endpoint,\n    content: [SIMULATOR_CHANNEL]\n  });\n\n  simAssets.push({\n    type: AssetType.Flow,\n    url: assets.flows.endpoint + `${flow.uuid}/`,\n    content: flow\n  });\n\n  const payload = {\n    assets: simAssets,\n    asset_server: {\n      type_urls: {\n        [AssetType.Flow]: assets.flows.endpoint,\n        [AssetType.Field]: assets.fields.endpoint,\n        [AssetType.Channel]: assets.channels.endpoint,\n        [AssetType.Group]: assets.groups.endpoint,\n        [AssetType.Label]: assets.labels.endpoint\n      }\n    }\n  };\n\n  return payload;\n};\n\nexport const isMessage = (event: EventProps): boolean => {\n  return !!['msg_created', 'msg_received', 'ivr_created'].find(type => type === event.type);\n};\n\nexport const isMT = (event: EventProps): boolean => {\n  return !!['msg_created', 'ivr_created'].find(type => type === event.type);\n};\n\nexport const hasPopulatedKey = (obj: any): boolean => {\n  if (obj) {\n    Object.keys(obj).forEach((key: string) => {\n      return true;\n    });\n  }\n  return false;\n};\n\nexport const pruneEmpty = (obj: any): any => {\n  if (typeof obj === 'object') {\n    Object.keys(obj).forEach((key: string) => {\n      if (\n        !obj[key] ||\n        (Object.keys(obj[key]).length === 1 && obj[key].hasOwnProperty(DEFAULT_KEY))\n      ) {\n        delete obj[key];\n      } else {\n        pruneEmpty(obj[key]);\n\n        // now see if we have any new leaves\n        if (obj[key] !== null && typeof obj[key] === 'object') {\n          if (Object.keys(obj[key]).length === 0) {\n            delete obj[key];\n          }\n        }\n      }\n    });\n  }\n\n  return obj;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as axios from 'axios';\nimport { getTime, isMessage, isMT } from 'components/simulator/helpers';\nimport LogEvent, { EventProps } from 'components/simulator/LogEvent';\nimport ContextExplorer from './ContextExplorer';\nimport styles from 'components/simulator/Simulator.module.scss';\nimport { ConfigProviderContext, fakePropType } from 'config/ConfigProvider';\nimport { getURL } from 'external';\nimport { FlowDefinition, Group, Wait } from 'flowTypes';\nimport update from 'immutability-helper';\nimport { ReactNode } from 'react';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Activity, RecentMessage } from 'store/editor';\nimport { AssetStore, RenderNodeMap, Asset } from 'store/flowContext';\nimport { getCurrentDefinition } from 'store/helpers';\nimport AppState from 'store/state';\nimport { DispatchWithState, MergeEditorState } from 'store/thunks';\nimport { createUUID } from 'utils';\nimport { PopTabType } from 'config/interfaces';\n\nconst MESSAGE_DELAY_MS = 200;\n\nconst MAP_THUMB = require('static/images/map.jpg');\nconst IMAGE_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_a.jpg';\nconst IMAGE_B = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_b.jpg';\nconst IMAGE_C = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_c.jpg';\nconst AUDIO_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_audio_a.mp3';\nconst VIDEO_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_video_a.mp4';\n\nconst VIDEO_A_THUMB =\n  'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_video_a_thumb.jpg';\n\ninterface PostMessage {\n  text: string;\n  uuid: string;\n  urn: string;\n  attachments: string[];\n}\n\ninterface Message {\n  text: string;\n  inbound: boolean;\n}\n\nexport interface SimulatorStoreProps {\n  nodes: RenderNodeMap;\n  definition: FlowDefinition;\n  assetStore: AssetStore;\n\n  activity: Activity;\n\n  language: Asset;\n\n  // TODO: take away responsibility of simulator for resetting this\n  liveActivity: Activity;\n}\n\nexport interface SimulatorPassedProps {\n  mergeEditorState: MergeEditorState;\n  onToggled: (visible: boolean, tab: PopTabType) => void;\n  popped: string;\n}\n\nexport type SimulatorProps = SimulatorStoreProps & SimulatorPassedProps;\n\nenum DrawerType {\n  audio = 'audio',\n  images = 'images',\n  videos = 'videos',\n  location = 'location',\n  digit = 'digit',\n  digits = 'digits',\n  quickReplies = 'quickReplies'\n}\n\ninterface SimulatorState {\n  visible: boolean;\n  session?: Session;\n  context?: any;\n  contact: Contact;\n  channel: string;\n  events: EventProps[];\n  active: boolean;\n  time: string;\n\n  keypadEntry: string;\n\n  quickReplies?: string[];\n\n  // are we currently simulating a sprint\n  sprinting: boolean;\n\n  // is our drawer open\n  drawerOpen: boolean;\n\n  // what type of drawer are we looking at\n  drawerType?: DrawerType;\n\n  // how tall our drawer is\n  drawerHeight: number;\n\n  // is our attachment type selection open\n  attachmentOptionsVisible: boolean;\n\n  // if we can see our context explorer\n  contextExplorerVisible: boolean;\n\n  // are we at a wait hint, ie, a forced attachment\n  waitingForHint: boolean;\n}\n\ninterface Contact {\n  uuid: string;\n  urns: string[];\n  fields: {};\n  groups: Group[];\n}\n\ninterface Step {\n  arrived_on: Date;\n  uuid: string;\n  exit_uuid: string;\n  node_uuid: string;\n}\n\ninterface Run {\n  path: Step[];\n  flow_uuid: string;\n  status: string;\n  events?: EventProps[];\n  wait?: Wait;\n}\n\ninterface RunContext {\n  contact: Contact;\n  session: Session;\n  context?: any;\n  events: EventProps[];\n}\n\ninterface Session {\n  runs: Run[];\n  contact: Contact;\n  input?: any;\n  wait?: Wait;\n  status?: string;\n}\n\n/**\n * Our dev console for simulating or testing expressions\n */\nexport class Simulator extends React.Component<SimulatorProps, SimulatorState> {\n  private debug: Session[] = [];\n  private flows: FlowDefinition[] = [];\n  private currentFlow: string;\n  private inputBox: HTMLInputElement;\n\n  private drawerEle: HTMLDivElement;\n\n  // marks the bottom of our chat\n  private bottom: any;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: SimulatorProps, context: ConfigProviderContext) {\n    super(props);\n    this.state = {\n      active: false,\n      visible: false,\n      events: [],\n      contact: {\n        uuid: createUUID(),\n        urns: ['tel:+12065551212'],\n        fields: {},\n        groups: []\n      },\n      keypadEntry: '',\n      drawerHeight: 0,\n      channel: createUUID(),\n      time: getTime(),\n      waitingForHint: false,\n      drawerOpen: false,\n      attachmentOptionsVisible: false,\n      contextExplorerVisible: false,\n      sprinting: false\n    };\n    this.bottomRef = this.bottomRef.bind(this);\n    this.inputBoxRef = this.inputBoxRef.bind(this);\n    this.currentFlow = this.props.definition.uuid;\n\n    bindCallbacks(this, {\n      include: [/^on/, /^get/, /^handle/]\n    });\n  }\n\n  private bottomRef(ref: any): void {\n    return (this.bottom = ref);\n  }\n\n  private inputBoxRef(ref: any): void {\n    this.inputBox = ref;\n  }\n\n  private updateActivity(recentMessages: { [key: string]: RecentMessage[] } = {}): void {\n    if (this.state.session) {\n      // if we are resetting, clear our recent messages\n\n      let lastExit: string = null;\n      const paths: { [key: string]: number } = {};\n      const active: { [nodeUUID: string]: number } = {};\n      let activeFlow: string;\n\n      for (const run of this.state.session.runs) {\n        let finalStep: Step = null;\n\n        for (const step of run.path) {\n          if (lastExit) {\n            const key = lastExit + ':' + step.node_uuid;\n            let pathCount = paths[key];\n            if (!pathCount) {\n              pathCount = 0;\n            }\n            paths[key] = ++pathCount;\n            if (!(key in recentMessages)) {\n              recentMessages[key] = [];\n            }\n          }\n          lastExit = step.exit_uuid;\n          finalStep = step;\n        }\n\n        if (finalStep) {\n          let count = active[finalStep.node_uuid];\n          if (!count) {\n            count = 0;\n          }\n\n          if (lastExit) {\n            const lastKey = lastExit + ':' + null;\n            paths[lastKey] = 1;\n\n            if (!(lastKey in recentMessages)) {\n              recentMessages[lastKey] = [];\n            }\n          }\n\n          if (this.state.session.status === 'waiting') {\n            active[finalStep.node_uuid] = ++count;\n          }\n          activeFlow = run.flow_uuid;\n        }\n      }\n\n      // if we are resetting, clear our recent messages\n      const simulatedMessages = this.state.session.input\n        ? this.props.activity.recentMessages || {}\n        : {};\n\n      for (const key in recentMessages) {\n        let messages = simulatedMessages[key] || [];\n        messages = recentMessages[key].concat(messages);\n        simulatedMessages[key] = messages;\n      }\n\n      const activity: Activity = {\n        segments: paths,\n        nodes: active,\n        recentMessages: simulatedMessages\n      };\n\n      this.props.mergeEditorState({ activity });\n      if (activeFlow && activeFlow !== this.currentFlow) {\n        this.currentFlow = activeFlow;\n      }\n    }\n  }\n\n  private updateEvents(\n    events: EventProps[],\n    session: Session,\n    recentMessages: { [key: string]: RecentMessage[] },\n    callback: () => void\n  ): void {\n    if (events && events.length > 0) {\n      const toAdd = [];\n\n      let quickReplies: string[] = null;\n\n      let messageFound = false;\n      while (events.length > 0 && !messageFound) {\n        const event = events.shift();\n\n        if (isMessage(event)) {\n          messageFound = true;\n\n          // if it's a message add it to our recent messages\n          let fromUUID = '';\n          let toUUID = '';\n\n          // work backwards, since our events are recent\n          for (let i = session.runs.length - 1; i >= 0; i--) {\n            const path = session.runs[i].path;\n\n            // start at the penultimate node since we have nowhere to render recent messages for the last node\n            for (let j = path.length - 1; j >= 0; j--) {\n              if (path[j].uuid === event.step_uuid) {\n                fromUUID = path[j].exit_uuid;\n                toUUID = path.length > j + 1 ? path[j + 1].node_uuid : null;\n                break;\n              }\n            }\n\n            if (fromUUID) {\n              const key = `${fromUUID}:${toUUID}`;\n              const msg: RecentMessage = {\n                sent: event.created_on,\n                text: event.msg.text\n              };\n              if (key in recentMessages) {\n                recentMessages[key].unshift(msg);\n              } else {\n                recentMessages[key] = [msg];\n              }\n            }\n          }\n\n          if (isMT(event)) {\n            // save off any quick replies we might have\n            if (event.msg.quick_replies) {\n              quickReplies = event.msg.quick_replies;\n            }\n          }\n        }\n\n        toAdd.push(event);\n      }\n\n      const newEvents = update(this.state.events, {\n        $push: toAdd\n      }) as EventProps[];\n      const newState: Partial<SimulatorState> = { events: newEvents };\n\n      if (quickReplies !== null) {\n        newState.quickReplies = quickReplies;\n      }\n\n      this.scrollToBottom();\n\n      this.setState(newState as SimulatorState, () => {\n        if (events.length === 0) {\n          callback();\n        } else {\n          window.setTimeout(() => {\n            this.updateEvents(events, session, recentMessages, callback);\n          }, MESSAGE_DELAY_MS);\n        }\n      });\n    } else {\n      callback();\n    }\n  }\n\n  private updateRunContext(runContext: RunContext, msg?: PostMessage): void {\n    const wasJustActive = this.state.active || (runContext.events && runContext.events.length > 0);\n    this.setState({ quickReplies: [] }, () => {\n      if (!runContext.events || (runContext.events.length === 0 && msg)) {\n        const runs = runContext.session.runs;\n        const run = runs[runs.length - 1];\n        const step = run.path[run.path.length - 1];\n\n        runContext.events = [\n          {\n            msg: {\n              uuid: createUUID(),\n              urn: this.state.contact.urns[0],\n              text: msg.text,\n              attachments: msg.attachments\n            },\n            type: 'msg_created',\n            created_on: new Date().toISOString(),\n            step_uuid: step.uuid\n          }\n        ];\n      }\n\n      const newlyRecentMessages = {};\n\n      this.updateEvents(runContext.events, runContext.session, newlyRecentMessages, () => {\n        let active = false;\n        for (const run of runContext.session.runs) {\n          if (run.status === 'waiting') {\n            active = true;\n            break;\n          }\n        }\n\n        let newEvents = this.state.events;\n        if (!active && wasJustActive) {\n          newEvents = update(this.state.events, {\n            $push: [\n              {\n                type: 'info',\n                text: 'Exited flow',\n                created_on: new Date()\n              } as any\n            ]\n          }) as EventProps[];\n        }\n\n        const waitingForHint =\n          runContext.session &&\n          runContext.session.wait &&\n          runContext.session.wait.hint !== undefined;\n\n        let drawerType = null;\n        if (waitingForHint) {\n          switch (runContext.session.wait.hint.type) {\n            case 'audio':\n              drawerType = DrawerType.audio;\n              break;\n            case 'video':\n              drawerType = DrawerType.videos;\n              break;\n            case 'image':\n              drawerType = DrawerType.images;\n              break;\n            case 'location':\n              drawerType = DrawerType.location;\n              break;\n            case 'digits':\n              drawerType = DrawerType.digit;\n              if (runContext.session.wait.hint.count !== 1) {\n                drawerType = DrawerType.digits;\n              }\n              break;\n            default:\n              console.log('Unknown hint', runContext.session.wait.hint.type);\n          }\n        }\n\n        let drawerOpen = waitingForHint;\n\n        // if we have quick replies, open our drawe with attachment options\n        if (!drawerType && this.hasQuickReplies()) {\n          drawerType = DrawerType.quickReplies;\n          drawerOpen = true;\n        }\n\n        this.setState(\n          {\n            active,\n            context: runContext.context,\n            sprinting: false,\n            session: runContext.session,\n            events: newEvents,\n            drawerOpen,\n            drawerType,\n            waitingForHint\n          },\n          () => {\n            this.updateActivity(newlyRecentMessages);\n            this.handleFocusUpdate();\n          }\n        );\n      });\n    });\n  }\n\n  private startFlow(): void {\n    const now = new Date().toISOString();\n    const contact: any = {\n      uuid: createUUID(),\n      urns: ['tel:+12065551212'],\n      fields: {},\n      groups: [],\n      created_on: now\n    };\n\n    // use the current displayed language when simulating\n    if (this.props.language) {\n      contact.language = this.props.language.id;\n    }\n\n    // reset our events and contact\n    this.setState(\n      {\n        sprinting: true,\n        drawerOpen: false,\n        attachmentOptionsVisible: false,\n        events: []\n      },\n      () => {\n        const body: any = {\n          contact: this.state.contact,\n          flow: getCurrentDefinition(this.props.definition, this.props.nodes, false),\n          trigger: {\n            type: 'manual',\n            environment: {\n              date_format: 'DD-MM-YYYY',\n              time_format: 'hh:mm',\n              timezone: 'America/New_York',\n              languages: []\n            },\n            contact,\n            flow: {\n              uuid: this.props.definition.uuid,\n              name: this.props.definition.name\n            },\n            params: {},\n            triggered_on: now\n          }\n        };\n\n        axios.default\n          .post(getURL(this.context.config.endpoints.simulateStart), JSON.stringify(body, null, 2))\n          .then((response: axios.AxiosResponse) => {\n            this.updateRunContext(response.data as RunContext);\n          });\n      }\n    );\n  }\n\n  private resume(text: string, attachment?: string): void {\n    if (!text && !attachment) {\n      return;\n    }\n\n    if (text === '\\\\debug') {\n      console.log(JSON.stringify(this.debug, null, 2));\n      return;\n    }\n\n    if (text === '\\\\recalc') {\n      console.log('recal..');\n      // this.props.plumberRepaint();\n      return;\n    }\n\n    this.setState({ sprinting: true, attachmentOptionsVisible: false, drawerOpen: false }, () => {\n      const now = new Date().toISOString();\n\n      const msg: PostMessage = {\n        text,\n        uuid: createUUID(),\n        urn: this.state.session.contact.urns[0],\n        attachments: attachment ? [attachment] : []\n      };\n\n      const body: any = {\n        flow: getCurrentDefinition(this.props.definition, this.props.nodes, false),\n        session: this.state.session,\n        resume: {\n          type: 'msg',\n          msg,\n          resumed_on: now,\n          contact: this.state.session.contact\n        }\n      };\n\n      axios.default\n        .post(getURL(this.context.config.endpoints.simulateResume), JSON.stringify(body, null, 2))\n        .then((response: axios.AxiosResponse) => {\n          this.updateRunContext(response.data as RunContext, msg);\n        })\n        .catch(error => {\n          if (error.response.status) {\n          }\n          const events = update(this.state.events, {\n            $push: [\n              {\n                type: 'error',\n                text:\n                  error.response.status > 499\n                    ? 'Server error, try again later'\n                    : error.response.data.error\n              } as any\n            ]\n          }) as EventProps[];\n          this.setState({ events });\n        });\n    });\n  }\n\n  private onReset(event: any): void {\n    this.startFlow();\n  }\n\n  private scrollToBottom(delay?: number): void {\n    const wait = delay || 0;\n    if (this.bottom) {\n      window.setTimeout(() => {\n        if (this.bottom) {\n          this.bottom.scrollIntoView(false);\n        }\n      }, wait);\n    }\n  }\n\n  public componentDidUpdate(prevProps: SimulatorProps, prevState: SimulatorState): void {\n    if (this.drawerEle !== null) {\n      if (\n        prevState.drawerHeight !== this.drawerEle.clientHeight ||\n        prevState.drawerOpen !== this.state.drawerOpen\n      ) {\n        this.setState({ drawerHeight: this.drawerEle.clientHeight }, () => {\n          this.scrollToBottom(800);\n        });\n      }\n    }\n  }\n\n  private onKeyUp(event: any): void {\n    if (event.key === 'Enter') {\n      const ele = event.target;\n      const text = ele.value;\n      ele.value = '';\n      this.resume(text);\n    }\n  }\n\n  private onToggle(event: any): void {\n    const newVisible = !this.state.visible;\n\n    this.props.onToggled(newVisible, PopTabType.SIMULATOR);\n\n    this.props.mergeEditorState({ simulating: newVisible });\n\n    this.setState({ visible: newVisible, contextExplorerVisible: false }, () => {\n      // clear our viewing definition\n      if (!this.state.visible) {\n        window.setTimeout(() => {\n          this.props.mergeEditorState({ activity: this.props.liveActivity });\n        }, 500);\n      } else {\n        this.updateActivity();\n\n        // start our flow if we haven't already\n        if (this.state.events.length === 0) {\n          this.startFlow();\n        }\n\n        this.handleFocusUpdate();\n      }\n    });\n  }\n\n  private handleFocusUpdate(): void {\n    if (this.inputBox) {\n      this.inputBox.focus();\n    }\n  }\n\n  private sendAttachment(attachment: string): void {\n    this.setState({ drawerOpen: false, attachmentOptionsVisible: false }, () => {\n      window.setTimeout(() => {\n        this.resume(null, attachment);\n      }, 200);\n    });\n  }\n\n  private getImageDrawer(): JSX.Element {\n    return (\n      <div className={styles.drawer_items}>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('image/jpeg:' + IMAGE_A);\n          }}\n        >\n          <img src={IMAGE_A} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('image/jpeg:' + IMAGE_B);\n          }}\n        >\n          <img src={IMAGE_B} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('image/jpeg:' + IMAGE_C);\n          }}\n        >\n          <img src={IMAGE_C} alt=\"Attachment\" />\n        </div>\n      </div>\n    );\n  }\n\n  public getLocationDrawer(): JSX.Element {\n    return (\n      <div\n        className={styles.map_thumb}\n        onClick={() => {\n          this.sendAttachment('geo:2.904194,-79.003418');\n        }}\n      >\n        <img src={MAP_THUMB} alt=\"Attachment\" />\n      </div>\n    );\n  }\n\n  private getAudioDrawer(): JSX.Element {\n    return (\n      <div\n        className={styles.audio_picker}\n        onClick={() => {\n          this.sendAttachment('audio/mp3:' + AUDIO_A);\n        }}\n      >\n        <div className={styles.audio_icon + ' fe-mic'} />\n        <div className={styles.audio_message}>Upload Audio</div>\n      </div>\n    );\n  }\n\n  private getVideoDrawer(): JSX.Element {\n    return (\n      <div className={styles.drawer_items}>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('video/mp4:' + VIDEO_A);\n          }}\n        >\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('video/mp4:' + VIDEO_A);\n          }}\n        >\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('video/mp4:' + VIDEO_A);\n          }}\n        >\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\n        </div>\n      </div>\n    );\n  }\n\n  private getQuickRepliesDrawer(): JSX.Element {\n    return (\n      <div className={styles.quick_replies}>\n        {this.state.quickReplies.map(reply => (\n          <div\n            className={styles.quick_reply}\n            onClick={() => {\n              this.resume(reply);\n            }}\n            key={`reply_${reply}`}\n          >\n            {reply}\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  private handleKeyPress(btn: string, multiple: boolean): void {\n    if (!multiple) {\n      this.resume(btn);\n    } else {\n      if (btn === '#') {\n        this.resume(this.state.keypadEntry);\n        this.setState({ keypadEntry: '' });\n      } else {\n        this.setState((prevState: SimulatorState) => {\n          return { keypadEntry: prevState.keypadEntry += btn };\n        });\n      }\n    }\n  }\n\n  private getKeyRow(keys: string[], multiple: boolean): JSX.Element {\n    return (\n      <div className={styles.row}>\n        {keys.map((key: string) => {\n          return (\n            <div\n              key={'btn_' + key}\n              onClick={() => {\n                this.handleKeyPress(key, multiple);\n              }}\n              className={styles.key}\n            >\n              {key}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private getKeypadDrawer(multiple: boolean): JSX.Element {\n    return (\n      <div className={styles.keypad}>\n        {multiple ? <div className={styles.keypad_entry}>{this.state.keypadEntry}</div> : null}\n        <div className={styles.keys}>\n          {this.getKeyRow(['1', '2', '3'], multiple)}\n          {this.getKeyRow(['4', '5', '6'], multiple)}\n          {this.getKeyRow(['7', '8', '9'], multiple)}\n          {this.getKeyRow(['*', '0', '#'], multiple)}\n        </div>\n      </div>\n    );\n  }\n\n  private getDrawerContents(): JSX.Element {\n    switch (this.state.drawerType) {\n      case DrawerType.location:\n        return this.getLocationDrawer();\n      case DrawerType.audio:\n        return this.getAudioDrawer();\n      case DrawerType.images:\n        return this.getImageDrawer();\n      case DrawerType.videos:\n        return this.getVideoDrawer();\n      case DrawerType.quickReplies:\n        return this.getQuickRepliesDrawer();\n      case DrawerType.digits:\n      case DrawerType.digit:\n        return this.getKeypadDrawer(this.state.drawerType === DrawerType.digits);\n    }\n    return null;\n  }\n\n  private handleDrawerRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.drawerEle = ref);\n  }\n\n  public getDrawer(): JSX.Element {\n    const style: any = {};\n\n    if (this.state.drawerOpen) {\n      style.bottom = 50;\n\n      // are we being forced open\n      if (this.state.waitingForHint) {\n        style.bottom = 25;\n        style.zIndex = 150;\n        style.paddingBottom = 10;\n      }\n    } else {\n      style.bottom = -this.state.drawerHeight;\n    }\n\n    return (\n      <div\n        ref={this.handleDrawerRef}\n        style={style}\n        className={\n          styles.drawer +\n          ' ' +\n          (this.state.drawerOpen ? styles.drawer_visible : '') +\n          ' ' +\n          (this.state.attachmentOptionsVisible ? '' : styles.forced)\n        }\n      >\n        {this.getDrawerContents()}\n      </div>\n    );\n  }\n\n  private hasQuickReplies(): boolean {\n    return (this.state.quickReplies || []).length > 0;\n  }\n\n  private handleHideAttachments(): void {\n    this.setState(\n      {\n        attachmentOptionsVisible: false,\n        drawerOpen: false\n      },\n      () => {\n        if (this.hasQuickReplies()) {\n          window.setTimeout(() => {\n            this.showAttachmentDrawer(DrawerType.quickReplies);\n          }, 300);\n        }\n      }\n    );\n  }\n\n  private getAttachmentButton(icon: string, drawerType: DrawerType): JSX.Element {\n    return (\n      <div\n        className={icon}\n        onClick={() => {\n          this.showAttachmentDrawer(drawerType);\n        }}\n      />\n    );\n  }\n\n  private getAttachmentOptions(): JSX.Element {\n    return (\n      <div\n        className={\n          styles.attachment_buttons +\n          ' ' +\n          (this.state.attachmentOptionsVisible ? styles.visible : '')\n        }\n      >\n        <div className=\"fe-x\" onClick={this.handleHideAttachments} />\n        {this.getAttachmentButton('fe-picture2', DrawerType.images)}\n        {this.getAttachmentButton('fe-video', DrawerType.videos)}\n        {this.getAttachmentButton('fe-mic', DrawerType.audio)}\n        {this.getAttachmentButton('fe-map-marker', DrawerType.location)}\n      </div>\n    );\n  }\n\n  private handleContextExplorerClose(): void {\n    this.setState({ contextExplorerVisible: false });\n  }\n\n  private getContextExplorer(): JSX.Element {\n    return (\n      <ContextExplorer\n        visible={this.state.contextExplorerVisible}\n        onClose={this.handleContextExplorerClose}\n        contents={this.state.context}\n      />\n    );\n  }\n\n  private handleHideAttachmentDrawer(): void {\n    this.setState({ drawerOpen: false });\n  }\n\n  private showAttachmentDrawer(drawerType: DrawerType): void {\n    // if we are already open but a different type, hide ourselves and reopen with the new type\n    if (this.state.drawerOpen) {\n      // if that type is already open, its a noop\n      if (drawerType === this.state.drawerType) {\n        return;\n      }\n\n      this.handleHideAttachmentDrawer();\n      window.setTimeout(() => {\n        this.showAttachmentDrawer(drawerType);\n      }, 300);\n    } else {\n      this.setState((prevState: SimulatorState) => {\n        return { drawerOpen: true, drawerType };\n      });\n    }\n  }\n\n  public render(): ReactNode {\n    const messages: JSX.Element[] = [];\n    for (const event of this.state.events) {\n      messages.push(<LogEvent {...event} key={event.type + '_' + String(event.created_on)} />);\n    }\n\n    const hidden = this.props.popped && this.props.popped !== PopTabType.SIMULATOR;\n    const simHidden = hidden || !this.state.visible ? styles.sim_hidden : '';\n    const tabHidden = hidden || this.state.visible ? styles.tab_hidden : '';\n\n    const messagesStyle: any = {\n      height: 366 - (this.state.drawerOpen ? this.state.drawerHeight - 20 : 0)\n    };\n\n    // if attachments are forced open, account for missing attachment choice panel\n    if (this.state.drawerOpen && this.state.waitingForHint) {\n      messagesStyle.height += 25;\n    }\n\n    return (\n      <div id=\"sim_container\" className={styles.sim_container}>\n        <div>\n          <div id=\"simulator\" className={styles.simulator + ' ' + simHidden} key={'sim'}>\n            {this.getContextExplorer()}\n\n            <div className={styles.screen}>\n              <div className={styles.header}>\n                <div className={styles.close + ' fe-x'} onClick={this.onToggle} />\n              </div>\n              <div className={styles.messages} style={messagesStyle}>\n                {messages}\n                <div\n                  id=\"bottom\"\n                  style={{ float: 'left', clear: 'both', marginTop: 20 }}\n                  ref={this.bottomRef}\n                />\n              </div>\n              <div className={styles.controls}>\n                <input\n                  ref={this.inputBoxRef}\n                  type=\"text\"\n                  onKeyUp={this.onKeyUp}\n                  disabled={this.state.sprinting}\n                  placeholder={this.state.active ? 'Enter message' : 'Press home to start again'}\n                />\n                <div className={styles.show_attachments_button}>\n                  <div\n                    className=\"fe-paperclip\"\n                    onClick={() => {\n                      this.setState({\n                        attachmentOptionsVisible: true,\n                        drawerOpen: false\n                      });\n                    }}\n                  />\n                </div>\n              </div>\n              {this.getAttachmentOptions()}\n              {this.getDrawer()}\n              <div className={styles.footer}>\n                {!this.state.contextExplorerVisible ? (\n                  <div className={styles.show_context_button}>\n                    <div\n                      className=\"context-button\"\n                      onClick={() => {\n                        this.setState({\n                          contextExplorerVisible: true\n                        });\n                      }}\n                    >\n                      <span className=\"fe-at-sign\"></span>\n                    </div>\n                  </div>\n                ) : (\n                  <div className={styles.show_context_button}>\n                    <div\n                      className=\"context-button\"\n                      onClick={() => {\n                        this.setState({\n                          contextExplorerVisible: false\n                        });\n                      }}\n                    >\n                      <span className=\"fe-x\"></span>\n                    </div>\n                  </div>\n                )}\n\n                <span\n                  className={\n                    styles.reset + ' ' + (this.state.active ? styles.active : styles.inactive)\n                  }\n                  onClick={this.onReset}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={styles.simulator_tab + ' ' + tabHidden} onClick={this.onToggle}>\n          <div className={styles.simulator_tab_icon + ' fe-smartphone'} />\n          <div className={styles.simulator_tab_text}>\n            Run in\n            <br />\n            Simulator\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { definition, nodes, assetStore },\n  editorState: { liveActivity, activity, language }\n}: AppState) => ({\n  liveActivity,\n  activity,\n  assetStore,\n  definition,\n  nodes,\n  language\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) => bindActionCreators({}, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Simulator);\n","import * as React from 'react';\nimport styles from './ContextExplorer.module.scss';\nimport { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport { copyToClipboard } from 'utils';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { DEFAULT_KEY, pruneEmpty } from './helpers';\n\nconst cx: any = classNames.bind(styles);\n\nconst EXCLUDED_PATHS: { [path: string]: boolean } = {\n  'parent.run': true,\n  'child.run': true,\n  legacy_extra: true\n};\n\ntype PathStep = number | string;\n\nexport interface ContextExplorerProps {\n  visible: boolean;\n  onClose: () => void;\n  contents: any;\n}\n\ninterface ContextExplorerState {\n  opened: {};\n  expression: string;\n  messageVisible: boolean;\n  message: string;\n  showEmpty: boolean;\n}\n\nexport default class ContextExplorer extends React.Component<\n  ContextExplorerProps,\n  ContextExplorerState\n> {\n  constructor(props: ContextExplorerProps) {\n    super(props);\n    this.state = {\n      opened: {},\n      expression: null,\n      messageVisible: false,\n      showEmpty: false,\n      message: null\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleHide(): void {\n    this.props.onClose();\n  }\n\n  private isOpen(path: PathStep[]): boolean {\n    let openState: any = this.state.opened;\n    for (const step of path) {\n      openState = openState[step];\n      if (!openState) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private handleCopyPath(key: PathStep, prevPath: PathStep[]) {\n    const path: PathStep[] = [...prevPath, key];\n    const expression = '@' + path.join('.');\n    copyToClipboard(expression);\n    this.setState({ expression, messageVisible: true, message: null }, () => {\n      window.setTimeout(() => {\n        if (this.state.expression === expression) {\n          this.setState({ messageVisible: false });\n        }\n      }, 1500);\n    });\n  }\n\n  private handleToggleHide(): void {\n    const message = this.state.showEmpty\n      ? i18n.t('context_explorer.hide_empty', 'Showing keys with values')\n      : i18n.t('context_explorer.show_empty', 'Showing all keys');\n    this.setState(\n      { showEmpty: !this.state.showEmpty, message, expression: null, messageVisible: true },\n      () => {\n        window.setTimeout(() => {\n          if (this.state.message === message) {\n            this.setState({ messageVisible: false });\n          }\n        }, 1000);\n      }\n    );\n  }\n\n  private handlePathClick(key: PathStep, prevPath: PathStep[]) {\n    const opened = { ...this.state.opened };\n    const path: PathStep[] = [...prevPath, key];\n\n    let openPath: any = opened;\n    while (path.length > 0) {\n      const next = path.shift();\n\n      let closing = false;\n      // if it's the last one, check if toggling\n      if (path.length === 0) {\n        if (openPath[next]) {\n          closing = true;\n        }\n      }\n\n      if (closing) {\n        delete openPath[next];\n      } else {\n        const existing = openPath[next] || {};\n        // make sure it exists\n        openPath[next] = existing;\n      }\n\n      // dive down\n      openPath = openPath[next];\n    }\n\n    this.setState({ opened });\n  }\n\n  private renderContextNode(name: string, value: any, path: PathStep[]): JSX.Element {\n    if (!name) {\n      return null;\n    }\n\n    const newPath = [...path, name];\n    if (EXCLUDED_PATHS[newPath.join('.')]) {\n      return null;\n    }\n\n    const valueType = typeof value;\n    let text = valueType !== 'object' ? value : '';\n    let hasChildren = value && valueType === 'object' && Object.keys(value).length > 0;\n\n    if (value && value.hasOwnProperty(DEFAULT_KEY)) {\n      text = value[DEFAULT_KEY];\n      if (Object.keys(value).length === 1) {\n        hasChildren = false;\n      }\n    }\n\n    const isOpen = this.isOpen(newPath);\n\n    const arrowStyles = cx({\n      [styles.arrow_right]: true,\n      [styles.has_children]: hasChildren,\n      [styles.open]: isOpen\n    });\n    const keyStyles = cx({ [styles.key]: true, [styles.has_children]: hasChildren });\n    const keySummary = Array.isArray(value) ? `[${value.length}]` : null;\n\n    const onClick = (evt: React.MouseEvent<HTMLDivElement>) => {\n      if (evt.shiftKey) {\n        this.handleCopyPath(name, path);\n      } else {\n        if (hasChildren) {\n          this.handlePathClick(name, path);\n        }\n      }\n    };\n\n    return (\n      <div key={name + path.length}>\n        <div\n          className={styles.row}\n          style={{ marginLeft: path.length * 10 + 'px' }}\n          onClick={onClick}\n        >\n          <div className={arrowStyles}>›</div>\n          <div className={keyStyles}>\n            {name}\n            <div className={styles.key_summary}>{keySummary}</div>\n            <div\n              className={styles.clipboard + ' fe-clipboard-empty'}\n              onClick={(evt: React.MouseEvent<HTMLDivElement>) => {\n                evt.stopPropagation();\n                this.handleCopyPath(name, path);\n              }}\n            ></div>\n          </div>\n          <div className={styles.str_value}>{text}</div>\n        </div>\n        {isOpen ? this.renderProperties(value, newPath) : null}\n      </div>\n    );\n  }\n\n  private renderProperties(value: any, path: PathStep[] = []): JSX.Element {\n    if (!value) {\n      return null;\n    }\n\n    return (\n      <>\n        {Object.keys(value).map((key: string) => {\n          // don't show default key as a property\n          if (key !== DEFAULT_KEY) {\n            return this.renderContextNode(key, value[key], path);\n          }\n          return null;\n        })}\n      </>\n    );\n  }\n\n  public render(): JSX.Element {\n    let context = this.props.contents;\n    if (this.props.contents && !this.state.showEmpty) {\n      context = pruneEmpty(JSON.parse(JSON.stringify(this.props.contents)));\n    }\n\n    let message = null;\n    if (this.state.message || this.state.expression) {\n      if (this.state.message) {\n        message = this.state.message;\n      } else if (this.state.expression) {\n        message = (\n          <Trans\n            i18nKey=\"context_explorer.copied_expression\"\n            values={{ expression: this.state.expression }}\n          >\n            Copied <span className={styles.expression}>[[expression]]</span> to clipboard\n          </Trans>\n        );\n      }\n    }\n\n    const messageStyle = cx({\n      [styles.message]: true,\n      [styles.visible]: this.state.messageVisible\n    });\n\n    return (\n      <div className={styles.context_explorer + ' ' + (this.props.visible ? styles.visible : '')}>\n        <div className={messageStyle}>{message}</div>\n        <div className={styles.panel}>{this.renderProperties(context)}</div>\n        <div className={styles.footer}>\n          <div\n            className={styles.empty_toggle}\n            onClick={() => {\n              this.handleToggleHide();\n            }}\n          >\n            <div className={this.state.showEmpty ? 'fe-eye' : 'fe-eye-crossed'}></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport { FlowDefinition, StickyNote } from 'flowTypes';\nimport * as React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea/lib';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { DragEvent } from 'services/Plumber';\nimport AppState from 'store/state';\nimport { DispatchWithState, UpdateSticky, updateSticky } from 'store/thunks';\nimport { CONFIRMATION_TIME, QUIET_NOTE, snapToGrid } from 'utils';\n\nimport styles from './Sticky.module.scss';\nimport i18n from 'config/i18n';\n\ntype DragFunction = (event: DragEvent) => void;\nexport const STICKY_SPEC_ID: string = 'sticky-container';\nexport const STICKY_TITLE = i18n.t('sticky.title', 'New Note');\nexport const STICKY_BODY = i18n.t('sticky.body', '...');\n\nexport interface StickyPassedProps {\n  uuid: string;\n  sticky: StickyNote;\n  selected: boolean;\n}\n\nexport interface StickyStoreProps {\n  definition: FlowDefinition;\n  updateSticky: UpdateSticky;\n}\n\nexport type StickyProps = StickyPassedProps & StickyStoreProps;\n\n/**\n * We have internal state to track as the user types so\n * we can debounce updates to the store.\n */\ninterface StickyState {\n  title: string;\n  body: string;\n  color: string;\n  showConfirmation: boolean;\n}\n\nconst COLOR_OPTIONS: any = {\n  yellow: styles.yellow,\n  blue: styles.blue,\n  green: styles.green,\n  purple: styles.purple,\n  gray: styles.gray\n};\n\nexport class Sticky extends React.Component<StickyProps, StickyState> {\n  private dragging = false;\n  private ele: HTMLDivElement;\n  private debounceTextChanges: number;\n  private showConfirmation: number;\n\n  public DEFUALT_TITLE = 'New Note';\n  public DEFUALT_BODY = '...';\n\n  constructor(props: StickyProps & StickyStoreProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^on/, /^get/, /^is/, /^handle/]\n    });\n\n    this.state = {\n      title: this.props.sticky.title,\n      body: this.props.sticky.body,\n      color: this.props.sticky.color,\n      showConfirmation: false\n    };\n  }\n\n  private isSelected(): boolean {\n    return this.props.selected;\n  }\n\n  private onRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.ele = ref);\n  }\n\n  public componentWillUnmount(): void {\n    if (this.showConfirmation) {\n      window.clearTimeout(this.showConfirmation);\n    }\n\n    if (this.debounceTextChanges) {\n      window.clearTimeout(this.debounceTextChanges);\n    }\n  }\n\n  public handleDrag(event: DragEvent): void {\n    // noop\n  }\n\n  public handleDragStop(event: DragEvent): void {\n    // snap us to the same grid\n    const { left, top } = snapToGrid(event.finalPos[0], event.finalPos[1]);\n    this.ele.style.left = `${left}px`;\n    this.ele.style.top = `${top}px`;\n\n    this.props.sticky.position = { left, top };\n    this.props.updateSticky(this.props.uuid, this.props.sticky);\n  }\n\n  private onUpdateText(): void {\n    if (this.debounceTextChanges) {\n      window.clearTimeout(this.debounceTextChanges);\n    }\n\n    this.debounceTextChanges = window.setTimeout(() => {\n      const updated = { ...this.props.sticky };\n      updated.title = this.state.title;\n      updated.body = this.state.body;\n      this.props.updateSticky(this.props.uuid, updated);\n      this.debounceTextChanges = null;\n    }, QUIET_NOTE);\n  }\n\n  private handleChangeTitle(event: React.FormEvent<HTMLTextAreaElement>): void {\n    this.setState({ title: event.currentTarget.value });\n    this.onUpdateText();\n  }\n\n  private handleChangeBody(event: React.FormEvent<HTMLTextAreaElement>): void {\n    this.setState({ body: event.currentTarget.value });\n    this.onUpdateText();\n  }\n\n  public handleClickRemove(event: React.MouseEvent<HTMLDivElement>): void {\n    if (this.state.showConfirmation) {\n      this.props.updateSticky(this.props.uuid, null);\n    } else {\n      this.setState({ showConfirmation: true });\n      this.showConfirmation = window.setTimeout(() => {\n        this.setState({ showConfirmation: false });\n      }, CONFIRMATION_TIME);\n    }\n  }\n\n  private handleChangeColor(color: string): void {\n    this.props.sticky.color = color;\n    this.props.updateSticky(this.props.uuid, this.props.sticky);\n    this.setState({ color });\n  }\n\n  private handleSelectForValue(element: HTMLTextAreaElement, text: string): void {\n    if (element.value === text) {\n      window.setTimeout(() => {\n        element.select();\n      }, 0);\n    }\n  }\n\n  private handleTitleFocused(e: React.FocusEvent<HTMLTextAreaElement>): void {\n    this.handleSelectForValue(e.currentTarget, STICKY_TITLE);\n  }\n\n  private handleBodyFocused(e: React.FocusEvent<HTMLTextAreaElement>): void {\n    this.handleSelectForValue(e.currentTarget, STICKY_BODY);\n  }\n\n  private getColorChooser(): JSX.Element {\n    return (\n      <div className={styles.color_chooser_container}>\n        <div className={styles.color_chooser}>\n          {Object.keys(COLOR_OPTIONS).map((color: string) => {\n            return (\n              <div\n                key={this.props.uuid + color}\n                onClick={() => {\n                  this.handleChangeColor(color);\n                }}\n                className={styles.color_option + ' ' + COLOR_OPTIONS[color]}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    // add our removal class if necessary\n    const titleClasses = [styles.title_wrapper];\n    if (this.state.showConfirmation) {\n      titleClasses.push(styles.removal);\n    }\n\n    const containerClasses = [styles.sticky_container];\n    if (!this.props.sticky.color) {\n      this.props.sticky.color = 'yellow';\n    }\n\n    const stickyClasses = [styles.sticky];\n    if (this.isSelected()) {\n      stickyClasses.push(styles.selected);\n    }\n\n    containerClasses.push(COLOR_OPTIONS[this.props.sticky.color]);\n    const colorChooser = this.getColorChooser();\n\n    return (\n      <div\n        key={this.props.uuid}\n        className={containerClasses.join(' ')}\n        data-spec={STICKY_SPEC_ID}\n        ref={this.onRef}\n        id={this.props.uuid}\n      >\n        <div className={stickyClasses.join(' ')}>\n          <div className={titleClasses.join(' ')}>\n            <div className={styles.remove_button} onClick={this.handleClickRemove}>\n              <span className=\"fe-x\" />\n            </div>\n            <div className={styles.confirmation}>Remove?</div>\n            <TextareaAutosize\n              className={styles.title}\n              value={this.state.title}\n              onChange={this.handleChangeTitle}\n              onFocusCapture={this.handleTitleFocused}\n            />\n          </div>\n          <div className={styles.body_wrapper}>\n            <TextareaAutosize\n              className={styles.body}\n              value={this.state.body}\n              onChange={this.handleChangeBody}\n              onFocusCapture={this.handleBodyFocused}\n            />\n            {colorChooser}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({ flowContext: { definition } }: AppState) => ({\n  definition\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) => {\n  return bindActionCreators({ updateSticky }, dispatch);\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { forwardRef: false }\n)(Sticky);\n","import { Exit, FlowNode } from 'flowTypes';\nimport { GRID_SIZE, timeStart, timeEnd, debounce } from 'utils';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nconst {\n  jsPlumb: { importDefaults }\n} = require('../../node_modules/jsplumb/dist/js/jsplumb');\nexport interface DragEvent {\n  el: Element;\n  pos: number[];\n  finalPos: number[];\n  e: MouseEvent;\n  clientX: number;\n  clientY: number;\n  target: Element;\n}\n\nexport interface PendingConnections {\n  [id: string]: {\n    source: string;\n    target: string;\n    className: string;\n    slot: number;\n    totalSlots: number;\n  };\n}\n\nexport const REPAINT_DURATION = 600;\n\nexport const TARGET_DEFAULTS = {\n  anchor: ['Continuous', { shape: 'Rectangle', faces: ['top', 'left', 'right'] }],\n  endpoint: [\n    'Rectangle',\n    {\n      width: 23,\n      height: 23,\n      cssClass: 'plumb-endpoint',\n      hoverClass: 'plumb-endpoint-hover'\n    }\n  ],\n  dropOptions: {\n    tolerance: 'touch',\n    hoverClass: 'plumb-drop-hover',\n    isTarget: false\n  },\n  dragAllowedWhenFull: false,\n  deleteEndpointsOnEmpty: true,\n  isTarget: false\n};\n\nexport const SOURCE_DEFAULTS = {\n  anchor: 'BottomCenter',\n  maxConnections: 1,\n  dragAllowedWhenFull: false,\n  deleteEndpointsOnEmpty: true,\n  isSource: true\n};\n\nexport const getAnchor = (sourceEle: any, targetEle: any): any[] => {\n  return [\n    'Continuous',\n    {\n      shape: 'Dot',\n      faces:\n        sourceEle.getBoundingClientRect().bottom + GRID_SIZE / 3 <\n        targetEle.getBoundingClientRect().top\n          ? ['top']\n          : ['right', 'left']\n    }\n  ];\n};\n\nconst defaultConnector = [\n  'Flowchart',\n  {\n    stub: 12,\n    midpoint: 0.75,\n    alwaysRespectStubs: false,\n    gap: [0, 5],\n    cornerRadius: 3\n  }\n];\n\n/* istanbul ignore next */\nexport default class Plumber {\n  public jsPlumb: any;\n\n  // we batch up connections to apply them together\n  private pendingConnections: PendingConnections = {};\n  private pendingConnectionTimeout: any;\n\n  private animateInterval: any = null;\n\n  private onLoadFunction: () => void = null;\n\n  constructor() {\n    this.jsPlumb = importDefaults({\n      DragOptions: { cursor: 'pointer', zIndex: 1000 },\n      DropOptions: { tolerance: 'touch', hoverClass: 'plumb-hover' },\n      Endpoint: 'Rectangle',\n      EndpointStyle: { strokeStyle: 'transparent' },\n      PaintStyle: { strokeWidth: 3.5 },\n      ConnectionsDetachable: true,\n      Connector: defaultConnector,\n      ConnectionOverlays: [\n        [\n          'PlainArrow',\n          {\n            location: 0.999,\n            width: 12,\n            length: 12,\n            cssClass: 'jtk-arrow'\n          }\n        ]\n      ]\n    });\n\n    this.debug = this.debug.bind(this);\n    this.setSourceEnabled = this.setSourceEnabled.bind(this);\n    this.makeSource = this.makeSource.bind(this);\n    this.makeTarget = this.makeTarget.bind(this);\n    this.connectExit = this.connectExit.bind(this);\n    this.setDragSelection = this.setDragSelection.bind(this);\n    this.clearDragSelection = this.clearDragSelection.bind(this);\n    this.removeFromDragSelection = this.removeFromDragSelection.bind(this);\n    this.cancelDurationRepaint = this.cancelDurationRepaint.bind(this);\n    this.remove = this.remove.bind(this);\n    this.handlePendingConnections = this.handlePendingConnections.bind(this);\n    this.checkForPendingConnections = this.checkForPendingConnections.bind(this);\n    this.connect = this.connect.bind(this);\n    this.bind = this.bind.bind(this);\n    this.repaint = this.repaint.bind(this);\n    this.recalculate = this.recalculate.bind(this);\n    this.reset = this.reset.bind(this);\n    this.updateClass = this.updateClass.bind(this);\n    this.rerouteAnchors = this.rerouteAnchors.bind(this);\n  }\n\n  public setContainer(containerId: string) {\n    this.jsPlumb.setContainer(containerId);\n  }\n\n  public debug(): any {\n    return this.jsPlumb;\n  }\n\n  public setSourceEnabled(uuid: string, enabled: boolean): void {\n    this.jsPlumb.setSourceEnabled(uuid, enabled);\n  }\n\n  public makeSource(uuid: string): any {\n    return this.jsPlumb.makeSource(uuid, SOURCE_DEFAULTS);\n  }\n\n  public makeTarget(uuid: string): void {\n    this.jsPlumb.makeTarget(uuid, TARGET_DEFAULTS);\n  }\n\n  public connectExit(node: FlowNode, exit: Exit, className: string = null): void {\n    this.connect(\n      `${node.uuid}:${exit.uuid}`,\n      exit.destination_uuid,\n      className,\n      node.exits.findIndex((e: Exit) => e.uuid === exit.uuid),\n      node.exits.length\n    );\n  }\n\n  public updateClass(node: FlowNode, exit: Exit, className: string, add: boolean): void {\n    const source = `${node.uuid}:${exit.uuid}`;\n    const connection = this.jsPlumb.select({ source });\n    if (add) {\n      connection.addClass(className);\n    } else {\n      connection.removeClass(className);\n    }\n  }\n\n  public removeFromDragSelection(uuid: string): void {\n    this.jsPlumb.removeFromDragSelection(uuid);\n  }\n\n  public setDragSelection(selected: { [uuid: string]: boolean }): void {\n    this.cancelDurationRepaint();\n    this.jsPlumb.clearDragSelection();\n\n    Object.keys(selected).forEach(uuid => this.jsPlumb.addToDragSelection(uuid));\n  }\n\n  public clearDragSelection(): void {\n    this.jsPlumb.clearDragSelection();\n  }\n\n  public cancelDurationRepaint(): void {\n    if (this.animateInterval) {\n      window.clearInterval(this.animateInterval);\n      this.animateInterval = null;\n    }\n  }\n\n  private handlePendingConnections(): void {\n    const targets: { [id: string]: boolean } = {};\n\n    const batch = Object.keys(this.pendingConnections).length;\n    if (batch > 1) {\n      timeStart('Batched ' + batch + ' connections');\n    }\n\n    this.jsPlumb.batch(() => {\n      for (const key in this.pendingConnections) {\n        if (this.pendingConnections.hasOwnProperty(key)) {\n          const connection = this.pendingConnections[key];\n          const { source, target, className, slot, totalSlots } = connection;\n\n          const anchors = target\n            ? [\n                'Bottom',\n                getAnchor(document.getElementById(source), document.getElementById(target))\n              ]\n            : [];\n\n          if (source != null) {\n            // any existing connections for our source need to be deleted\n            this.jsPlumb.select({ source }).delete({ fireEvent: false });\n\n            const start = totalSlots < 5 ? 0.75 : 0.35;\n            let midpoint = start + slot * 0.15;\n            const exitMiddle = totalSlots / 2;\n            if (slot > exitMiddle) {\n              midpoint = start - 0.05 + (totalSlots - slot) * 0.15;\n            }\n\n            // add reasonable boundaries for midpoints\n            midpoint = Math.max(Math.min(0.9, midpoint), 0.1);\n\n            const connector: any = [...defaultConnector];\n            connector[1].midpoint = midpoint;\n\n            // now make our new connection\n            if (target != null) {\n              this.jsPlumb.connect({\n                source,\n                target,\n                anchors,\n                fireEvent: false,\n                cssClass: className,\n                detachable: !className,\n                connector\n              });\n            }\n          }\n\n          if (target != null) {\n            targets[target] = true;\n          }\n\n          delete this.pendingConnections[key];\n        }\n      }\n    }, false);\n\n    if (batch > 1) {\n      timeEnd('Batched ' + batch + ' connections');\n    }\n\n    // fire our callback for who is embedding us\n    if (this.onLoadFunction) {\n      this.onLoadFunction();\n      this.onLoadFunction = null;\n    }\n  }\n\n  public triggerLoaded(onLoad: () => void): void {\n    if (onLoad) {\n      if (Object.keys(this.pendingConnections).length === 0) {\n        onLoad();\n      }\n      this.onLoadFunction = onLoad;\n    }\n  }\n\n  private checkForPendingConnections(): void {\n    if (this.pendingConnectionTimeout) {\n      window.clearTimeout(this.pendingConnectionTimeout);\n    }\n\n    this.pendingConnectionTimeout = window.setTimeout(() => {\n      this.handlePendingConnections();\n    }, 0);\n  }\n\n  public connect(\n    source: string,\n    target: string,\n    className: string = null,\n    slot: number = 0,\n    totalSlots: number = 0\n  ): void {\n    this.pendingConnections[`${source}:${target}:${className}`] = {\n      source,\n      target,\n      className,\n      slot,\n      totalSlots\n    };\n    this.checkForPendingConnections();\n  }\n\n  public bind(event: string, onEvent: Function): void {\n    return this.jsPlumb.bind(event, onEvent);\n  }\n\n  public repaint(uuid?: string): void {\n    if (!uuid) {\n      this.jsPlumb.recalculateOffsets();\n      this.jsPlumb.repaintEverything();\n    } else {\n      this.jsPlumb.recalculateOffsets(uuid);\n      this.jsPlumb.repaint(uuid);\n    }\n  }\n\n  public remove(uuid: string): void {\n    if (this.jsPlumb.isSource(uuid)) {\n      this.jsPlumb.unmakeSource(uuid);\n      this.jsPlumb.remove(uuid);\n    } else if (this.jsPlumb.isTarget(uuid)) {\n      this.jsPlumb.deleteConnectionsForElement(uuid);\n    }\n  }\n\n  /**\n   *\n   * Reroutes the connections for actively moving nodes. We try to direct\n   * connections as much as possible.\n   * @param elements the targets and sources that ar moving around\n   */\n  public rerouteAnchors(elements: Element[]): void {\n    elements.forEach((ele: Element) => {\n      const uuid = ele.id;\n      const connections = this.jsPlumb\n        .getConnections({ target: uuid })\n        .concat(this.jsPlumb.getConnections({ source: uuid }));\n      for (const c of connections) {\n        c.endpoints[1].setAnchor(getAnchor(c.endpoints[0].element, c.endpoints[1].element));\n      }\n    });\n  }\n\n  public revalidate(elements: Element[]): void {\n    this.jsPlumb.revalidate(elements);\n\n    // reroute our anchors but only after we stop moving for a bit\n    debounce(this.rerouteAnchors, 200, () => {\n      this.rerouteAnchors(elements);\n    });\n  }\n\n  public recalculate(uuid: string): void {\n    window.setTimeout(() => {\n      this.jsPlumb.revalidate(uuid);\n    }, 100);\n  }\n\n  public reset(): void {\n    this.jsPlumb.reset();\n  }\n\n  public getPlumb(): any {\n    return this.jsPlumb;\n  }\n}\n","import { FlowStoreProps } from 'components/flow/Flow';\nimport { DebugState } from 'store/editor';\n\nconst mutate = require('immutability-helper');\n\n/* istanbul ignore next */\nexport default class Debug {\n  private props: FlowStoreProps;\n  private state: DebugState;\n\n  constructor(props: FlowStoreProps, initial: DebugState) {\n    this.props = props;\n    this.state = initial || { showUUIDs: false };\n  }\n\n  public showUUIDs(): DebugState {\n    const updated = mutate(this.state, { $merge: { showUUIDs: true } });\n    this.props.mergeEditorState({ debug: updated });\n    return updated;\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Button from 'components/button/Button';\nimport { Canvas } from 'components/canvas/Canvas';\nimport { CanvasDraggableProps } from 'components/canvas/CanvasDraggable';\nimport Node from 'components/flow/node/Node';\nimport { getDraggedFrom } from 'components/helpers';\nimport NodeEditor from 'components/nodeeditor/NodeEditor';\nimport Simulator from 'components/simulator/Simulator';\nimport Sticky, { STICKY_BODY, STICKY_TITLE } from 'components/sticky/Sticky';\nimport { ConfigProviderContext, fakePropType } from 'config/ConfigProvider';\nimport { FlowDefinition, FlowMetadata, FlowPosition } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Plumber from 'services/Plumber';\nimport { DragSelection, DebugState } from 'store/editor';\nimport { RenderNode } from 'store/flowContext';\nimport { createEmptyNode, detectLoops, getOrderedNodes } from 'store/helpers';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport {\n  ConnectionEvent,\n  DispatchWithState,\n  mergeEditorState,\n  MergeEditorState,\n  NoParamsAC,\n  onConnectionDrag,\n  OnConnectionDrag,\n  OnOpenNodeEditor,\n  onOpenNodeEditor,\n  onRemoveNodes,\n  OnRemoveNodes,\n  OnUpdateCanvasPositions,\n  onUpdateCanvasPositions,\n  resetNodeEditingState,\n  UpdateConnection,\n  updateConnection,\n  updateSticky,\n  UpdateSticky\n} from 'store/thunks';\nimport {\n  createUUID,\n  isRealValue,\n  NODE_PADDING,\n  renderIf,\n  snapToGrid,\n  timeEnd,\n  timeStart\n} from 'utils';\nimport Debug from 'utils/debug';\n\nimport styles from './Flow.module.scss';\nimport { Trans } from 'react-i18next';\nimport { PopTabType } from 'config/interfaces';\nimport i18n from 'config/i18n';\n\ndeclare global {\n  interface Window {\n    fe: any;\n  }\n}\n\nexport interface FlowStoreProps {\n  ghostNode: RenderNode;\n  debug: DebugState;\n  translating: boolean;\n  popped: string;\n  dragActive: boolean;\n\n  mergeEditorState: MergeEditorState;\n\n  definition: FlowDefinition;\n  nodes: { [uuid: string]: RenderNode };\n  metadata: FlowMetadata;\n  nodeEditorSettings: NodeEditorSettings;\n\n  updateConnection: UpdateConnection;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  onUpdateCanvasPositions: OnUpdateCanvasPositions;\n  onRemoveNodes: OnRemoveNodes;\n  resetNodeEditingState: NoParamsAC;\n  onConnectionDrag: OnConnectionDrag;\n  updateSticky: UpdateSticky;\n}\n\nexport interface Translations {\n  [uuid: string]: any;\n}\n\nexport const DRAG_THRESHOLD = 3;\nexport const REPAINT_TIMEOUT = 500;\nexport const GHOST_POSITION_INITIAL = { left: -1000, top: -1000 };\n\nexport const nodeSpecId = 'node';\nexport const nodesContainerSpecId = 'node-container';\nexport const ghostNodeSpecId = 'ghost-node';\nexport const dragSelectSpecId = 'drag-select';\n\nexport const isDraggingBack = (event: ConnectionEvent) => {\n  return event.suspendedElementId === event.targetId && event.source !== null;\n};\n\nexport const getDragStyle = (drag: DragSelection) => {\n  const left = Math.min(drag.startX, drag.currentX);\n  const top = Math.min(drag.startY, drag.currentY);\n  const width = Math.max(drag.startX, drag.currentX) - left;\n  const height = Math.max(drag.startY, drag.currentY) - top;\n  return {\n    left,\n    top,\n    width,\n    height\n  };\n};\n\nexport class Flow extends React.PureComponent<FlowStoreProps, {}> {\n  private Plumber: Plumber;\n  private nodeContainerUUID: string;\n\n  // Refs\n  private ghost: any;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: FlowStoreProps, context: ConfigProviderContext) {\n    super(props, context);\n\n    this.nodeContainerUUID = createUUID();\n\n    this.Plumber = new Plumber();\n\n    /* istanbul ignore next */\n    if (context.config.debug) {\n      window.fe = new Debug(props, this.props.debug);\n    }\n\n    bindCallbacks(this, {\n      include: [/Ref$/, /^on/, /^is/, /^get/, /^handle/]\n    });\n\n    timeStart('Loaded Flow');\n  }\n\n  private ghostRef(ref: any): any {\n    return (this.ghost = ref);\n  }\n\n  public componentDidMount(): void {\n    this.Plumber.bind('connection', (event: ConnectionEvent) =>\n      this.props.updateConnection(event.sourceId, event.targetId)\n    );\n    this.Plumber.bind('beforeDrag', (event: ConnectionEvent) => {\n      this.beforeConnectionDrag(event);\n    });\n\n    this.Plumber.bind('connectionDrag', (event: ConnectionEvent) => {\n      this.props.onConnectionDrag(event, this.context.config.flowType);\n    });\n\n    this.Plumber.bind('connectionDragStop', (event: ConnectionEvent) =>\n      this.onConnectorDrop(event)\n    );\n    this.Plumber.bind(\n      'beforeStartDetach',\n      (event: ConnectionEvent) => !this.props.translating && this.context.config.mutable\n    );\n    this.Plumber.bind('beforeDetach', (event: ConnectionEvent) => true);\n    this.Plumber.bind('beforeDrop', (event: ConnectionEvent) => this.onBeforeConnectorDrop(event));\n    this.Plumber.triggerLoaded(this.context.config.onLoad);\n\n    timeEnd('Loaded Flow');\n  }\n\n  public componentWillUnmount(): void {\n    this.Plumber.reset();\n  }\n\n  /**\n   * Called right before a connector is dropped onto a new node\n   */\n  private onBeforeConnectorDrop(event: ConnectionEvent): boolean {\n    this.props.resetNodeEditingState();\n    const fromNodeUUID = event.sourceId.split(':')[0];\n    try {\n      detectLoops(this.props.nodes, fromNodeUUID, event.targetId);\n    } catch {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Called the moment a connector is done dragging, whether it is dropped on an\n   * existing node or on to empty space.\n   */\n  private onConnectorDrop(event: ConnectionEvent): boolean {\n    const ghostNode = this.props.ghostNode;\n    // Don't show the node editor if we a dragging back to where we were\n    if (isRealValue(ghostNode) && !isDraggingBack(event)) {\n      // Wire up the drag from to our ghost node\n      this.Plumber.recalculate(ghostNode.node.uuid);\n\n      const dragPoint = getDraggedFrom(ghostNode);\n\n      this.Plumber.connect(dragPoint.nodeUUID + ':' + dragPoint.exitUUID, ghostNode.node.uuid);\n\n      // Save our position for later\n      const { left, top } = (this.ghost &&\n        snapToGrid(this.ghost.ele.offsetLeft, this.ghost.ele.offsetTop)) || { left: 0, top: 0 };\n\n      this.props.ghostNode.ui.position = { left, top };\n\n      let originalAction = null;\n      if (ghostNode.node.actions && ghostNode.node.actions.length === 1) {\n        originalAction = ghostNode.node.actions[0];\n      }\n\n      // Bring up the node editor\n      this.props.onOpenNodeEditor({\n        originalNode: ghostNode,\n        originalAction\n      });\n    }\n\n    if (isDraggingBack(event)) {\n      this.props.mergeEditorState({ ghostNode: null });\n    }\n\n    /* istanbul ignore next */\n    document.removeEventListener('mousemove', (window as any).ghostListener);\n\n    return true;\n  }\n\n  private beforeConnectionDrag(event: ConnectionEvent): boolean {\n    if (event.source) {\n      event.source.dispatchEvent(new Event('disconnect'));\n    }\n    return !this.props.translating;\n  }\n\n  private handleStickyCreation(props: CanvasDraggableProps) {\n    const stickyMap = this.props.definition._ui.stickies || {};\n    const uuid = props.uuid;\n    return <Sticky key={uuid} uuid={uuid} sticky={stickyMap[uuid]} selected={props.selected} />;\n  }\n\n  private handleNodeCreation(props: CanvasDraggableProps) {\n    const onlyNode = Object.keys(this.props.nodes).length === 1;\n    return (\n      <Node\n        onlyNode={onlyNode}\n        startingNode={props.idx === 0}\n        selected={props.selected}\n        key={props.uuid}\n        data-spec={nodeSpecId}\n        nodeUUID={props.uuid}\n        plumberMakeTarget={this.Plumber.makeTarget}\n        plumberRemove={this.Plumber.remove}\n        plumberRecalculate={this.Plumber.recalculate}\n        plumberMakeSource={this.Plumber.makeSource}\n        plumberConnectExit={this.Plumber.connectExit}\n        plumberUpdateClass={this.Plumber.updateClass}\n      />\n    );\n  }\n\n  private getNodes(): CanvasDraggableProps[] {\n    return getOrderedNodes(this.props.nodes).map((renderNode: RenderNode, idx: number) => {\n      return {\n        uuid: renderNode.node.uuid,\n        position: renderNode.ui.position,\n        elementCreator: this.handleNodeCreation,\n        config: renderNode,\n        idx\n      };\n    });\n  }\n\n  private getStickies(): CanvasDraggableProps[] {\n    const stickyMap = this.props.definition._ui.stickies || {};\n    return Object.keys(stickyMap).map((uuid: string, idx: number) => {\n      return {\n        uuid,\n        elementCreator: this.handleStickyCreation,\n        position: stickyMap[uuid].position,\n        idx\n      };\n    });\n  }\n\n  private getDragNode(): JSX.Element {\n    return isRealValue(this.props.ghostNode) ? (\n      <div\n        data-spec={ghostNodeSpecId}\n        key={this.props.ghostNode.node.uuid}\n        style={{ position: 'absolute', display: 'block', visibility: 'hidden' }}\n      >\n        <Node\n          onlyNode={false}\n          selected={false}\n          startingNode={false}\n          ref={this.ghostRef}\n          ghost={true}\n          nodeUUID={this.props.ghostNode.node.uuid}\n          plumberMakeTarget={this.Plumber.makeTarget}\n          plumberRemove={this.Plumber.remove}\n          plumberRecalculate={this.Plumber.recalculate}\n          plumberMakeSource={this.Plumber.makeSource}\n          plumberConnectExit={this.Plumber.connectExit}\n          plumberUpdateClass={this.Plumber.updateClass}\n        />\n      </div>\n    ) : null;\n  }\n\n  private getSimulator(): JSX.Element {\n    return renderIf(this.context.config.endpoints && this.context.config.endpoints.simulateStart)(\n      <Simulator\n        key=\"simulator\"\n        popped={this.props.popped}\n        mergeEditorState={this.props.mergeEditorState}\n        onToggled={(visible: boolean, tab: PopTabType) => {\n          this.props.mergeEditorState({\n            popped: visible ? tab : null\n          });\n        }}\n      />\n    );\n  }\n\n  private getNodeEditor(): JSX.Element {\n    return renderIf(this.props.nodeEditorSettings !== null)(\n      <NodeEditor\n        key=\"node-editor\"\n        helpArticles={this.context.config.help}\n        plumberConnectExit={this.Plumber.connectExit}\n      />\n    );\n  }\n\n  // TODO: this should be a callback from the canvas\n  private handleDoubleClick(position: FlowPosition): void {\n    const { left, top } = position;\n    this.props.updateSticky(createUUID(), {\n      position: snapToGrid(left - 90 + NODE_PADDING, top - 40),\n      title: STICKY_TITLE,\n      body: STICKY_BODY\n    });\n  }\n\n  private getEmptyFlow(): JSX.Element {\n    return (\n      <div key=\"create_node\" className={styles.empty_flow}>\n        <Trans i18nKey=\"empty_flow_message\">\n          <h1>Let's get started</h1>\n          <div>\n            We recommend starting your flow by sending a message. This message will be sent to\n            anybody right after they join the flow. This is your chance to send a single message or\n            ask them a question.\n          </div>\n        </Trans>\n\n        <Button\n          name={i18n.t('buttons.create_message', 'Create Message')}\n          onClick={() => {\n            const emptyNode = createEmptyNode(null, null, 1, this.context.config.flowType);\n            this.props.onOpenNodeEditor({\n              originalNode: emptyNode,\n              originalAction: emptyNode.node.actions[0]\n            });\n          }}\n        />\n      </div>\n    );\n  }\n\n  /* \n  public componentDidUpdate(prevProps: FlowStoreProps): void {\n    traceUpdate(this, prevProps);\n  }\n  */\n\n  public handleDragging(uuids: string[]): void {\n    uuids.forEach((uuid: string) => {\n      try {\n        const ele = document.getElementById(uuid);\n        const exits = ele.querySelectorAll('.jtk-connected');\n        this.Plumber.revalidate([ele, ...exits]);\n      } catch (error) {}\n    });\n  }\n\n  public handleCanvasLoaded(): void {\n    this.Plumber.setContainer('canvas');\n  }\n\n  public render(): JSX.Element {\n    const nodes = this.getNodes();\n\n    const draggables = this.getStickies().concat(nodes);\n    return (\n      <div>\n        {nodes.length === 0 ? this.getEmptyFlow() : <>{this.getSimulator()}</>}\n        {this.getNodeEditor()}\n\n        <Canvas\n          mutable={this.context.config.mutable}\n          draggingNew={!!this.props.ghostNode && !this.props.nodeEditorSettings}\n          newDragElement={this.getDragNode()}\n          onDragging={this.handleDragging}\n          uuid={this.nodeContainerUUID}\n          dragActive={this.props.dragActive}\n          mergeEditorState={this.props.mergeEditorState}\n          onRemoveNodes={this.props.onRemoveNodes}\n          draggables={draggables}\n          onDoubleClick={this.handleDoubleClick}\n          onUpdatePositions={this.props.onUpdateCanvasPositions}\n          onLoaded={this.handleCanvasLoaded}\n        ></Canvas>\n        <div id=\"activity_recent_messages\"></div>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { definition, metadata, nodes },\n  editorState: { ghostNode, debug, translating, popped, dragActive },\n  // tslint:disable-next-line: no-shadowed-variable\n  nodeEditor: { settings }\n}: AppState) => {\n  return {\n    nodeEditorSettings: settings,\n    definition,\n    nodes,\n    metadata,\n    ghostNode,\n    debug,\n    translating,\n    popped,\n    dragActive\n  };\n};\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      mergeEditorState,\n      resetNodeEditingState,\n      onConnectionDrag,\n      onOpenNodeEditor,\n      onUpdateCanvasPositions,\n      onRemoveNodes,\n      updateConnection,\n      updateSticky\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Flow);\n","import { desnake } from 'utils';\nimport i18next from 'i18next';\nimport { Translation, TranslationType, TranslationBundle } from './TranslatorTab';\n\nexport enum TranslationState {\n  COMPLETE = 'complete',\n  MISSING = 'missing'\n}\n\nexport const getMergedByType = (\n  bundle: TranslationBundle,\n  state: TranslationState,\n  type: TranslationType\n) => {\n  return bundle.translations\n    .filter(translation => {\n      switch (state) {\n        case TranslationState.COMPLETE:\n          return !!translation.to && translation.type === type;\n        case TranslationState.MISSING:\n          return !translation.to && translation.type === type;\n      }\n      return true;\n    })\n    .map(translation => (translation as any)[state === TranslationState.MISSING ? 'from' : 'to'])\n    .join(', ');\n};\n\nexport const findTranslations = (\n  type: TranslationType,\n  localizeableKeys: string[],\n  localizable: any,\n  localization: { [uuid: string]: any }\n): Translation[] => {\n  const translations: Translation[] = [];\n\n  localizeableKeys.forEach((attribute: string) => {\n    let keys = attribute.split('.');\n    let from = localizable as any;\n    let to: any = [];\n\n    while (keys.length > 0 && from) {\n      if (keys.length > 0 && from['uuid']) {\n        to = (localization || {})[from['uuid']];\n      }\n\n      const path = keys.shift();\n      if (to) {\n        to = to[path];\n      }\n      from = from[path];\n    }\n\n    if (from) {\n      if (to) {\n        to = to.join(', ');\n      }\n\n      if (Array.isArray(from)) {\n        from = from\n          .map((obj: any) => {\n            if (obj['name']) {\n              return obj['name'];\n            }\n            if (obj['arguments']) {\n              return obj['arguments'].join(' ');\n            }\n            return obj;\n          })\n          .join(', ');\n      }\n\n      if (from) {\n        translations.push({\n          type,\n          attribute,\n          from,\n          to\n        });\n      }\n    }\n  });\n\n  return translations;\n};\n\nexport const getFriendlyAttribute = (attribute: string) => {\n  if (attribute === 'categories') {\n    return i18next.t('translation.attributes.categories', 'Categories');\n  }\n\n  if (attribute === 'cases') {\n    return i18next.t('translation.attributes.cases', 'Rules');\n  }\n\n  if (attribute === 'text') {\n    return i18next.t('translation.attributes.text', 'Message');\n  }\n\n  if (attribute === 'quick_replies') {\n    return i18next.t('translation.attributes.quick_relpies', 'Quick Replies');\n  }\n\n  if (attribute === 'templating.variables') {\n    return i18next.t('translation.attributes.templates', 'Template Variables');\n  }\n\n  if (attribute === 'subject') {\n    return i18next.t('translation.attributes.subject', 'Subject');\n  }\n\n  if (attribute === 'body') {\n    return i18next.t('translation.attributes.body', 'Body');\n  }\n\n  return desnake(attribute);\n};\n\nexport const getBundleKey = (bundle: TranslationBundle) => {\n  return bundle.node_uuid + bundle.action_uuid;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { ConfigProviderContext } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Asset, Assets } from 'store/flowContext';\nimport AppState from 'store/state';\nimport { DispatchWithState, HandleLanguageChange, handleLanguageChange } from 'store/thunks';\n\nimport styles from './LanguageSelector.module.scss';\n\nexport interface LanguageSelectorProps {\n  language: Asset;\n  languages: Assets;\n  handleLanguageChange: HandleLanguageChange;\n}\n\nexport const containerClasses = 'language-selector';\n\nexport class LanguageSelector extends React.Component<LanguageSelectorProps> {\n  constructor(props: LanguageSelectorProps, context: ConfigProviderContext) {\n    super(props, context);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleLanguageChanged(language: Asset): void {\n    this.props.handleLanguageChange(language);\n  }\n\n  public handleLanguageSort(a: Asset, b: Asset): number {\n    if (a.id === 'base') {\n      return -1;\n    }\n\n    if (b.id === 'base') {\n      return 1;\n    }\n\n    if (a.order !== undefined && b.order !== undefined) {\n      return a.order - b.order;\n    }\n\n    return a.name.localeCompare(b.name);\n  }\n\n  public render(): JSX.Element {\n    if (!this.props.language) {\n      return null;\n    }\n\n    const languages = Object.keys(this.props.languages.items)\n      .map((iso: string) => this.props.languages.items[iso])\n      .sort(this.handleLanguageSort);\n\n    if (languages.length === 1) {\n      return null;\n    }\n\n    return (\n      <div className={containerClasses}>\n        {languages.map((lang: Asset, idx: number) => {\n          return (\n            <div key={'lang_' + lang.id} className={styles.language}>\n              {idx > 0 ? <div className={styles.separator}>|</div> : null}\n              <div\n                className={\n                  styles.language_link +\n                  ' ' +\n                  (this.props.language.id === lang.id ? styles.active : '')\n                }\n                onClick={() => {\n                  this.handleLanguageChanged(lang);\n                }}\n              >\n                {lang.name}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({ flowContext: { assetStore }, editorState: { language } }: AppState) => ({\n  languages: assetStore.languages,\n  language\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      handleLanguageChange\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LanguageSelector);\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\n\nimport styles from './PopTab.module.scss';\n\nexport interface PopTabProps {\n  color: string;\n  icon: string;\n  label: string;\n  header: string;\n  top: string;\n  visible: boolean;\n  onShow: () => void;\n  onHide: () => void;\n}\n\nexport interface PopTabState {\n  width: number;\n}\n\nexport class PopTab extends React.Component<PopTabProps, PopTabState> {\n  private poppedEle: HTMLDivElement;\n\n  constructor(props: PopTabProps) {\n    super(props);\n    this.state = { width: 258 };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public componentDidUpdate(): void {\n    if (this.state.width !== this.poppedEle.offsetWidth) {\n      this.setState({ width: this.poppedEle.offsetWidth });\n    }\n  }\n\n  private handlePoppedRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.poppedEle = ref);\n  }\n\n  private handleTabClick(): void {\n    this.props.onShow();\n  }\n\n  private handleClose(): void {\n    this.props.onHide();\n  }\n  public render(): JSX.Element {\n    return (\n      <div\n        className={\n          'pop_wrapper ' + styles.pop_wrapper + ' ' + (this.props.visible ? styles.visible : '')\n        }\n        style={{\n          right: -this.state.width,\n          top: this.props.top\n        }}\n      >\n        <div className={styles.tab_wrapper}>\n          <div\n            className={styles.tab}\n            style={{ background: this.props.color }}\n            onClick={this.handleTabClick}\n          >\n            <div className={styles.icon}>\n              <span className={this.props.icon} />\n            </div>\n            <div className={styles.label}>{this.props.label}</div>\n          </div>\n        </div>\n        <div\n          ref={this.handlePoppedRef}\n          className={styles.popped}\n          style={{\n            borderColor: this.props.color,\n            right: this.props.visible ? 15 + this.state.width : 0,\n            top: -100\n          }}\n        >\n          <div className={styles.header} style={{ background: this.props.color }}>\n            <div className={styles.close + ' fe-x'} onClick={this.handleClose} />\n            <div className={styles.header_label}>{this.props.header}</div>\n          </div>\n          <div className={styles.body} style={{ background: this.props.color }}>\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport { PopTab } from 'components/poptab/PopTab';\nimport dateFormat from 'dateformat';\nimport { getAssets, getFlowDetails } from 'external';\nimport { FlowDefinition, SPEC_VERSION, FlowDetails, FlowMetadata } from 'flowTypes';\nimport React from 'react';\nimport { Asset, AssetStore } from 'store/flowContext';\nimport { renderIf } from 'utils';\n\nimport styles from './RevisionExplorer.module.scss';\nimport i18n from 'config/i18n';\nimport { PopTabType } from 'config/interfaces';\n\nconst cx: any = classNames.bind(styles);\n\nexport interface User {\n  email: string;\n  name: string;\n}\n\nexport interface SaveResult {\n  revision: Revision;\n  metadata: FlowMetadata;\n}\n\nexport interface Revision {\n  id: number;\n  version: string;\n  revision: number;\n  created_on: string;\n  user: User;\n  current: boolean;\n  status: string;\n}\n\nexport interface RevisionExplorerProps {\n  assetStore: AssetStore;\n  loadFlowDefinition: (details: FlowDetails, assetStore: AssetStore) => void;\n  createNewRevision: () => void;\n  onToggled: (visible: boolean, tab: PopTabType) => void;\n  utc?: boolean;\n  popped: string;\n}\n\nexport interface RevisionExplorerState {\n  revisions: Asset[];\n  revision: Asset;\n  definition: FlowDefinition;\n  visible: boolean;\n}\n\nexport class RevisionExplorer extends React.Component<\n  RevisionExplorerProps,\n  RevisionExplorerState\n> {\n  constructor(props: RevisionExplorerProps) {\n    super(props);\n    this.state = {\n      revisions: [],\n      revision: null,\n      definition: null,\n      visible: false\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleUpdateRevisions(): Promise<void> {\n    if (this.props.assetStore !== null) {\n      const assets = this.props.assetStore.revisions;\n      return getAssets(\n        assets.endpoint + '?version=' + SPEC_VERSION,\n        assets.type,\n        assets.id || 'id'\n      ).then((remoteAssets: Asset[]) => {\n        if (remoteAssets.length > 0) {\n          remoteAssets[0].content.current = true;\n        }\n        this.setState({ revisions: remoteAssets });\n      });\n    }\n  }\n\n  public handleTabClicked(): void {\n    this.props.onToggled(!this.state.visible, PopTabType.REVISION_HISTORY);\n\n    this.setState(\n      (prevState: RevisionExplorerState) => {\n        return { visible: !prevState.visible };\n      },\n      () => {\n        if (this.state.visible) {\n          this.handleUpdateRevisions();\n        } else {\n          if (this.state.revision && this.state.revision.id !== this.state.revisions[0].id) {\n            getFlowDetails(this.props.assetStore.revisions, this.state.revisions[0].id).then(\n              (details: FlowDetails) => {\n                this.props.loadFlowDefinition(details, this.props.assetStore);\n                this.setState({ revision: null });\n              }\n            );\n          }\n        }\n      }\n    );\n  }\n\n  public onRevisionClicked = (\n    revision: Asset\n  ): ((event: React.MouseEvent<HTMLDivElement>) => void) => {\n    return (event: React.MouseEvent<HTMLDivElement>) => {\n      event.stopPropagation();\n      event.preventDefault();\n      getFlowDetails(this.props.assetStore.revisions, revision.id).then((details: FlowDetails) => {\n        this.props.loadFlowDefinition(details, this.props.assetStore);\n        this.setState({ revision });\n      });\n    };\n  };\n\n  public onRevertClicked = (\n    revision: Asset\n  ): ((event: React.MouseEvent<HTMLDivElement>) => void) => {\n    return (event: React.MouseEvent<HTMLDivElement>) => {\n      event.stopPropagation();\n      event.preventDefault();\n      this.props.createNewRevision();\n      this.setState({ visible: false, revision: null });\n    };\n  };\n\n  public render(): JSX.Element {\n    const classes = cx({\n      [styles.visible]: this.state.visible,\n      [styles.hidden]: this.props.popped && this.props.popped !== PopTabType.REVISION_HISTORY\n    });\n\n    return (\n      <div className={classes}>\n        <div className={styles.mask} />\n        <PopTab\n          header={i18n.t('revisions.header', 'Revisions')}\n          color=\"#8e5ea7\"\n          icon=\"fe-time\"\n          label={i18n.t('revisions.label', 'Revision History')}\n          top=\"360px\"\n          visible={this.state.visible}\n          onShow={this.handleTabClicked}\n          onHide={this.handleTabClicked}\n        >\n          <div className={styles.explorer_wrapper}>\n            <div className={styles.explorer}>\n              <div className={styles.revisions}>\n                {this.state.revisions.map((asset: Asset) => {\n                  const revision = asset.content as Revision;\n\n                  const isSelected = this.state.revision && asset.id === this.state.revision.id;\n\n                  const selectedClass = revision.current || isSelected ? styles.selected : '';\n\n                  return (\n                    <div\n                      className={styles.revision + ' ' + selectedClass}\n                      key={'revision_' + asset.id}\n                      onClick={this.onRevisionClicked(asset)}\n                    >\n                      {renderIf(revision.current)(\n                        <div className={styles.button + ' ' + styles.current}>current</div>\n                      )}\n\n                      {renderIf(revision.status === 'published')(\n                        <div className={styles.button + ' ' + styles.publish}> published </div>\n                      )}\n\n                      {renderIf(isSelected && !revision.current)(\n                        <div onClick={this.onRevertClicked(asset)} className={styles.button}>\n                          revert\n                        </div>\n                      )}\n                      <div className={styles.created_on}>\n                        {dateFormat(\n                          new Date(revision.created_on),\n                          'mmmm d, yyyy, h:MM TT',\n                          this.props.utc\n                        )}\n                      </div>\n                      <div className={styles.email}>\n                        {revision.user.name || revision.user.email}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </PopTab>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport React from 'react';\nimport styles from './IssuesTab.module.scss';\nimport i18n from 'config/i18n';\nimport { FlowIssue, Action } from 'flowTypes';\nimport { PopTab } from 'components/poptab/PopTab';\nimport { renderIssue } from 'components/flow/actions/helpers';\nimport {\n  AssetMap,\n  RenderNode,\n  Asset,\n  RenderNodeMap,\n  RenderAction,\n  FlowIssueMap\n} from 'store/flowContext';\nimport { getTypeConfig } from 'config';\nimport { getType } from 'config/typeConfigs';\nimport { Type, PopTabType } from 'config/interfaces';\n\nconst cx: any = classNames.bind(styles);\n\nexport interface IssuesTabProps {\n  issues: FlowIssueMap;\n  languages: AssetMap;\n  nodes: RenderNodeMap;\n  onToggled: (visible: boolean, tab: PopTabType) => void;\n  onIssueClicked: (issueDetail: IssueDetail) => void;\n  onIssueOpened: (IssueDetail: IssueDetail) => void;\n  popped: string;\n}\n\nexport type IssueDetail = {\n  issues: FlowIssue[];\n  renderObjects: RenderObjects;\n  language: Asset;\n};\n\ntype IssueMap = {\n  [uuid: string]: IssueDetail;\n};\n\nexport interface IssuesTabState {\n  visible: boolean;\n  selectedIssue: FlowIssue;\n  issueDetails: IssueDetail[];\n}\n\nexport interface RenderObjects {\n  renderNode: RenderNode;\n  renderAction?: RenderAction;\n}\n\nconst getIssueKey = (issue: FlowIssue) => {\n  return (issue.action_uuid || issue.node_uuid) + (issue.language || '');\n};\n\nconst getRenderObjects = (issue: FlowIssue, nodes: RenderNodeMap): RenderObjects => {\n  const renderNode = nodes[issue.node_uuid];\n  let renderAction: RenderAction = null;\n\n  if (issue.action_uuid && renderNode) {\n    const actionIdx = issue.action_uuid\n      ? renderNode.node.actions.findIndex((action: Action) => action.uuid === issue.action_uuid)\n      : null;\n\n    if (actionIdx > -1) {\n      const action = renderNode.node.actions[actionIdx];\n      renderAction = {\n        action,\n        config: getTypeConfig(action.type),\n        index: actionIdx\n      };\n    }\n  }\n\n  return {\n    renderNode,\n    renderAction\n  };\n};\n\nexport class IssuesTab extends React.Component<IssuesTabProps, IssuesTabState> {\n  constructor(props: IssuesTabProps) {\n    super(props);\n\n    this.state = {\n      visible: false,\n      selectedIssue: null,\n      issueDetails: this.buildIssueDetails()\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^render/]\n    });\n  }\n\n  public componentDidUpdate(prevProps: IssuesTabProps): void {\n    if (\n      this.props.issues !== prevProps.issues ||\n      prevProps.nodes !== this.props.nodes ||\n      this.props.languages !== prevProps.languages\n    ) {\n      this.setState({ issueDetails: this.buildIssueDetails() });\n    }\n  }\n\n  private buildIssueDetails(): IssueDetail[] {\n    const issueMap: IssueMap = {};\n    if (Object.keys(this.props.nodes).length > 0) {\n      for (const issues of Object.values(this.props.issues)) {\n        for (const issue of issues) {\n          const key = getIssueKey(issue);\n          let issueDetail = issueMap[key];\n          if (!issueDetail) {\n            let language = null;\n            if (issue.language && this.props.languages) {\n              language = this.props.languages[issue.language];\n            }\n\n            const renderObjects = getRenderObjects(issue, this.props.nodes);\n            if (renderObjects.renderNode && (!issue.action_uuid || renderObjects.renderAction)) {\n              issueDetail = {\n                issues: [issue],\n                renderObjects: renderObjects,\n                language\n              };\n            }\n          } else {\n            issueDetail.issues.push(issue);\n          }\n\n          if (issueDetail) {\n            issueMap[key] = issueDetail;\n          }\n        }\n      }\n    }\n\n    return Object.values(issueMap).sort((a: IssueDetail, b: IssueDetail) => {\n      if (a.language && !b.language) {\n        return 1;\n      }\n\n      if (!a.language && b.language) {\n        return -1;\n      }\n\n      if (a.language && b.language && a.language.name !== b.language.name) {\n        return a.language.name.localeCompare(b.language.name);\n      }\n\n      const nodeDifference =\n        a.renderObjects.renderNode.ui.position.top - b.renderObjects.renderNode.ui.position.top;\n\n      if (nodeDifference !== 0) {\n        return nodeDifference;\n      }\n\n      // if we are the same node and have actions sort by those\n      if (a.renderObjects.renderNode.node.uuid === b.renderObjects.renderNode.node.uuid) {\n        if (a.renderObjects.renderAction && b.renderObjects.renderAction) {\n          return a.renderObjects.renderAction.index - b.renderObjects.renderAction.index;\n        }\n      }\n      return 0;\n    });\n  }\n\n  public handleTabClicked(): void {\n    this.props.onToggled(!this.state.visible, PopTabType.ISSUES_TAB);\n\n    this.setState((prevState: IssuesTabState) => {\n      return { visible: !prevState.visible };\n    });\n  }\n\n  private handleIssueClicked(issueDetail: IssueDetail) {\n    this.props.onIssueClicked(issueDetail);\n\n    window.setTimeout(() => {\n      this.props.onIssueOpened(issueDetail);\n    }, 750);\n  }\n\n  public render(): JSX.Element {\n    let issueCount = 0;\n\n    let lastLanguage: Asset = null;\n\n    const issues = this.state.issueDetails.map((details: IssueDetail) => {\n      issueCount += details.issues.length;\n\n      let languageHeader: JSX.Element = null;\n\n      if (details.language && details.language !== lastLanguage) {\n        languageHeader = <div className={styles.language}>{details.language.name}</div>;\n      }\n\n      lastLanguage = details.language;\n\n      let typeConfig: Type = null;\n\n      if (!details.renderObjects.renderNode) {\n        return null;\n      }\n\n      if (details.renderObjects.renderAction) {\n        typeConfig = details.renderObjects.renderAction.config;\n      } else {\n        typeConfig = getTypeConfig(getType(details.renderObjects.renderNode));\n      }\n\n      const locationHeader: JSX.Element = null;\n      const issues = details.issues.map((issue: FlowIssue, num: number) => (\n        <div key={getIssueKey(issue) + num} className={styles.message}>\n          <div className={styles.header}>{typeConfig.name}:</div> {renderIssue(issue)}\n        </div>\n      ));\n\n      return (\n        <div key={getIssueKey(details.issues[0]) + '_detail'}>\n          {languageHeader}\n          <div className={styles.details} onClick={() => this.handleIssueClicked(details)}>\n            {locationHeader}\n            <div className={styles.issues_code}>{issues}</div>\n          </div>\n        </div>\n      );\n    });\n\n    const classes = cx({\n      [styles.visible]: this.state.visible,\n      [styles.hidden]: this.props.popped && this.props.popped !== PopTabType.ISSUES_TAB\n    });\n\n    return (\n      <div className={classes}>\n        <div className={styles.mask} />\n        <PopTab\n          header={`${i18n.t('issues.label', 'Flow Issues')} (${issueCount})`}\n          label={i18n.t('issues.header', 'Flow Issues')}\n          color=\"tomato\"\n          icon=\"fe-warning\"\n          top=\"416px\"\n          visible={this.state.visible}\n          onShow={this.handleTabClicked}\n          onHide={this.handleTabClicked}\n        >\n          <div className={styles.issues_wrapper}>{issues}</div>\n        </PopTab>\n      </div>\n    );\n  }\n}\n","import { combineReducers } from 'redux';\nimport editorState from 'store/editor';\nimport flowContext from 'store/flowContext';\nimport nodeEditor from 'store/nodeEditor';\n\nexport default combineReducers({\n  flowContext,\n  editorState,\n  nodeEditor\n});\n","import { EditorState, initialState as editorState } from 'store/editor';\nimport { FlowContext, initialState as flowContext } from 'store/flowContext';\nimport { initialState as nodeEditor, NodeEditor } from 'store/nodeEditor';\n\nexport default interface AppState {\n  flowContext: FlowContext;\n  editorState: EditorState;\n  nodeEditor: NodeEditor;\n}\n\nexport const initialState: AppState = {\n  flowContext,\n  editorState,\n  nodeEditor\n};\n","import { applyMiddleware, createStore, Middleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from 'store/rootReducer';\nimport AppState, { initialState } from 'store/state';\n\nconst middlewares: Middleware[] = [thunk];\n\nexport default (state: AppState = initialState) => {\n  const store = createStore(\n    rootReducer,\n    state,\n    composeWithDevTools(applyMiddleware(...middlewares))\n  );\n\n  /* istanbul ignore next */\n  if (module.hot) {\n    module.hot.accept('./rootReducer', () => {\n      const { default: nextRootReducer } = require('./rootReducer');\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport React from 'react';\nimport styles from './TranslatorTab.module.scss';\nimport i18n from 'config/i18n';\nimport { PopTab } from 'components/poptab/PopTab';\nimport { AssetMap, Asset, RenderNodeMap } from 'store/flowContext';\nimport { PopTabType, Type } from 'config/interfaces';\nimport { Action, Category, Case } from 'flowTypes';\nimport { getTypeConfig } from 'config';\nimport {\n  findTranslations,\n  getMergedByType,\n  TranslationState,\n  getFriendlyAttribute,\n  getBundleKey\n} from './helpers';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport { UpdateTranslationFilters } from 'store/thunks';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { getType } from 'config/typeConfigs';\nimport { fakePropType } from 'config/ConfigProvider';\n\nconst cx: any = classNames.bind(styles);\n\nexport enum TranslationType {\n  PROPERTY = 'property',\n  CATEGORY = 'category',\n  CASE = 'case'\n}\n\nexport interface TranslationBundle {\n  node_uuid: string;\n  action_uuid?: string;\n  translations: Translation[];\n  translated: number;\n  typeConfig: Type;\n}\n\nexport interface Translation {\n  type: TranslationType;\n  attribute: string;\n  from: string;\n  to: string;\n}\n\nexport interface TranslatorTabProps {\n  localization: { [uuid: string]: any };\n  language: Asset;\n  languages: AssetMap;\n\n  translationFilters: { categories: boolean; rules: boolean };\n\n  nodes: RenderNodeMap;\n  onToggled: (visible: boolean, tab: PopTabType) => void;\n  onTranslationClicked: (bundle: TranslationBundle) => void;\n  onTranslationOpened: (bundle: TranslationBundle) => void;\n  onTranslationFilterChanged: UpdateTranslationFilters;\n  popped: string;\n}\n\nexport interface TranslatorTabState {\n  visible: boolean;\n  selectedTranslation: Translation;\n  translationBundles: TranslationBundle[];\n  optionsVisible: boolean;\n  pctComplete: number;\n  translationFilters: { categories: boolean; rules: boolean };\n}\n\nexport class TranslatorTab extends React.Component<TranslatorTabProps, TranslatorTabState> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: TranslatorTabProps, context: any) {\n    super(props);\n\n    this.state = {\n      visible: false,\n      selectedTranslation: null,\n      translationBundles: [],\n      optionsVisible: false,\n      pctComplete: 0,\n      translationFilters: props.translationFilters || { categories: true, rules: true }\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^render/, /^toggle/]\n    });\n  }\n\n  public componentWillUnmount(): void {\n    if (this.state.visible) {\n      this.handleTabClicked();\n    }\n  }\n\n  public componentDidUpdate(prevProps: TranslatorTabProps, prevState: TranslatorTabState): void {\n    // traceUpdate(this, prevProps, prevState);\n    if (\n      prevProps.translationFilters !== this.props.translationFilters ||\n      prevProps.localization !== this.props.localization ||\n      prevProps.language !== this.props.language ||\n      !prevState.visible ||\n      prevState.translationFilters !== this.state.translationFilters\n    ) {\n      this.handleUpdateTranslations();\n    }\n  }\n\n  private handleUpdateTranslations(): void {\n    const translationBundles: TranslationBundle[] = [];\n    Object.keys(this.props.nodes).forEach((node_uuid: string) => {\n      const renderNode = this.props.nodes[node_uuid];\n\n      // check for router level translations\n      if (\n        renderNode.node.router &&\n        (this.state.translationFilters.categories || this.state.translationFilters.rules)\n      ) {\n        const typeConfig = getTypeConfig(getType(renderNode));\n\n        let translations: Translation[] = [];\n        if (this.state.translationFilters.categories) {\n          const localizeableKeys = ['name'];\n          renderNode.node.router.categories.forEach((category: Category) => {\n            translations.push(\n              ...findTranslations(\n                TranslationType.CATEGORY,\n                localizeableKeys,\n                category,\n                this.props.localization\n              )\n            );\n          });\n        }\n\n        if (this.state.translationFilters.rules) {\n          const localizeableKeys = ['arguments'];\n          const switchRouter = getSwitchRouter(renderNode.node);\n          if (switchRouter) {\n            switchRouter.cases.forEach((kase: Case) => {\n              translations.push(\n                ...findTranslations(\n                  TranslationType.CASE,\n                  localizeableKeys,\n                  kase,\n                  this.props.localization\n                )\n              );\n            });\n          }\n        }\n\n        if (translations.length > 0) {\n          translationBundles.push({\n            typeConfig,\n            node_uuid,\n            translations,\n            translated: translations.filter((translation: Translation) => !!translation.to).length\n          });\n        }\n      } else {\n        // find attributes from each action\n        renderNode.node.actions.forEach((action: Action) => {\n          const typeConfig = getTypeConfig(action.type);\n          const translations = findTranslations(\n            TranslationType.PROPERTY,\n            typeConfig.localizeableKeys || [],\n            action,\n            this.props.localization\n          );\n\n          if (translations.length > 0) {\n            translationBundles.push({\n              typeConfig,\n              node_uuid,\n              action_uuid: action.uuid,\n              translations,\n              translated: translations.filter((translation: Translation) => !!translation.to).length\n            });\n          }\n        });\n      }\n    });\n\n    const counts = { total: 0, complete: 0 };\n    translationBundles.reduce((counts, bundle) => {\n      counts.total += bundle.translations.length;\n      counts.complete += bundle.translated;\n      return counts;\n    }, counts);\n\n    const pctComplete = counts.total > 0 ? Math.round((counts.complete / counts.total) * 100) : 0;\n\n    const bundles = translationBundles\n      .filter((bundle: TranslationBundle) => bundle.translated < bundle.translations.length)\n      .sort((a: TranslationBundle, b: TranslationBundle) => {\n        return b.translations.length - b.translated - (a.translations.length - a.translated);\n      });\n\n    if (\n      pctComplete !== this.state.pctComplete ||\n      bundles.length !== this.state.translationBundles.length\n    ) {\n      this.setState({\n        pctComplete,\n        translationBundles: bundles\n      });\n    }\n  }\n\n  public handleTabClicked(): void {\n    this.props.onToggled(!this.state.visible, PopTabType.TRANSLATOR_TAB);\n    this.setState((prevState: TranslatorTabState) => {\n      return { visible: !prevState.visible };\n    });\n  }\n\n  public toggleOptions(): void {\n    this.setState({ optionsVisible: !this.state.optionsVisible });\n  }\n\n  private toggleCategories(categories: boolean): void {\n    this.setState(\n      { translationFilters: { categories, rules: this.state.translationFilters.rules } },\n      () => {\n        this.props.onTranslationFilterChanged(this.state.translationFilters);\n      }\n    );\n  }\n  private toggleRules(rules: boolean): void {\n    this.setState(\n      { translationFilters: { rules, categories: this.state.translationFilters.categories } },\n      () => {\n        this.props.onTranslationFilterChanged(this.state.translationFilters);\n      }\n    );\n  }\n\n  private renderMissing(key: string, from: string, summary: string) {\n    if (from) {\n      return (\n        <div key={this.props.language.id + key} className={styles.item}>\n          <div className={styles.text + ' ' + styles.from_text}>{from}</div>\n          <div className={styles.text + ' ' + styles.attribute}>{summary}</div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  private handleTranslationClicked(bundle: TranslationBundle) {\n    this.props.onTranslationClicked(bundle);\n\n    window.setTimeout(() => {\n      this.props.onTranslationOpened(bundle);\n    }, 750);\n  }\n\n  private handleChangeLanguageClick(e: any): void {\n    this.context.config.onChangeLanguage(this.props.language.id, this.props.language.name);\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  public render(): JSX.Element {\n    // only show change button if container set up to handle it\n    const showChangeButton = this.state.optionsVisible && this.context.config.onChangeLanguage;\n\n    const classes = cx({\n      [styles.visible]: this.state.visible,\n      [styles.hidden]: this.props.popped && this.props.popped !== PopTabType.TRANSLATOR_TAB\n    });\n\n    const optionsClasses = cx({\n      [styles.options]: true,\n      [styles.options_visible]: this.state.optionsVisible,\n      [styles.change_visible]: showChangeButton\n    });\n\n    const filledClasses = cx({\n      [styles.filled]: true,\n      [styles.hundredpct]: this.state.pctComplete === 100\n    });\n\n    const wrapperClasses = cx({\n      [styles.translations_wrapper]: true,\n      [styles.complete]: this.state.translationBundles.length === 0\n    });\n\n    return (\n      <div className={classes}>\n        <PopTab\n          header={`${this.props.language.name} ${i18n.t('translation.label', 'Translations')}`}\n          label={i18n.t('translation.header', 'Flow Translation')}\n          color=\"#777\"\n          icon=\"fe-language\"\n          top=\"243px\"\n          visible={this.state.visible}\n          onShow={this.handleTabClicked}\n          onHide={this.handleTabClicked}\n        >\n          <div key={'translation_wrapper'} className={wrapperClasses}>\n            {this.state.translationBundles.map((bundle: TranslationBundle) => {\n              return (\n                <div\n                  key={this.props.language.id + getBundleKey(bundle)}\n                  className={styles.translate_block}\n                  onClick={() => {\n                    this.handleTranslationClicked(bundle);\n                  }}\n                >\n                  <div className={styles.needs_translation}>\n                    <div className={styles.type_name}>{bundle.typeConfig.name}</div>\n                    {this.renderMissing(\n                      getBundleKey(bundle) + 'categories',\n                      getMergedByType(bundle, TranslationState.MISSING, TranslationType.CATEGORY),\n                      getFriendlyAttribute('categories')\n                    )}\n\n                    {this.renderMissing(\n                      getBundleKey(bundle) + 'rules',\n\n                      getMergedByType(bundle, TranslationState.MISSING, TranslationType.CASE),\n                      getFriendlyAttribute('cases')\n                    )}\n                    {bundle.translations\n                      .filter(\n                        translation =>\n                          !translation.to && translation.type === TranslationType.PROPERTY\n                      )\n                      .map(translation =>\n                        this.renderMissing(\n                          getBundleKey(bundle) + translation.from,\n                          translation.from,\n                          getFriendlyAttribute(translation.attribute)\n                        )\n                      )}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          <div className={optionsClasses} onClick={this.toggleOptions}>\n            <div className={styles.header}>\n              <div className={styles.progress_bar}>\n                <div\n                  style={{ width: `${this.state.pctComplete}%` }}\n                  className={filledClasses}\n                ></div>\n              </div>\n              <div className={styles.toggle}>\n                <span className=\"fe-arrow-up\"></span>\n              </div>\n            </div>\n            <div className={styles.filters}>\n              <div className={styles.checkboxes}>\n                <div>\n                  <CheckboxElement\n                    name={i18n.t('forms.categories', 'categories')}\n                    checked={this.state.translationFilters.categories}\n                    description={'Categories'}\n                    checkboxClassName={styles.checkbox}\n                    onChange={this.toggleCategories}\n                  />\n                </div>\n                <div>\n                  <CheckboxElement\n                    name={i18n.t('forms.rules', 'rules')}\n                    checked={this.state.translationFilters.rules}\n                    description={'Rule Arguments'}\n                    checkboxClassName={styles.checkbox}\n                    onChange={this.toggleRules}\n                  />\n                </div>\n              </div>\n              <div className={styles.pct_complete}>{this.state.pctComplete}%</div>\n            </div>\n            <div className={styles.changeLanguage}>\n              {showChangeButton && (\n                <button onClick={this.handleChangeLanguageClick}>\n                  {i18n.t('forms.use_as_default_language', 'Use as default language')}\n                </button>\n              )}\n            </div>\n          </div>\n        </PopTab>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Button, { ButtonTypes } from 'components/button/Button';\nimport Dialog from 'components/dialog/Dialog';\nimport { Fixy } from 'components/fixy/Fixy';\nimport ConnectedFlow from 'components/flow/Flow';\nimport styles from 'components/index.module.scss';\nimport ConnectedLanguageSelector from 'components/languageselector/LanguageSelector';\nimport Loading from 'components/loading/Loading';\nimport Modal from 'components/modal/Modal';\nimport { RevisionExplorer } from 'components/revisions/RevisionExplorer';\nimport { IssuesTab, IssueDetail } from 'components/issues/IssuesTab';\nimport ConfigProvider from 'config';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { FlowDefinition, FlowEditorConfig, AnyAction } from 'flowTypes';\nimport * as React from 'react';\nimport { connect, Provider as ReduxProvider } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport createStore from 'store/createStore';\nimport { ModalMessage } from 'store/editor';\nimport { Asset, Assets, AssetStore, RenderNodeMap, FlowIssueMap } from 'store/flowContext';\nimport { getCurrentDefinition } from 'store/helpers';\nimport AppState from 'store/state';\nimport {\n  CreateNewRevision,\n  createNewRevision,\n  DispatchWithState,\n  FetchFlow,\n  fetchFlow,\n  LoadFlowDefinition,\n  loadFlowDefinition,\n  MergeEditorState,\n  mergeEditorState,\n  onOpenNodeEditor,\n  OnOpenNodeEditor,\n  handleLanguageChange,\n  HandleLanguageChange,\n  UpdateTranslationFilters,\n  updateTranslationFilters\n} from 'store/thunks';\nimport { ACTIVITY_INTERVAL, downloadJSON, renderIf, onNextRender } from 'utils';\nimport { PopTabType } from 'config/interfaces';\nimport { TranslatorTab, TranslationBundle } from './translator/TranslatorTab';\nimport i18n from 'config/i18n';\n\nconst { default: PageVisibility } = require('react-page-visibility');\n\nexport interface FlowEditorContainerProps {\n  config: FlowEditorConfig;\n}\n\nexport interface FlowEditorStoreProps {\n  assetStore: AssetStore;\n  baseLanguage: Asset;\n  language: Asset;\n  languages: Assets;\n  simulating: boolean;\n  translating: boolean;\n  fetchingFlow: boolean;\n  definition: FlowDefinition;\n  issues: FlowIssueMap;\n  fetchFlow: FetchFlow;\n  loadFlowDefinition: LoadFlowDefinition;\n  createNewRevision: CreateNewRevision;\n  mergeEditorState: MergeEditorState;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  handleLanguageChange: HandleLanguageChange;\n  nodes: RenderNodeMap;\n  modalMessage: ModalMessage;\n  saving: boolean;\n  scrollToNode: string;\n  scrollToAction: string;\n  popped: string;\n  updateTranslationFilters: UpdateTranslationFilters;\n}\n\nconst hotStore = createStore();\n\nexport const getLabel = (): JSX.Element => {\n  return <div>testing</div>;\n};\n\n// Root container, wires up context-providers\nexport const FlowEditorContainer: React.SFC<FlowEditorContainerProps> = ({ config }) => {\n  return (\n    <ConfigProvider config={{ ...config }}>\n      <ReduxProvider store={hotStore as any}>\n        <ConnectedFlowEditor />\n      </ReduxProvider>\n    </ConfigProvider>\n  );\n};\n\nexport const contextTypes = {\n  config: fakePropType\n};\n\nexport const editorContainerSpecId = 'editor-container';\nexport const editorSpecId = 'editor';\n\n/**\n * The main editor view for editing a flow\n */\nexport class FlowEditor extends React.Component<FlowEditorStoreProps> {\n  public static contextTypes = contextTypes;\n\n  constructor(props: FlowEditorStoreProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public componentDidMount(): void {\n    const { endpoints, flow, forceSaveOnLoad } = this.context.config;\n    this.props.fetchFlow(endpoints, flow, forceSaveOnLoad);\n  }\n\n  private handleDownloadClicked(): void {\n    downloadJSON(getCurrentDefinition(this.props.definition, this.props.nodes), 'definition');\n  }\n\n  private handleVisibilityChanged(visible: boolean): void {\n    this.props.mergeEditorState({\n      visible,\n      activityInterval: ACTIVITY_INTERVAL\n    });\n  }\n\n  public getAlertModal(): JSX.Element {\n    if (!this.props.modalMessage) {\n      return null;\n    }\n\n    return (\n      <Modal width=\"600px\" show={true}>\n        <Dialog\n          className={styles.alert_modal}\n          title={this.props.modalMessage.title}\n          headerClass=\"alert\"\n          buttons={{\n            primary: {\n              name: 'Ok',\n              onClick: () => {\n                this.props.mergeEditorState({ modalMessage: null });\n              }\n            }\n          }}\n        >\n          <div className={styles.alert_body}>{this.props.modalMessage.body}</div>\n        </Dialog>\n      </Modal>\n    );\n  }\n\n  public getSavingIndicator(): JSX.Element {\n    if (!this.props.saving) {\n      return null;\n    }\n\n    return (\n      <div id=\"saving_animation\" className={styles.saving}>\n        <Fixy>\n          <Loading units={5} color=\"#3498db\" size={7} />\n        </Fixy>\n      </div>\n    );\n  }\n\n  public getFooter(): JSX.Element {\n    return !this.props.fetchingFlow && this.context.config.showDownload ? (\n      <div className={styles.footer}>\n        <div className={styles.download_button}>\n          <Button\n            name={i18n.t('buttons.download', 'Download')}\n            onClick={this.handleDownloadClicked}\n            type={ButtonTypes.primary}\n          />\n        </div>\n      </div>\n    ) : null;\n  }\n\n  private handleLanguageSetting(issueDetail: IssueDetail): void {\n    if (issueDetail.language) {\n      this.props.handleLanguageChange(issueDetail.language);\n    } else {\n      this.props.handleLanguageChange(this.props.baseLanguage);\n    }\n  }\n\n  public handleOpenIssue(issueDetail: IssueDetail): void {\n    this.handleLanguageSetting(issueDetail);\n    this.props.onOpenNodeEditor({\n      originalNode: issueDetail.renderObjects.renderNode,\n      originalAction: issueDetail.renderObjects.renderAction\n        ? (issueDetail.renderObjects.renderAction.action as AnyAction)\n        : null\n    });\n  }\n\n  private handleScrollToNode(node_uuid: string, action_uuid: string): void {\n    if (this.props.scrollToNode === node_uuid && this.props.scrollToAction === action_uuid) {\n      this.props.mergeEditorState({\n        scrollToNode: null,\n        scrollToAction: null\n      });\n    }\n\n    onNextRender(() => {\n      this.props.mergeEditorState({\n        scrollToNode: node_uuid,\n        scrollToAction: action_uuid\n      });\n    });\n  }\n\n  public handleScrollToTranslation(translation: TranslationBundle): void {\n    this.handleScrollToNode(translation.node_uuid, translation.action_uuid);\n  }\n\n  private handleOpenTranslation(translation: TranslationBundle): void {\n    const renderNode = this.props.nodes[translation.node_uuid];\n    const action = translation.action_uuid\n      ? renderNode.node.actions.find(action => action.uuid === translation.action_uuid)\n      : null;\n\n    this.props.onOpenNodeEditor({\n      originalNode: renderNode,\n      originalAction: action\n    });\n  }\n\n  public handleScrollToIssue(issueDetail: IssueDetail): void {\n    this.handleLanguageSetting(issueDetail);\n    const issue = issueDetail.issues[0];\n    this.handleScrollToNode(issue.node_uuid, issue.action_uuid);\n  }\n\n  private handleTabPopped(visible: boolean, tab: PopTabType): void {\n    if (visible) {\n      this.props.mergeEditorState({ popped: tab });\n    } else {\n      this.props.mergeEditorState({ popped: null });\n    }\n  }\n\n  public componentDidUpdate(prevProps: FlowEditorStoreProps): void {\n    // traceUpdate(this, prevProps);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <PageVisibility onChange={this.handleVisibilityChanged}>\n        <div\n          id={editorContainerSpecId}\n          className={this.props.translating ? styles.translating : undefined}\n          data-spec={editorContainerSpecId}\n        >\n          {this.getFooter()}\n          {this.getAlertModal()}\n          <div className={styles.editor} data-spec={editorSpecId}>\n            {renderIf(\n              Object.keys(this.props.nodes || {}).length > 0 &&\n                this.props.languages &&\n                Object.keys(this.props.languages.items).length > 0\n            )(<ConnectedLanguageSelector />)}\n\n            {this.getSavingIndicator()}\n\n            {renderIf(this.props.definition && this.props.language && !this.props.fetchingFlow)(\n              <ConnectedFlow />\n            )}\n\n            {renderIf(this.props.definition && this.props.translating && !this.props.fetchingFlow)(\n              <TranslatorTab\n                language={this.props.language}\n                languages={this.props.languages ? this.props.languages.items : {}}\n                localization={\n                  this.props.definition && this.props.language\n                    ? this.props.definition.localization[this.props.language.id]\n                    : {}\n                }\n                onTranslationClicked={this.handleScrollToTranslation}\n                onTranslationOpened={this.handleOpenTranslation}\n                onTranslationFilterChanged={this.props.updateTranslationFilters}\n                translationFilters={\n                  this.props.definition ? this.props.definition._ui.translation_filters : null\n                }\n                nodes={this.props.nodes}\n                onToggled={this.handleTabPopped}\n                popped={this.props.popped}\n              />\n            )}\n\n            <RevisionExplorer\n              loadFlowDefinition={this.props.loadFlowDefinition}\n              createNewRevision={this.props.createNewRevision}\n              assetStore={this.props.assetStore}\n              onToggled={this.handleTabPopped}\n              popped={this.props.popped}\n            />\n\n            {renderIf(Object.keys(this.props.issues).length > 0)(\n              <IssuesTab\n                issues={this.props.issues}\n                onIssueClicked={this.handleScrollToIssue}\n                onIssueOpened={this.handleOpenIssue}\n                languages={this.props.languages ? this.props.languages.items : {}}\n                nodes={this.props.nodes}\n                onToggled={this.handleTabPopped}\n                popped={this.props.popped}\n              />\n            )}\n            <div id=\"portal-root\" />\n            <div id=\"canvas-portal\" />\n          </div>\n        </div>\n      </PageVisibility>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  flowContext: { definition, issues, nodes, assetStore, baseLanguage },\n  editorState: {\n    translating,\n    language,\n    fetchingFlow,\n    simulating,\n    modalMessage,\n    saving,\n    scrollToAction,\n    scrollToNode,\n    popped\n  }\n}: AppState) => {\n  const languages = assetStore ? assetStore.languages : null;\n\n  return {\n    popped,\n    baseLanguage,\n    modalMessage,\n    saving,\n    simulating,\n    assetStore,\n    translating,\n    language,\n    fetchingFlow,\n    definition,\n    issues,\n    nodes,\n    languages,\n    scrollToAction,\n    scrollToNode\n  };\n};\n\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      fetchFlow,\n      loadFlowDefinition,\n      createNewRevision,\n      mergeEditorState,\n      onOpenNodeEditor,\n      handleLanguageChange,\n      updateTranslationFilters\n    },\n    dispatch\n  );\n\nexport const ConnectedFlowEditor = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FlowEditor);\n\nexport default FlowEditorContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './global.module.scss';\nimport 'static/fonts/floweditor/style.css';\n\nimport FlowEditor from 'components';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport { setHTTPTimeout } from 'external';\n\n// bring in our temba-components if they aren't already registered\nif (typeof customElements !== 'undefined' && !customElements.get('temba-textinput')) {\n  import('@nyaruka/temba-components').then(() => {\n    console.log('Loading temba components');\n  });\n}\n\nwindow.showFlowEditor = (ele, config) => {\n  if (config.httpTimeout) {\n    setHTTPTimeout(config.httpTimeout);\n  }\n\n  ReactDOM.render(<FlowEditor config={config} />, ele);\n};\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}